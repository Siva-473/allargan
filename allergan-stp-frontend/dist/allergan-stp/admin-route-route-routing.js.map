{"version":3,"sources":["webpack:///./src/app/admin/admin-side-nav/admin-side-nav.component.css","webpack:///./src/app/admin/admin-side-nav/admin-side-nav.component.html","webpack:///./src/app/admin/admin-side-nav/admin-side-nav.component.ts","webpack:///./src/app/admin/admin-top-nav/admin-top-nav.component.css","webpack:///./src/app/admin/admin-top-nav/admin-top-nav.component.html","webpack:///./src/app/admin/admin-top-nav/admin-top-nav.component.ts","webpack:///./src/app/admin/admin.component.html","webpack:///./src/app/admin/admin.component.ts","webpack:///./src/app/admin/home/add-question/add-question.component.css","webpack:///./src/app/admin/home/add-question/add-question.component.html","webpack:///./src/app/admin/home/add-question/add-question.component.ts","webpack:///./src/app/admin/home/add-quiz/add-quiz.component.css","webpack:///./src/app/admin/home/add-quiz/add-quiz.component.html","webpack:///./src/app/admin/home/add-quiz/add-quiz.component.ts","webpack:///./src/app/admin/home/assets/add-asset/add-asset.component.css","webpack:///./src/app/admin/home/assets/add-asset/add-asset.component.html","webpack:///./src/app/admin/home/assets/add-asset/add-asset.component.ts","webpack:///./src/app/admin/home/assets/add-asset/index.ts","webpack:///./src/app/admin/home/assets/assets.component.css","webpack:///./src/app/admin/home/assets/assets.component.html","webpack:///./src/app/admin/home/assets/assets.component.ts","webpack:///./src/app/admin/home/assets/edit-asset/edit-asset.component.css","webpack:///./src/app/admin/home/assets/edit-asset/edit-asset.component.html","webpack:///./src/app/admin/home/assets/edit-asset/edit-asset.component.ts","webpack:///./src/app/admin/home/assets/index.ts","webpack:///./src/app/admin/home/batch-import/batch-import.component.css","webpack:///./src/app/admin/home/batch-import/batch-import.component.html","webpack:///./src/app/admin/home/batch-import/batch-import.component.ts","webpack:///./src/app/admin/home/clone-quiz/clone-quiz.component.css","webpack:///./src/app/admin/home/clone-quiz/clone-quiz.component.html","webpack:///./src/app/admin/home/clone-quiz/clone-quiz.component.ts","webpack:///./src/app/admin/home/edit-question/edit-question.component.css","webpack:///./src/app/admin/home/edit-question/edit-question.component.html","webpack:///./src/app/admin/home/edit-question/edit-question.component.ts","webpack:///./src/app/admin/home/edit-quiz/edit-quiz.component.css","webpack:///./src/app/admin/home/edit-quiz/edit-quiz.component.html","webpack:///./src/app/admin/home/edit-quiz/edit-quiz.component.ts","webpack:///./src/app/admin/home/edit-user/edit-user.component.css","webpack:///./src/app/admin/home/edit-user/edit-user.component.html","webpack:///./src/app/admin/home/edit-user/edit-user.component.ts","webpack:///./src/app/admin/home/edit-user/index.ts","webpack:///./src/app/admin/home/group-mapping/group.mapping.component.css","webpack:///./src/app/admin/home/group-mapping/group.mapping.component.html","webpack:///./src/app/admin/home/group-mapping/group.mapping.component.ts","webpack:///./src/app/admin/home/groups/group.component.css","webpack:///./src/app/admin/home/groups/group.component.html","webpack:///./src/app/admin/home/groups/group.component.ts","webpack:///./src/app/admin/home/question-bank/question-bank.component.css","webpack:///./src/app/admin/home/question-bank/question-bank.component.html","webpack:///./src/app/admin/home/question-bank/question-bank.component.ts","webpack:///./src/app/admin/home/quiz/quiz.component.css","webpack:///./src/app/admin/home/quiz/quiz.component.html","webpack:///./src/app/admin/home/quiz/quiz.component.ts","webpack:///./src/app/admin/model/Answer.ts","webpack:///./src/app/admin/model/AnswerData.ts","webpack:///./src/app/admin/model/EditUser.ts","webpack:///./src/app/admin/model/Question.ts","webpack:///./src/app/admin/model/Quize.ts","webpack:///./src/app/admin/model/editUserName.ts","webpack:///./src/app/admin/model/managerDTO.ts","webpack:///./src/app/admin/model/taDto.ts","webpack:///./src/app/admin/route/route-routing.ts","webpack:///./src/app/admin/services/userservices.ts"],"names":[],"mappings":"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","file":"admin-route-route-routing.js","sourcesContent":["module.exports = \".left_panel.left_panel_list .nav_list > li > a.router-link-active {\\r\\n    color: #555;\\r\\n    background-color:red;\\r\\n  }\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYWRtaW4vYWRtaW4tc2lkZS1uYXYvYWRtaW4tc2lkZS1uYXYuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLFdBQVc7SUFDWCxvQkFBb0I7RUFDdEIiLCJmaWxlIjoic3JjL2FwcC9hZG1pbi9hZG1pbi1zaWRlLW5hdi9hZG1pbi1zaWRlLW5hdi5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmxlZnRfcGFuZWwubGVmdF9wYW5lbF9saXN0IC5uYXZfbGlzdCA+IGxpID4gYS5yb3V0ZXItbGluay1hY3RpdmUge1xyXG4gICAgY29sb3I6ICM1NTU7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOnJlZDtcclxuICB9Il19 */\"","module.exports = \"    <!-- sidebar  start -->\\n    <aside class=\\\"left_panel\\\">\\n        <div class=\\\"left_panel_list\\\">\\n            <ul class=\\\"nav_list\\\">\\n                <li class=\\\"users\\\" (click)=\\\"navClick($event)\\\"  routerLinkActive=\\\"active\\\" [routerLinkActiveOptions]=\\\"{exact: true}\\\"  ><a \\n                    \\n                     class='clickpopa' data-attr=\\\"1\\\" [routerLink]=\\\"['/admin']\\\">Users</a></li>\\n                <li class=\\\"groups\\\" (click)=\\\"navClick($event)\\\"  routerLinkActive=\\\"active\\\"  >\\n                    <a class='clickpopa' data-attr=\\\"2\\\" [routerLink]=\\\"['/admin/group']\\\" >Groups</a>\\n                </li>\\n                <li class=\\\"assets\\\" (click)=\\\"navClick($event)\\\"  routerLinkActive=\\\"active\\\"  >\\n                    <a class='clickpopa' data-attr=\\\"3\\\" [routerLink]=\\\"['/admin/asset']\\\">Assets</a>\\n                </li>\\n                <li class=\\\"question\\\" (click)=\\\"navClick($event)\\\" routerLinkActive=\\\"active\\\" >\\n                    <a class='clickpopa' data-attr=\\\"3\\\" [routerLink]=\\\"['/admin/questionBank']\\\" >Question Bank</a>\\n                </li>\\n                <li class=\\\"quiz\\\" (click)=\\\"navClick($event)\\\" routerLinkActive=\\\"active\\\" >\\n                    <a class='clickpopa'  data-attr=\\\"6\\\" [routerLink]=\\\"['/admin/quiz']\\\" >QUIZ</a>\\n                </li>\\n \\t\\t\\t\\t<li class=\\\"import\\\" (click)=\\\"navClick($event)\\\" routerLinkActive=\\\"active\\\"  >\\n                     <a class='clickpopa' data-attr=\\\"5\\\" [routerLink]=\\\"['/admin/batchimport']\\\" >Batch Import</a>\\n                    </li>\\n                <!-- <li class=\\\"meta_deta dropdown\\\"><a href=\\\"#\\\" class=\\\" dropdown-toggle\\\" data-toggle=\\\"dropdown\\\">Meta Data<i class=\\\"fas fa-angle-down\\\"></i></a>\\n                    <div class=\\\"dropdown-menu\\\">\\n                        <ul>\\n                            <li><a href=\\\"#\\\">Link 1</a></li>\\n                            <li><a href=\\\"#\\\">Link 2</a></li>\\n                            <li><a href=\\\"#\\\">Link 3</a></li>\\n                        </ul>\\n                    </div>\\n                </li>\\n                <li class=\\\"reports dropdown\\\"><a href=\\\"#\\\" class=\\\" dropdown-toggle\\\" data-toggle=\\\"dropdown\\\">Reports <i class=\\\"fas fa-angle-down\\\"></i></a>\\n                    <div class=\\\"dropdown-menu\\\">\\n\\n\\n                        <ul>\\n                            <li><a href=\\\"#\\\">Link 1</a></li>\\n                            <li><a href=\\\"#\\\">Link 2</a></li>\\n                            <li><a href=\\\"#\\\">Link 3</a></li>\\n                        </ul>\\n                    </div>\\n                </li> -->\\n              \\n            </ul>\\n        </div>\\n    </aside><!-- sidebar  end -->\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-admin-side-nav',\n  templateUrl: './admin-side-nav.component.html',\n  styleUrls: ['./admin-side-nav.component.css']\n})\nexport class AdminSideNavComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n  status: boolean = false;\n  navClick($event){\n    console.log($event)\n    $event.stopPropagation();\n    $event.preventDefault();\n    // this.status = !this.status;\n    $event.target.parentElement.classList.add('active')\n  }\n\n \n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FkbWluL2FkbWluLXRvcC1uYXYvYWRtaW4tdG9wLW5hdi5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"\\n\\n<div class=\\\"container\\\">\\n    <div class=\\\"dash_header\\\">\\n        <div class=\\\"row align-items-center\\\">\\n            <div class=\\\"col-sm-6 col-md-6 col-lg-6\\\">\\n                <div class=\\\"logo\\\">\\n                    <a href=\\\"\\\"><img src=\\\"assets/images/logo.png\\\"></a>\\n                </div>\\n            </div>\\n            <div class=\\\"col-sm-6 col-md-6 col-lg-6 \\\">\\n                <div class=\\\"header_right text-right\\\">\\n                    <p>Welcome <span>{{currentUser.name || currentUser.firstName}}</span>!</p>\\n                    <a href=\\\"\\\" id=\\\"home_btn\\\"><span></span></a>\\n                </div>\\n            </div>\\n\\n        </div>\\n    </div>\\n</div>\\n\\n\\n<!-- header end -->\"","import { Component, OnInit } from '@angular/core';\nimport {User} from '../../models/user'\nimport { from } from 'rxjs';\n@Component({\n  selector: 'app-admin-top-nav',\n  templateUrl: './admin-top-nav.component.html',\n  styleUrls: ['./admin-top-nav.component.css']\n})\nexport class AdminTopNavComponent implements OnInit {\n  currentUser: User;\n  constructor() { \n    this.currentUser = JSON.parse(localStorage.getItem('currentUser'));\n  }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\\n \\n<app-admin-top-nav></app-admin-top-nav>\\n<router-outlet></router-outlet>\\n    <!-- Page section start -->\\n    <main class=\\\"main_container\\\">\\n        <div class=\\\"container\\\">\\n            <div class=\\\"main_con_inner\\\">\\n          \\n\\n                <app-admin-side-nav></app-admin-side-nav>\\n\\n                <!-- right section  start -->\\n                <section class=\\\"right_panel\\\">\\n                      <div class=\\\"users_box hide_tab active\\\" id=\\\"pop_1\\\" >\\n                            <div class=\\\"right_panel_inner\\\">\\n                                  <div class=\\\"rph_header\\\">\\n                                      <div class=\\\"row\\\">\\n                                          <div class=\\\"col-sm-6 col-md-6 col-lg-6 rph_left\\\">\\n                                              <h5>Users</h5>\\n                                          </div>\\n\\n                                          <div class=\\\"col-sm-6 col-md-6 col-lg-6\\\">\\n                                              <div class=\\\"rph_right\\\">\\n                                                  <form class=\\\"serach_form\\\">\\n                                                    \\n                                                      <!-- <button type=\\\"button\\\" class=\\\"search_btn\\\"><i class=\\\"fas fa-search\\\"></i>\\n                                                        <div class=\\\"serach_box\\\"><input type=\\\"text\\\" placeholder=\\\"Search..\\\"></div>\\n                                                      </button> -->\\n\\n                                                  </form>\\n                                              </div>\\n                                          </div>\\n                                      </div>\\n                                  </div>\\n                                  <div class=\\\"right_panel_box\\\">\\n                                    <div class=\\\"table-responsive\\\">\\n                                      <table class=\\\"table\\\">\\n                                          <thead>\\n                                              <tr>\\n                                                  <th>First Name</th>\\n                                                  <th>Email ID</th>\\n                                                  <th>Job Title</th>\\n                                                  <th>System Roles</th>\\n                                                  <th></th>\\n                                                  <th></th>\\n                                                  <!-- <th></th> -->\\n                                              </tr>\\n                                          </thead>\\n                                          <tbody>\\n                                              <tr *ngFor=\\\"let user of users ; index as i\\\">\\n                                                  <td>\\n                                                      <!-- <a routerLink=\\\"{{'/admin/user/edit/'+user.id}}\\\"> -->\\n                                                        {{user.firstName}}\\n                                                    <!-- </a> -->\\n                                                  </td>\\n                                                  <!-- <td>{{user.lastName}}</td> -->\\n                                                  <td>{{user.emailID}}</td>\\n                                                  <td>{{user.roleName}}</td>\\n                                                  <td><div *ngFor=\\\"let role of user.role;\\\">{{role.name.replace('ROLE_', '')+\\\",\\\"|lowercase}}</div></td>\\n                                                  <!-- <td *ngIf=\\\"user.status==true\\\" [ngClass]=\\\"{ 'approved' : true}\\\">Approved</td>\\n                                                  <td  *ngIf=\\\"user.status!=true\\\" [ngClass]=\\\"{'pending':true}\\\">Pending</td> -->\\n                                                  <td>\\n                                                      <div class=\\\"custom-switch custom-switch-label-onoff pl-0\\\">\\n                                                          <input class=\\\"custom-switch-input\\\" id=\\\"{{'btn_0'+i}}\\\" [checked]=\\\"(user.status==true) ? false: true\\\"  (change) =\\\"status($event,user.id)\\\" type=\\\"checkbox\\\">\\n                                                          <label class=\\\"custom-switch-btn\\\" for=\\\"{{'btn_0'+i}}\\\"></label>\\n                                                      </div>\\n                                                  </td>\\n                                                  <td>\\n                                                      <div class=\\\"info_btn\\\"><button type=\\\"button\\\" routerLink=\\\"{{'/admin/user/edit/'+user.id}}\\\"><img src=\\\"assets/images/query_icon.png\\\" ></button></div>\\n                                                  </td>\\n                                                  <!-- <td>\\n                                                       <button type=\\\"button\\\" class=\\\"delete\\\" (click)=\\\"remove(user.id)\\\"><i class=\\\"far fa-trash-alt\\\"></i></button>\\n                                                  </td> -->\\n                                              </tr>\\n                                          </tbody>\\n                                      </table>\\n                                      </div>\\n                                  </div>\\n                            </div>\\n                             \\n\\n                      </div>\\n\\n                <!--------- Users Details ---------->\\n\\n                     \\n                      \\n\\n\\n                </section> <!-- Right Panel End Here -->\\n            </div>\\n        </div>\\n    </main>\\n    <footer class=\\\"fot_main\\\">\\n      <div class=\\\"container\\\">\\n        <div class=\\\"fot_inner\\\">\\n          <div class=\\\"row\\\"><div class=\\\"col-sm-12 col-md-12\\\"><p>© ALLERGAN 2019</p></div></div>\\n        </div>\\n      </div>\\n    </footer>\\n  \"","﻿import { Component, OnInit } from '@angular/core';\nimport { first } from 'rxjs/operators';\nimport{UserService} from './services/userservices'\nimport { User } from '../models';\n//import { UserService } from '@/_services';\n\n@Component({ templateUrl: 'admin.component.html' })\nexport class AdminComponent implements OnInit {\n    users:  [{id:0,firstName:\"\",emailID:\"\",role:[{id:0,name:\"\"}],status:false}];\n    checkedValue:boolean=false;\n    constructor(private userService:UserService) {}\n\n    ngOnInit() {\n        \n         this.userService.getUsers().pipe(first()).subscribe(users => {\n             this.users = users.data;\n        //    alert(JSON.stringify(this.users));\n            \n         });\n    }\n     remove(Id:number){\n         this.userService.remove(Id).pipe(first()).subscribe(users => {\n             this.users = users.data;\n          \n         });\n     }\n    status($event,Id:number){\n       \n        let status=false;\n        if($event.target.checked==false){\n        status=true;\n        }\n       \n        this.userService.statusChange(status,Id).pipe(first()).subscribe(users => {\n            this.users = users.data;\n          \n        });\n        \n    }\n\n    \n}","module.exports = \".invalid-select {\\r\\n    border-color: #dc3545;\\r\\n}\\r\\n.invalid-txt {\\r\\n    width: 100%;\\r\\n    margin-top: .25rem;\\r\\n    font-size: 80%;\\r\\n    color: #dc3545;\\r\\n}\\r\\n.invalid-feedback {\\r\\n    text-align: left;\\r\\n}\\r\\n.invalid-answer-error {\\r\\n    padding-left: 130px;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYWRtaW4vaG9tZS9hZGQtcXVlc3Rpb24vYWRkLXF1ZXN0aW9uLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxxQkFBcUI7QUFDekI7QUFDQTtJQUNJLFdBQVc7SUFDWCxrQkFBa0I7SUFDbEIsY0FBYztJQUNkLGNBQWM7QUFDbEI7QUFDQTtJQUNJLGdCQUFnQjtBQUNwQjtBQUNBO0lBQ0ksbUJBQW1CO0FBQ3ZCIiwiZmlsZSI6InNyYy9hcHAvYWRtaW4vaG9tZS9hZGQtcXVlc3Rpb24vYWRkLXF1ZXN0aW9uLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuaW52YWxpZC1zZWxlY3Qge1xyXG4gICAgYm9yZGVyLWNvbG9yOiAjZGMzNTQ1O1xyXG59XHJcbi5pbnZhbGlkLXR4dCB7XHJcbiAgICB3aWR0aDogMTAwJTtcclxuICAgIG1hcmdpbi10b3A6IC4yNXJlbTtcclxuICAgIGZvbnQtc2l6ZTogODAlO1xyXG4gICAgY29sb3I6ICNkYzM1NDU7XHJcbn1cclxuLmludmFsaWQtZmVlZGJhY2sge1xyXG4gICAgdGV4dC1hbGlnbjogbGVmdDtcclxufVxyXG4uaW52YWxpZC1hbnN3ZXItZXJyb3Ige1xyXG4gICAgcGFkZGluZy1sZWZ0OiAxMzBweDtcclxufSJdfQ== */\"","module.exports = \"<app-admin-top-nav></app-admin-top-nav>\\r\\n<router-outlet></router-outlet>\\r\\n    <!-- Page section start -->\\r\\n    <main class=\\\"main_container\\\">\\r\\n        <div class=\\\"container\\\">\\r\\n            <div class=\\\"main_con_inner\\\">\\r\\n          \\r\\n\\r\\n                <app-admin-side-nav></app-admin-side-nav>\\r\\n   <!-- right section  start -->\\r\\n   <section class=\\\"right_panel\\\">\\r\\n <!-- Question Bank Starts -->\\r\\n                      \\r\\n <div class=\\\"question_bank\\\"  id=\\\"pop_4\\\">\\r\\n        \\r\\n        <!-- Add Questions Starts-->\\r\\n        <div class=\\\"question_bank_Inner\\\">\\r\\n            <div class=\\\"rph_header\\\">\\r\\n                <div class=\\\"row\\\">\\r\\n                    <div class=\\\"col-sm-6 col-md-6 col-lg-6 rph_left\\\">\\r\\n                        <h5>Add Question</h5>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"right_panel_box2\\\">\\r\\n                <form class=\\\"user_fileds\\\" name=\\\"form\\\" (ngSubmit)=\\\"f.form.valid && onSubmit()\\\" #f=\\\"ngForm\\\" novalidate>\\r\\n                <div class=\\\"row\\\">\\r\\n                    <div class=\\\"col-sm-6 col-md-6 col-lg-6\\\">\\r\\n                      <div class=\\\"form-group row\\\">\\r\\n                        <div class=\\\"col-sm-4 col-md-4 col-lg-4\\\">\\r\\n                          <label for=\\\"lastname\\\">Title</label>\\r\\n                        </div>\\r\\n                        <div class=\\\"col-sm-8 col-md-8 col-lg-8\\\">\\r\\n                          <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"\\\" name=\\\"title\\\" [(ngModel)]=\\\"model.title\\\" #title=\\\"ngModel\\\" [ngClass]=\\\"{ 'is-invalid': f.submitted && title.invalid }\\\" required minlength=\\\"3\\\" maxlength=\\\"30\\\">\\r\\n                            <div *ngIf=\\\"f.submitted && title.invalid\\\" class=\\\"invalid-feedback\\\">\\r\\n                                <div *ngIf=\\\"title.errors.required\\\">Title is required</div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                      </div>\\r\\n\\r\\n                      <div class=\\\"form-group row\\\">\\r\\n                            <div class=\\\"col-sm-4 col-md-4 col-lg-4\\\">\\r\\n                              <label for=\\\"lastname\\\">Question</label>\\r\\n                            </div>\\r\\n                            <div class=\\\"col-sm-8 col-md-8 col-lg-8\\\">\\r\\n                              <textarea rows=\\\"4\\\" cols=\\\"50\\\" class=\\\"form-control\\\" placeholder=\\\"\\\" name=\\\"question\\\" [(ngModel)]=\\\"model.question\\\" #question=\\\"ngModel\\\" [ngClass]=\\\"{ 'is-invalid': f.submitted && question.invalid }\\\" required></textarea>\\r\\n                                <div *ngIf=\\\"f.submitted && question.invalid\\\" class=\\\"invalid-feedback\\\">\\r\\n                                    <div *ngIf=\\\"question.errors.required\\\">Question is required</div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                          </div>\\r\\n\\r\\n                      <div class=\\\"form-group row\\\">\\r\\n                        <div class=\\\"col-sm-4 col-md-4 col-lg-4\\\">\\r\\n                          <label >Asset Type</label>\\r\\n                        </div>\\r\\n                        <div class=\\\"col-sm-8 col-md-8 col-lg-8\\\">\\r\\n                            <select class=\\\"custom-select slects_option\\\"  #assetType=\\\"ngModel\\\" (change)=\\\"getThearpeuticAreas($event.target.value)\\\" name=\\\"assetType\\\" [(ngModel)]=\\\"model.assetTypeId\\\" [ngClass]=\\\"{ 'is-invalid': f.submitted && assetType.invalid }\\\" required>\\r\\n                                <option selected=\\\"\\\" value = \\\"0\\\">Select</option>\\r\\n                                <option *ngFor=\\\"let assetType of assetTypes ; index as i\\\" [value]=\\\"assetType.id\\\">{{assetType.userName}}</option>\\r\\n                          </select>\\r\\n                          <div *ngIf=\\\"assetTypeMessage\\\" class=\\\"invalid-txt\\\">\\r\\n                            <div *ngIf=\\\"assetTypeMessage\\\">Asset Type is required</div>\\r\\n                          </div> \\r\\n                          <div *ngIf=\\\"f.submitted && assetType.invalid\\\" class=\\\"invalid-feedback\\\">\\r\\n                              <div *ngIf=\\\"assetType.errors.required\\\">Asset Type is required</div>\\r\\n                          </div>\\r\\n                        </div>\\r\\n                      </div>\\r\\n\\r\\n                      <div class=\\\"form-group row\\\">\\r\\n                        <div class=\\\"col-sm-4 col-md-4 col-lg-4\\\">\\r\\n                          <label >Select TA</label>\\r\\n                        </div>\\r\\n                        <div class=\\\"col-sm-8 col-md-8 col-lg-8\\\">\\r\\n                            <select class=\\\"custom-select slects_option\\\"  #ta=\\\"ngModel\\\"  (change)=\\\"getdiseaseAndProducts($event.target.value)\\\" name=\\\"ta\\\" [(ngModel)]=\\\"model.therapeuticAreaId\\\" [ngClass]=\\\"{ 'is-invalid': f.submitted && ta.invalid }\\\" required>\\r\\n                                <option selected=\\\"\\\" value = \\\"0\\\">Select</option>\\r\\n                                <!-- <option *ngFor=\\\"let ta of therapeuticAreaList ; index as i\\\" [value]=\\\"ta\\\">{{ta}}</option> -->\\r\\n                                <option *ngFor=\\\"let ta of therapeuticAreaMap | keyvalue\\\" [value]=\\\"ta.key\\\">{{ta.value}}</option>\\r\\n                            </select>  \\r\\n                            <div *ngIf=\\\"taMessage\\\" class=\\\"invalid-txt\\\">\\r\\n                              <div *ngIf=\\\"taMessage\\\">TA is required</div>\\r\\n                            </div> \\r\\n                            <div *ngIf=\\\"f.submitted && ta.invalid\\\" class=\\\"invalid-feedback\\\">\\r\\n                                <div *ngIf=\\\"ta.errors.required\\\">TA is required</div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                      </div>\\r\\n\\r\\n                      <div class=\\\"form-group row\\\">\\r\\n                        <div class=\\\"col-sm-4 col-md-4 col-lg-4\\\">\\r\\n                          <label >Disease state</label>\\r\\n                        </div>\\r\\n                        <div class=\\\"col-sm-8 col-md-8 col-lg-8\\\">\\r\\n                            <select class=\\\"custom-select slects_option\\\" #disease name=\\\"disease\\\" [(ngModel)]=\\\"model.diseaseStateId\\\">\\r\\n                                <option selected=\\\"\\\" value = \\\"0\\\">Select</option>\\r\\n                                <!-- <option *ngFor=\\\"let dis of diseaseList ; index as i\\\" [value]=\\\"dis\\\">{{dis}}</option> -->\\r\\n                                <option *ngFor=\\\"let dis of diseaseMap | keyvalue\\\" [value]=\\\"dis.key\\\">{{dis.value}}</option>\\r\\n                            </select> \\r\\n                        </div>\\r\\n                      </div>\\r\\n\\r\\n                      <div class=\\\"form-group row\\\">\\r\\n                        <div class=\\\"col-sm-4 col-md-4 col-lg-4\\\">\\r\\n                          <label >Product</label>\\r\\n                        </div>\\r\\n                        <div class=\\\"col-sm-8 col-md-8 col-lg-8\\\">\\r\\n                            <select class=\\\"custom-select slects_option\\\" #product name=\\\"product\\\" [(ngModel)]=\\\"model.productId\\\">\\r\\n                                <option selected=\\\"\\\" value = \\\"0\\\">Select</option>\\r\\n                                <!-- <option *ngFor=\\\"let prod of productList ; index as i\\\" [value]=\\\"prod\\\">{{prod}}</option> -->\\r\\n                                <option *ngFor=\\\"let prod of productMap | keyvalue\\\" [value]=\\\"prod.key\\\">{{prod.value}}</option>\\r\\n                            </select> \\r\\n                        </div>\\r\\n                      </div>\\r\\n\\r\\n                      <div class=\\\"form-group row\\\">\\r\\n                        <div class=\\\"col-sm-4 col-md-4 col-lg-4\\\">\\r\\n                          <label >Question Type</label>\\r\\n                        </div>\\r\\n                        <div class=\\\"col-sm-8 col-md-8 col-lg-8\\\">\\r\\n                            <select class=\\\"custom-select slects_option\\\" name=\\\"QType\\\" [(ngModel)]=\\\"model.QType\\\" #QType=\\\"ngModel\\\" (change)=\\\"typeSection($event.target.value)\\\" [ngClass]=\\\"{ 'is-invalid': f.submitted && QType.invalid }\\\" required>\\r\\n                              <option value=\\\"SINGLE_CHOICE\\\">Single Choice</option>\\r\\n                              <option value=\\\"MULTIPLE_CHOICE\\\">Multiple Choice</option>\\r\\n                          </select>\\r\\n                          <div *ngIf=\\\"f.submitted && QType.invalid\\\" class=\\\"invalid-feedback\\\">\\r\\n                              <div *ngIf=\\\"QType.errors.required\\\">Question Type is required</div>\\r\\n                          </div>\\r\\n                        </div>\\r\\n                      </div>\\r\\n\\r\\n                      <!-- <div class=\\\"form-group row\\\">\\r\\n                        <div class=\\\"col-sm-4 col-md-4 col-lg-4\\\">\\r\\n                          <label >Region</label>\\r\\n                        </div>\\r\\n                        <div class=\\\"col-sm-8 col-md-8 col-lg-8\\\">\\r\\n                            <select class=\\\"custom-select slects_option\\\">\\r\\n                              <option ></option>\\r\\n                              <option value=\\\"1\\\">Region</option>\\r\\n                              <option value=\\\"2\\\">Region</option>\\r\\n                              <option value=\\\"3\\\">Region</option>\\r\\n                            </select>\\r\\n                        </div>\\r\\n                      </div> -->\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"row\\\">\\r\\n                  <div class=\\\"col-sm-12 col-md-12 col-lg-12 rph_left\\\">\\r\\n                    <span class=\\\"invalid-txt\\\">{{ansMessage}}</span>\\r\\n                    <h5>Answers</h5>\\r\\n                    <div class=\\\"form-group row\\\" *ngFor=\\\"let div of nameArray; let i = index\\\">\\r\\n                      <div class=\\\"col-sm-12 col-md-12 col-lg-12 feedBackWrap\\\">\\r\\n                        <label [for]=\\\"div.name\\\">{{div.name}}</label>\\r\\n                        <span>\\r\\n                          <input type =\\\"radio\\\" [id]=\\\"div.name\\\" [value]=\\\"div.name\\\" name=\\\"radio-group\\\" *ngIf=\\\"radioDisplay\\\" [(ngModel)]=\\\"radioSelected\\\" (click)=\\\"onItemChange(div)\\\"/>\\r\\n                          <input type=\\\"checkbox\\\" name=\\\"check-group\\\"  [id]=\\\"div.name\\\" [value]=\\\"div.name\\\" *ngIf=\\\"checkBoxDisplay\\\"  [(ngModel)]=\\\"div.checked\\\" (click)=\\\"onItemChange(div)\\\"/>\\r\\n                        </span>\\r\\n                            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"\\\" placeholder=\\\"\\\" name=\\\"{{'ans' + i}}\\\" [(ngModel)]=\\\"div.val\\\" #text=\\\"ngModel\\\" [ngClass]=\\\"{ 'is-invalid': f.submitted && text.invalid }\\\" required>\\r\\n                            \\r\\n                            <span (click)=\\\"onRemoveRow(div.index)\\\" class=\\\"delete\\\"><i class=\\\"far fa-trash-alt\\\"></i></span>\\r\\n                            <div *ngIf=\\\"f.submitted && text.invalid\\\" class=\\\"invalid-feedback invalid-answer-error\\\">\\r\\n                                <div *ngIf=\\\"text.errors.required\\\">Text is required</div>\\r\\n                            </div>\\r\\n                      </div>\\r\\n                    </div>\\r\\n\\r\\n                    \\r\\n                    <div class=\\\"feedBack_btns row\\\">\\r\\n                      <div class=\\\"col-xs-12 col-sm-12 col-md-12 col-lg-12 feedBack_btn1\\\">\\r\\n                        <span class=\\\"btn btn_feedback\\\" (click)=\\\"onAddRow()\\\">Add Answer</span>\\r\\n                      </div>\\r\\n                      <div class=\\\"col-xs-12 col-sm-12 col-md-12 col-lg-12 feedBack_btn2\\\">\\r\\n                          <button class=\\\"btn btn_feedback btn_feedback_cancel\\\" (click)=\\\"cancelAddQuestion()\\\">Cancel</button>\\r\\n                          <!-- <button class=\\\"btn btn_feedback\\\">Save & Add Another</button> -->\\r\\n                          <button class=\\\"btn btn_feedback btn_feedback_save\\\">Save</button>\\r\\n                      </div>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </form>\\r\\n            </div>\\r\\n         </div>\\r\\n      </div>\\r\\n\\r\\n\\r\\n\\r\\n    <!-- Question Bank Ends -->\\r\\n\\r\\n</section> <!-- Right Panel End Here -->\\r\\n</div>\\r\\n</div>\\r\\n</main>\\r\\n<footer class=\\\"fot_main\\\">\\r\\n<div class=\\\"container\\\">\\r\\n<div class=\\\"fot_inner\\\">\\r\\n<div class=\\\"row\\\"><div class=\\\"col-sm-12 col-md-12\\\"><p>© ALLERGAN 2019</p></div></div>\\r\\n</div>\\r\\n</div>\\r\\n</footer>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { first } from 'rxjs/operators';\r\nimport { FormBuilder, FormGroup, FormArray } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { MetaDataService } from '../../services/metadataService';\r\nimport { AlertService } from 'src/app/services';\r\nimport { QuestionBankService } from '../../services/questionbankservice';\r\nimport { QSData } from '../../model/AnswerData';\r\nimport { Answer } from '../../model/Answer';\r\nimport { Question } from '../../model/Question';\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'app-admin-add-question',\r\n  templateUrl: './add-question.component.html',\r\n  styleUrls: ['./add-question.component.css']\r\n\r\n})\r\n\r\n\r\nexport class AddQuestionComponent implements OnInit { \r\n   \r\n    constructor(\r\n        private formBuilder: FormBuilder,\r\n        private metaService: MetaDataService,\r\n        private alertService: AlertService,\r\n        private questionBankService : QuestionBankService,\r\n        private fb: FormBuilder,\r\n        private router: Router) {  }\r\n        questions:  [{}];\r\n        qsData:[{}]\r\n        assetTypes : [{id:0, userName:\"\"}];\r\n\r\n        correctFlag : Array<any> = [];\r\n\r\n        therapeuticAreaMap = new Map();\r\n        diseaseMap= new Map();\r\n        productMap= new Map();\r\n        radioDisplay : boolean = true;\r\n        checkBoxDisplay: boolean = false;\r\n        radioSelected: any;\r\n        choiceLetters : Array<any> = ['A', 'B', 'C', 'D', 'E', 'F'];\r\n        taMessage: boolean = false;\r\n        assetTypeMessage : boolean = false;\r\n        ansMessage: string = '';\r\n        nameArray: Array<any> = [\r\n          {\r\n            'index' : 0,\r\n            'name': 'A',\r\n            'val': ''\r\n          },\r\n          {\r\n            'index' : 1,\r\n            'name': 'B',\r\n            'val': ''\r\n          }\r\n          // ,\r\n          // {\r\n          //   'index' : 2,\r\n          //   'name': 'C',\r\n          //   'val': ''\r\n          // },\r\n          // {\r\n          //   'index' : 3,\r\n          //   'name': 'D',\r\n          //   'val': ''\r\n          // }\r\n        ];\r\n\r\n    ngOnInit() {       \r\n        this.metaService.getAllAssetTypes().pipe(first()).subscribe(assetTypes => {  \r\n            this.assetTypes = assetTypes.data;\r\n        });\r\n    }\r\n\r\n    model: any = { };\r\n\r\n    getThearpeuticAreas(assetTypeId){\r\n      console.log('assetTypeId'+assetTypeId);\r\n        this.assetTypeMessage = false;\r\n        if(assetTypeId == 0){ this.assetTypeMessage = true; }else{\r\n          this.therapeuticAreaMap.clear()\r\n          this.metaService.getTherapeuticAreas(assetTypeId).pipe(first()).subscribe(therapeutic => { \r\n              therapeutic.data.forEach(ta => {\r\n                this.therapeuticAreaMap.set(ta.id, ta.name);\r\n              });\r\n          });\r\n        }\r\n    }\r\n   \r\n    getdiseaseAndProducts(taID){\r\n        this.taMessage = false;\r\n        if(taID == 0){ this.taMessage = true; }else{\r\n          this.metaService.getTherapeuticAreaMap().pipe(first()).subscribe(TA => { \r\n            TA.data.forEach(ta => {\r\n              if(taID == ta.id){\r\n                this.productMap.clear();\r\n                this.diseaseMap.clear();\r\n                ta.products.forEach(prod => {\r\n                  this.productMap.set(prod.id,prod.name);\r\n                });\r\n                ta.diseaseStates.forEach(disease => {\r\n                  this.diseaseMap.set(disease.id, disease.name);\r\n                });\r\n              }                \r\n            });\r\n          }); \r\n        }           \r\n    }\r\n\r\n    typeSection(type){\r\n      if(type === 'SINGLE_CHOICE'){\r\n        this.checkBoxDisplay = false;\r\n        this.radioDisplay = true;\r\n        this.correctFlag = [] ;\r\n      }else{\r\n        this.checkBoxDisplay = true;\r\n        this.radioDisplay = false;\r\n        this.correctFlag = [] ;\r\n      }\r\n    }\r\n  \r\n\r\n    \r\n    onItemChange(a){\r\n      console.log(this.model.QType);\r\n      if(this.model.QType === 'SINGLE_CHOICE'){\r\n        this.correctFlag = [] ;\r\n        this.correctFlag.push(a.index);\r\n      }else{\r\n        if(this.correctFlag.indexOf(a.index) > -1){\r\n          this.correctFlag.splice(this.correctFlag.indexOf(a.index), 1);\r\n        }else{\r\n          this.correctFlag.push(a.index);\r\n        }\r\n      }\r\n      console.log(this.correctFlag);\r\n    }\r\n\r\n    onSubmit() {\r\n      if(this.correctFlag.length == 0){\r\n        this.ansMessage = 'Please select atleast one Answer.';\r\n      }else{\r\n          this.assetTypeMessage = false; \r\n          this.taMessage = false;\r\n        let qsData = new QSData();\r\n        let answerArray : Array<Answer> = [];\r\n        \r\n        this.nameArray.forEach(n => {\r\n          if(n.val.length > 0){\r\n            let answer = new Answer();\r\n  \r\n            if(this.correctFlag.indexOf(n.index) > -1){\r\n              answer.correct = true;\r\n            }else{\r\n              answer.correct = false;\r\n            }\r\n            answer.text = n.val;\r\n            answerArray.push(answer);\r\n          }\r\n        });\r\n  \r\n       \r\n        qsData.answers = answerArray;\r\n        console.log(qsData.answers);\r\n        qsData.questionType = this.model.QType;\r\n        qsData.question = this.model.question;\r\n  \r\n        let question=new Question();\r\n        question.title=this.model.title;\r\n          if(this.model.assetTypeId > 0){\r\n            question.assetTypeId=this.model.assetTypeId;\r\n          }else{\r\n            this.assetTypeMessage = true;\r\n          }\r\n         \r\n          if(this.model.therapeuticAreaId > 0){            \r\n            question.therapeuticAreaId = this.model.therapeuticAreaId;\r\n          }else{\r\n            this.taMessage = true;\r\n          }\r\n\r\n        question.diseaseStateId = this.model.diseaseStateId;\r\n        question.productId = this.model.productId;\r\n        question.status= 'true';\r\n  \r\n        question.qsData = qsData;\r\n        console.log(qsData.answers);\r\n          if(question.assetTypeId > 0 && question.therapeuticAreaId > 0){\r\n        this.questionBankService.addQuestion(question).pipe(first()).subscribe(questionss => {   \r\n          this.questionBankService.getAllQuestions().pipe(first()).subscribe(questionss => {      \r\n            this.questions = questionss.data;\r\n          }); \r\n          this.router.navigate(['/admin/questionBank']);   \r\n          this.alertService.success('Successfully Added.');\r\n            window.scroll(0,0);\r\n          },\r\n          error => {\r\n            this.alertService.error(error);\r\n            window.scroll(0,0);\r\n        });  \r\n      }\r\n\r\n       }    \r\n    }\r\n\r\n    cancelAddQuestion(){\r\n      this.router.navigate(['/admin/questionBank']);\r\n    } \r\n\r\n    \r\n  onAddRow() {\r\n   let obj ;\r\n   let last:any = this.nameArray[this.nameArray.length-1];\r\n    \r\n    if(last == undefined){\r\n       obj = {\r\n        'index' : 0,\r\n        'name': this.choiceLetters[0],\r\n        'val': ''\r\n        }\r\n    }else{\r\n       obj = {\r\n        'index' : last.index + 1,\r\n        'name': this.choiceLetters[last.index + 1],\r\n        'val': ''\r\n        }\r\n    }   \r\n    if(this.choiceLetters[last.index + 1] != undefined){\r\n      this.nameArray.push(obj);\r\n    }\r\n  }\r\n\r\n  onRemoveRow(rowIndex:number){ \r\n    let i;\r\n    console.log(rowIndex);\r\n    console.log(this.nameArray); \r\n\r\n    this.nameArray.forEach(n => {\r\n      if(n.index == rowIndex){\r\n         i = this.nameArray.indexOf(n);\r\n      }\r\n    });\r\n   console.log(i);\r\n\r\n      this.nameArray.splice(i,1);\r\n  }\r\n  \r\n}","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FkbWluL2hvbWUvYWRkLXF1aXovYWRkLXF1aXouY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<app-admin-top-nav></app-admin-top-nav>\\r\\n<main class=\\\"main_container\\\">\\r\\n  <div class=\\\"container\\\">\\r\\n      <div class=\\\"main_con_inner\\\">\\r\\n    \\r\\n\\r\\n          <app-admin-side-nav></app-admin-side-nav>\\r\\n\\r\\n          <!-- right section  start -->\\r\\n          <section class=\\\"right_panel\\\">\\r\\n<!-- Quiz Starts -->\\r\\n                      \\r\\n<div class=\\\"quiz_wrap hide_tab active\\\"  id=\\\"pop_6\\\">\\r\\n    \\r\\n     <div class=\\\"quiz_Inner\\\">\\r\\n        <div class=\\\"rph_header\\\">\\r\\n            <div class=\\\"row\\\">\\r\\n                <div class=\\\"col-sm-6 col-md-6 col-lg-6 rph_left\\\">\\r\\n                    <h5>Add Quiz</h5>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div class=\\\"right_panel_box2\\\">\\r\\n          <form class=\\\"user_fileds\\\" name=\\\"form\\\" (ngSubmit)=\\\"f.form.valid && onSubmit()\\\" #f=\\\"ngForm\\\" novalidate>\\r\\n\\r\\n            <div class=\\\"row\\\">\\r\\n                <div class=\\\"col-sm-6 col-md-6 col-lg-6\\\">\\r\\n                  <div class=\\\"form-group row\\\">\\r\\n                    <div class=\\\"col-sm-4 col-md-4 col-lg-4\\\">\\r\\n                      <label for=\\\"lastname\\\">Title</label>\\r\\n                    </div>\\r\\n                    <div class=\\\"col-sm-8 col-md-8 col-lg-8\\\">\\r\\n                      <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"\\\" name=\\\"title\\\" [(ngModel)]=\\\"model.title\\\" #title=\\\"ngModel\\\" [ngClass]=\\\"{ 'is-invalid': f.submitted && title.invalid }\\\" required>\\r\\n                      <div *ngIf=\\\"f.submitted && title.invalid\\\" class=\\\"invalid-feedback\\\">\\r\\n                          <div *ngIf=\\\"title.errors.required\\\">Title is required</div>\\r\\n                      </div>\\r\\n                    </div>\\r\\n                  </div>                 \\r\\n                </div>\\r\\n            </div>\\r\\n          \\r\\n\\r\\n          <!-- <div class=\\\"applyFilers mt-4 \\\" name=\\\"domain\\\">\\r\\n                <select class=\\\"custom-select slects_option\\\"  #assetType (change)=\\\"getThearpeuticAreas($event.target.value)\\\" >\\r\\n                      <option selected=\\\"\\\">Select AT’s</option>\\r\\n                      <option *ngFor=\\\"let assetType of assetTypes ; index as i\\\" [value]=\\\"assetType.id\\\">{{assetType.userName}}</option>\\r\\n                </select>\\r\\n                <select class=\\\"custom-select slects_option\\\" #ta  (change)=\\\"getdiseaseAndProducts($event.target.value)\\\">\\r\\n                    <option selected=\\\"\\\">Select TA’s</option>\\r\\n                    <option *ngFor=\\\"let ta of therapeuticAreaList ; index as i\\\" [value]=\\\"ta\\\">{{ta}}</option>\\r\\n                </select>    \\r\\n                <select class=\\\"custom-select slects_option\\\" #disease >\\r\\n                    <option selected=\\\"\\\">Select DS’s</option>\\r\\n                    <option *ngFor=\\\"let dis of diseaseList ; index as i\\\" [value]=\\\"dis\\\">{{dis}}</option>                        \\r\\n                </select>    \\r\\n                <select class=\\\"custom-select slects_option\\\" #product>\\r\\n                    <option selected=\\\"\\\">Select Product</option>\\r\\n                    <option *ngFor=\\\"let prod of productList ; index as i\\\" [value]=\\\"prod\\\">{{prod}}</option>\\r\\n                </select> \\r\\n           </div> -->\\r\\n\\r\\n          <div class=\\\"row questSelectedWrap\\\">\\r\\n            <div class=\\\"col-12 col-sm-12 questSelected\\\">\\r\\n              <div class=\\\"questHeader\\\">\\r\\n                <h2><span class=\\\"questCount\\\">{{questionCount}}</span> Questions Selected</h2>\\r\\n                <h3>Title</h3>\\r\\n              </div>\\r\\n              <div class=\\\"questChecked\\\">\\r\\n                <ul>\\r\\n                  <li class=\\\"questList\\\" *ngFor=\\\"let question of questions ; index as i\\\">\\r\\n                    <input type=\\\"checkbox\\\" value=\\\"{{question.id}}\\\" id=\\\"{{'quest'+i}}\\\" (change)=\\\"onCheckboxChange(question.id,$event)\\\">\\r\\n                    <label for=\\\"{{'quest'+i}}\\\">{{question.qsData.question}}</label>\\r\\n                  </li>\\r\\n                  \\r\\n                </ul>\\r\\n                <button class=\\\"btn quizBtn\\\">Submit</button>\\r\\n                <button class=\\\"btn quizCancel\\\"  (click)=\\\"cancelQuiz()\\\">cancel</button>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </form>\\r\\n        </div>\\r\\n    </div> \\r\\n\\r\\n    \\r\\n</div>\\r\\n\\r\\n<!-- Quiz Ends -->\\r\\n</section> <!-- Right Panel End Here -->\\r\\n\\r\\n               \\r\\n</div>\\r\\n</div>\\r\\n</main>\\r\\n<footer class=\\\"fot_main\\\">\\r\\n<div class=\\\"container\\\">\\r\\n<div class=\\\"fot_inner\\\">\\r\\n<div class=\\\"row\\\"><div class=\\\"col-sm-12 col-md-12\\\"><p>© ALLERGAN 2019</p></div></div>\\r\\n</div>\\r\\n</div>\\r\\n</footer>\"","import { Component, OnInit } from \"@angular/core\";\r\nimport { first } from \"rxjs/operators\";\r\nimport { QuizService } from '../../services/quizservice';\r\nimport { Router } from \"@angular/router\";\r\nimport { FormBuilder } from \"@angular/forms\";\r\nimport { MetaDataService } from \"../../services/metadataService\";\r\nimport { QuestionBankService } from '../../services/questionbankservice';\r\nimport { Quiz } from \"../../model/quiz\";\r\nimport { AlertService } from \"src/app/services/alert.service\";\r\n\r\n@Component({\r\n    selector: 'app-admin-quiz',\r\n    templateUrl: './add-quiz.component.html',\r\n    styleUrls: ['./add-quiz.component.css']\r\n  })\r\n  export class AddQuizComponent implements OnInit {\r\n    assetTypes : [{id:0, userName:\"\"}];\r\n    therapeuticAreaList: Array<string> = [];\r\n    diseaseList: Array<string> = [];\r\n    productList: Array<string> = [];\r\n    checkedList: Array<number> = [];\r\n    questions:  [{}];\r\n    quiz:  [{}];\r\n    questionCount = 0;\r\n    \r\n    constructor(\r\n      private metaService: MetaDataService,\r\n      private questionBankService: QuestionBankService,\r\n      private quizService: QuizService,\r\n      private formBuilder: FormBuilder,\r\n      private alertService: AlertService,\r\n      private router: Router\r\n      ) { \r\n        \r\n      }\r\n      \r\n    ngOnInit() {\r\n      this.checkedList = [];\r\n      this.questionBankService.getAllQuestions().pipe(first()).subscribe(questions => {  \r\n        this.questions=questions;           \r\n      });\r\n      this.metaService.getAllAssetTypes().pipe(first()).subscribe(assetTypes => {  \r\n          this.assetTypes = assetTypes.data;\r\n      });\r\n      this.metaService.getTherapeuticAreaMap().pipe(first()).subscribe(TA => { \r\n          TA.data.forEach(ta => {\r\n              this.therapeuticAreaList.push(ta.name);\r\n              ta.products.forEach(prod => {\r\n                this.productList.push(prod.name);\r\n              });\r\n              ta.diseaseStates.forEach(disease => {\r\n                this.diseaseList.push(disease.name);\r\n              });\r\n          });\r\n      }); \r\n      console.log( this.diseaseList);\r\n    }\r\n\r\n    \r\n    model: any = { };\r\n\r\n    getThearpeuticAreas(assetTypeId){\r\n      this.therapeuticAreaList = [];\r\n      this.metaService.getTherapeuticAreas(assetTypeId).pipe(first()).subscribe(therapeutic => { \r\n          therapeutic.data.forEach(ta => {\r\n            this.therapeuticAreaList.push(ta.name);\r\n          });\r\n      });\r\n    }\r\n  \r\n    getdiseaseAndProducts(taName){\r\n      this.metaService.getTherapeuticAreaMap().pipe(first()).subscribe(TA => { \r\n        TA.data.forEach(ta => {\r\n          if(taName === ta.name){\r\n            this.productList = [];\r\n            this.diseaseList = [];\r\n            ta.products.forEach(prod => {\r\n              this.productList.push(prod.name);\r\n            });\r\n            ta.diseaseStates.forEach(disease => {\r\n              this.diseaseList.push(disease.name);\r\n            });\r\n          }                \r\n        });\r\n      });    \r\n    }\r\n    \r\n\r\n    onCheckboxChange(questionId,$event){\r\n      if(this.checkedList.indexOf(questionId) > -1){\r\n        this.checkedList.splice(this.checkedList.indexOf(questionId), 1);\r\n      }else{\r\n        this.checkedList.push(questionId);\r\n      }\r\n      this.questionCount = this.checkedList.length;\r\n      console.log(this.checkedList);\r\n    }\r\n\r\n    onSubmit() {\r\n      console.log(this.checkedList+\"json\"+this.checkedList.toString().split(','));\r\n      let quiz=new Quiz();\r\n      quiz.title = this.model.title\r\n      quiz.jsonData=this.checkedList;\r\n\r\n      this.quizService.insertQuiz(quiz).pipe(first()).subscribe(q => { \r\n        this.quizService.getQuiz().pipe(first()).subscribe(quizz => {      \r\n          this.quiz = quizz.data;\r\n        });\r\n        this.checkedList = [];\r\n        this.router.navigate(['/admin/quiz']);\r\n        this.alertService.success('Successfully Added.');\r\n          window.scroll(0,0);\r\n        },\r\n        error => {\r\n          this.alertService.error(error);\r\n          window.scroll(0,0);\r\n      });\r\n    }\r\n\r\n    cancelQuiz(){\r\n      this.checkedList = [];\r\n      this.router.navigate(['/admin/quiz']);\r\n    }  \r\n  }","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FkbWluL2hvbWUvYXNzZXRzL2FkZC1hc3NldC9hZGQtYXNzZXQuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<app-admin-top-nav></app-admin-top-nav>\\n<router-outlet></router-outlet>\\n<main class=\\\"main_container\\\">\\n  <div class=\\\"container\\\">\\n      <div class=\\\"main_con_inner\\\">\\n          <app-admin-side-nav></app-admin-side-nav>\\n          <!-- right section  start -->\\n          <section class=\\\"right_panel\\\">\\n              <div class=\\\"user_assets hide_tab active\\\"  id=\\\"pop_3\\\">\\n               <form [formGroup]=\\\"assetForm\\\" (ngSubmit)=\\\"onSubmit()\\\">            \\n                  <div class=\\\"assets_panel\\\">\\n                    <div class=\\\"right_panel_inner border_dashed\\\">\\n                        <div class=\\\"rph_header\\\">\\n                            <div class=\\\"row\\\">\\n                                <div class=\\\"col-sm-6 col-md-6 col-lg-6 rph_left\\\">\\n                                    <h5>Assets</h5>\\n                                </div>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"right_panel_box2\\\">\\n                            <div class=\\\" user_fileds\\\">\\n                                <div class=\\\"row\\\">\\n                                    <div class=\\\"col-sm-6 col-md-6 col-lg-6\\\">\\n                                        <div class=\\\"form-group row\\\">\\n                                          <div class=\\\"col-sm-4 col-md-4 col-lg-4\\\">\\n                                            <label >Asset Type</label>\\n                                          </div>\\n                                          <div class=\\\"col-sm-8 col-md-8 col-lg-8\\\">\\n                                            <select formControlName=\\\"assetType\\\" [ngClass]=\\\"{ 'is-invalid': submitted && f.assetType.errors }\\\" class=\\\"custom-select slects_option\\\" (change)=\\\"onSelectAssetType($event.target.value)\\\">\\n                                              <option value=\\\"\\\">Select AssetType</option>\\n                                              <option *ngFor=\\\"let assetType of assetTypes\\\" value={{assetType.id}} >{{assetType.userName}}</option>\\n                                            </select>\\n                                              <div *ngIf=\\\"submitted && f.assetType.errors\\\" class=\\\"invalid-feedback\\\">\\n                                                <div *ngIf=\\\"f.assetType.errors.required\\\">Choose AssetType</div>\\n                                              </div>  \\n                                        </div>\\n                                      </div>\\n                                        <div class=\\\"form-group row\\\">\\n                                          <div class=\\\"col-sm-4 col-md-4 col-lg-4\\\">\\n                                            <label for=\\\"lastname\\\">Title</label>\\n                                          </div>\\n                                            <div class=\\\"col-sm-8 col-md-8 col-lg-8\\\">\\n                                            <input type=\\\"text\\\" formControlName=\\\"title\\\"  class=\\\"form-control\\\" id=\\\"\\\" [ngClass]=\\\"{ 'is-invalid': submitted && f.title.errors }\\\" placeholder=\\\"\\\" name=\\\"lastname\\\">\\n                                             <div *ngIf=\\\"submitted && f.title.errors\\\" class=\\\"invalid-feedback\\\">\\n                                                  <div *ngIf=\\\"f.title.errors.required\\\">Title is required</div>\\n                                                  <div *ngIf=\\\"f.title.errors.minlength\\\">Title must be at least 3 characters</div>\\n                                                  <div *ngIf=\\\"f.title.errors.maxlength\\\">Title must be max 250 characters</div>\\n                                              </div> \\n                                          </div>\\n                                        </div>\\n                                        <div class=\\\"form-group row\\\">\\n                                          <div class=\\\"col-sm-4 col-md-4 col-lg-4\\\">\\n                                            <label for=\\\"\\\">Description</label>\\n                                          </div>\\n                                            <div class=\\\"col-sm-8 col-md-8 col-lg-8\\\">\\n                                            <input type=\\\"\\\" formControlName=\\\"description\\\" class=\\\"form-control\\\" [ngClass]=\\\"{ 'is-invalid': submitted && f.description.errors }\\\" id=\\\"mail\\\" placeholder=\\\"\\\" name=\\\"\\\">\\n                                            <div *ngIf=\\\"submitted && f.description.errors\\\" class=\\\"invalid-feedback\\\">\\n                                                <div *ngIf=\\\"f.description.errors.required\\\">Description is required</div>\\n                                                <div *ngIf=\\\"f.description.errors.minlength\\\">Description must be at least  3 characters</div>\\n                                                <div *ngIf=\\\"f.description.errors.maxlength\\\">Description must be max 50 characters</div>\\n                                            </div> \\n                                          </div>\\n                                        </div>\\n                                        <!-- <div class=\\\"form-group row\\\" *ngIf=\\\"showContentTypeDropDown\\\"> -->\\n                                          <!-- <div class=\\\"col-sm-4 col-md-4 col-lg-4\\\">\\n                                            <label >Content Type</label>\\n                                          </div> -->\\n                                          <!-- <div class=\\\"col-sm-8 col-md-8 col-lg-8\\\">\\n                                            <select formControlName=\\\"contentType\\\" class=\\\"custom-select slects_option\\\" [ngClass]=\\\"{ 'is-invalid': submitted && showcontentTypeError }\\\" (change)=\\\"onSelectContentType($event.target.value)\\\">\\n                                              <option value=\\\"\\\">Select ContentType</option>\\n                                              <option *ngFor=\\\"let contentType of contentTypes\\\" value={{contentType.id}} >{{contentType.name}}</option>\\n                                            </select>\\n                                            <div *ngIf=\\\"submitted && showcontentTypeError\\\" class=\\\"invalid-feedback\\\">\\n                                                <div>Choose ContentType</div>\\n                                            </div> \\n                                        </div> -->\\n                                      <!-- </div> -->\\n                                    </div>\\n                                    <div class=\\\"col-sm-6 col-md-6 col-lg-6\\\">\\n                                        <div class=\\\"form-group row\\\">\\n                                          <div class=\\\"col-sm-4 col-md-4 col-lg-4\\\">\\n                                            <label >Duration (min)</label>\\n                                          </div>\\n                                          <div class=\\\"col-sm-8 col-md-8 col-lg-8\\\">\\n                                              <input type=\\\"number\\\" formControlName=\\\"duration\\\" class=\\\"form-control\\\" id=\\\"mail\\\" placeholder=\\\"\\\" name=\\\"\\\">\\n                                              <div *ngIf=\\\"submitted && f.duration.errors\\\" class=\\\"\\\">\\n                                                  <div *ngIf=\\\"f.duration.errors.required\\\">Duration is required</div>\\n                                              </div> \\n                                            </div>\\n                                      </div>\\n                                        <div class=\\\"form-group row\\\">\\n                                          <div class=\\\"col-sm-4 col-md-4 col-lg-4\\\">\\n                                            <label >Therapeutic Area</label>\\n                                          </div>\\n                                          <div class=\\\"col-sm-8 col-md-8 col-lg-8\\\">\\n                                              <select formControlName=\\\"therapeuticArea\\\"  [ngClass]=\\\"{ 'is-invalid': submitted && f.therapeuticArea.errors }\\\" class=\\\"custom-select slects_option\\\" (change)=\\\"onSelectTherapeuticArea($event.target.value)\\\">\\n                                                  <option value=\\\"\\\">Select TherapeuticArea</option>\\n                                                <option *ngFor=\\\"let therapeuticArea of therapeuticAreas\\\" value={{therapeuticArea.id}} >{{therapeuticArea.name}}</option>\\n                                              </select>\\n                                              <div *ngIf=\\\"submitted && f.therapeuticArea.errors\\\" class=\\\"invalid-feedback\\\">\\n                                                  <div *ngIf=\\\"f.therapeuticArea.errors.required\\\">Choose  TherapeuticArea</div>\\n                                              </div>  \\n                                        </div>\\n                                      </div>\\n                                        <div class=\\\"form-group row\\\">\\n                                          <div class=\\\"col-sm-4 col-md-4 col-lg-4\\\">\\n                                            <label >Disease State</label>\\n                                          </div>\\n                                          <div class=\\\"col-sm-8 col-md-8 col-lg-8\\\">\\n                                            <select formControlName=\\\"diseaseState\\\" [ngClass]=\\\"{ 'is-invalid': submitted && showDSError }\\\" class=\\\"custom-select slects_option\\\" (change)=\\\"onSelectDiseaseState($event.target.value)\\\" >\\n                                              <option value=\\\"\\\" >Select DiseaseStates</option>\\n                                              <option *ngFor=\\\"let diseaseState of diseaseStates\\\" value={{diseaseState.id}} >{{diseaseState.name}}</option>\\n                                          </select>\\n                                           <div *ngIf=\\\"submitted && showDSError\\\" class=\\\"invalid-feedback\\\">\\n                                              <div >Choose  DiseaseState</div>\\n                                          </div> \\n                                        </div>\\n                                      </div>\\n                                    </div>\\n                                </div>\\n                            </div>\\n                            <!-- </form> -->\\n                        </div>\\n                    </div>\\n                    \\n                   <div class=\\\"right_panel_inner border_dashed\\\">\\n                      <div class=\\\"right_panel_box2\\\">\\n                          <div class=\\\"user_fileds\\\">\\n\\n                              <div *ngIf=\\\"error\\\" class=\\\"alert alert-danger alert-dismissible fade show\\\" role=\\\"alert\\\">\\n                                  {{message}} \\n                                 <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\" aria-label=\\\"Close\\\">\\n                                   <span aria-hidden=\\\"true\\\">&times;</span>\\n                                 </button>\\n                               </div>\\n\\n                              <div class=\\\"row\\\">\\n                                  <div class=\\\"col-sm-6 col-md-6 col-lg-6\\\">\\n                                      <div class=\\\"form-group row\\\">\\n                                          <div class=\\\"col-sm-4 col-md-4 col-lg-4\\\">\\n                                            <label >Product</label>\\n                                          </div>\\n                                          <div class=\\\"col-sm-8 col-md-8 col-lg-8\\\">\\n                                            <select formControlName=\\\"product\\\" [ngClass]=\\\"{ 'is-invalid': submitted && showProductError }\\\" class=\\\"custom-select slects_option\\\" (change)=\\\"onSelectProduct($event.target.value)\\\">\\n                                              <option value=\\\"\\\">Select Product</option>\\n                                             <option *ngFor=\\\"let product of products\\\" value={{product.id}} >{{product.name}}</option>\\n                                          </select>\\n                                          <div *ngIf=\\\"submitted && showProductError\\\" class=\\\"invalid-feedback\\\">\\n                                              <div>Choose  Product</div>\\n                                          </div> \\n                                        </div>\\n                                      </div>\\n                                      <div class=\\\"form-group row\\\">\\n                                          <div class=\\\"col-sm-4 col-md-4 col-lg-4\\\">\\n                                            <label >Region</label>\\n                                          </div>\\n                                          <div class=\\\"col-sm-8 col-md-8 col-lg-8\\\">\\n                                            <select formControlName=\\\"region\\\" class=\\\"custom-select slects_option\\\" (change)=\\\"onSelectRegion($event.target.value)\\\">\\n                                              <option value=\\\"\\\">Select Region</option>\\n                                              <option *ngFor=\\\"let region of regions\\\" value={{region.id}} >{{region.name}}</option>\\n                                            </select>\\n                                            <div *ngIf=\\\"submitted && f.region.errors\\\" class=\\\"\\\">\\n                                              <div *ngIf=\\\"f.region.errors.required\\\">Choose  Region</div>\\n                                          </div> \\n                                        </div>\\n                                      </div>\\n                                      <div class=\\\"form-group row\\\">\\n                                          <div class=\\\"col-sm-4 col-md-4 col-lg-4\\\">\\n                                            <label >Country</label>\\n                                          </div>\\n                                          <div class=\\\"col-sm-8 col-md-8 col-lg-8\\\">\\n                                            <select formControlName=\\\"country\\\" class=\\\"custom-select slects_option\\\">\\n                                              <option value=\\\"\\\">Select Country</option>\\n                                              <option *ngFor=\\\"let country of countries\\\" value={{country.id}} >{{country.name}}</option>\\n                                          </select>\\n                                          <div *ngIf=\\\"submitted && f.country.errors\\\" class=\\\"\\\">\\n                                            <div *ngIf=\\\"f.country.errors.required\\\">Choose Country</div>\\n                                        </div> \\n                                        </div>\\n                                      </div>\\n                                      <div class=\\\"form-group row\\\">\\n                                          <div class=\\\"col-sm-4 col-md-4 col-lg-4\\\">\\n                                            <label >Expiration Duration (days)</label>\\n                                          </div>\\n                                          <div class=\\\"col-sm-8 col-md-8 col-lg-8\\\">\\n                                              <input type=\\\"number\\\" formControlName=\\\"expiration\\\" class=\\\"form-control\\\" id=\\\"mail\\\" placeholder=\\\"\\\" name=\\\"\\\">\\n                                              <div *ngIf=\\\"submitted && f.expiration.errors\\\" class=\\\"\\\">\\n                                                  <div *ngIf=\\\"f.expiration.errors.required\\\">Expiration Duration (days) Required</div>\\n                                              </div>\\n                                          </div>\\n                                      </div>\\n                                  </div>\\n                                  <div class=\\\"col-sm-6 col-md-6 col-lg-6\\\">\\n                                      <div class=\\\"form-group row\\\">\\n                                          <div class=\\\"col-sm-4 col-md-4 col-lg-4\\\">\\n                                            <label >Source</label>\\n                                          </div>\\n                                          <div class=\\\"col-sm-8 col-md-8 col-lg-8\\\">\\n                                              <select formControlName=\\\"source\\\"  [ngClass]=\\\"{ 'is-invalid': submitted && f.source.errors }\\\" class=\\\"custom-select slects_option\\\" (change)=\\\"onSelectSource($event.target.value)\\\">\\n                                                <option value=\\\"\\\">Select Source</option>\\n                                                <option *ngFor=\\\"let source of sources\\\" value={{source.id}} >{{source.name}}</option>\\n                                              </select>\\n                                              <div *ngIf=\\\"submitted && f.source.errors\\\" class=\\\"invalid-feedback\\\">\\n                                                <div *ngIf=\\\"f.source.errors.required\\\">Choose Source</div>\\n                                            </div> \\n                                          </div>\\n                                      </div>\\n                                    <div *ngIf=\\\"showQuize && showUploadAsset\\\" class=\\\"form-group row\\\" >\\n                                        <div class=\\\"col-sm-4 col-md-4 col-lg-4\\\">\\n                                          <label for=\\\"createdby\\\">Link</label>\\n                                        </div>\\n                                        <div class=\\\"col-sm-8 col-md-8 col-lg-8\\\">\\n                                          <div  class=\\\"custom-file upload_file\\\">\\n                                            <input type=\\\"file\\\"  class=\\\"custom-file-input\\\" id=\\\"customFile\\\" (change)=\\\"onFileSelect($event)\\\" [ngClass]=\\\"{ 'is-invalid': submitted && showFileUploadError }\\\">\\n                                            <label class=\\\"custom-file-label\\\" for=\\\"customFile\\\">{{fileName}}</label>\\n                                            <div *ngIf=\\\"submitted && showFileUploadError\\\" class=\\\"invalid-feedback\\\">\\n                                                <div >Upload a file</div>\\n                                            </div> \\n                                          </div>\\n                                        </div>\\n                                      </div> \\n                                      <div *ngIf=\\\"showQuizDropDown\\\" class=\\\"form-group row\\\" >\\n                                        <div class=\\\"col-sm-4 col-md-4 col-lg-4\\\">\\n                                          <label for=\\\"createdby\\\">Quiz</label>\\n                                        </div>\\n                                        <div class=\\\"col-sm-8 col-md-8 col-lg-8\\\">\\n                                             <select formControlName =\\\"quize\\\" class=\\\"custom-select slects_option\\\" [ngClass]=\\\"{ 'is-invalid': submitted && showQuizError }\\\" [(ngModel)]=\\\"alredyQuize\\\" (change)=\\\"onSelectQuiz($event.target.value)\\\">\\n                                                <option value=\\\"\\\">Select Quiz</option>\\n                                                <option   *ngFor=\\\"let quize of quizes\\\" value={{quize.id}} >{{quize.title}}</option>\\n                                              </select>   \\n                                              <div *ngIf=\\\"submitted && showQuizError\\\" class=\\\"invalid-feedback\\\">\\n                                                  <div>Choose Quiz</div>\\n                                              </div>                                           \\n                                        </div>\\n                                      </div> \\n                                      <div *ngIf=\\\"showLink\\\" class=\\\"form-group row\\\" >\\n                                          <div class=\\\"col-sm-4 col-md-4 col-lg-4\\\">\\n                                            <label for=\\\"createdby\\\">Link</label>\\n                                          </div>\\n                                          <div class=\\\"col-sm-8 col-md-8 col-lg-8\\\">\\n                                              <input formControlName =\\\"deepLink\\\" type=\\\"\\\" class=\\\"form-control\\\" id=\\\"mail\\\" placeholder=\\\"\\\" name=\\\"\\\"(change)=\\\"onChangeLink($event.target.value)\\\" [ngClass]=\\\"{ 'is-invalid': submitted && showLinkError }\\\">\\n                                              <div *ngIf=\\\"submitted && showLinkError\\\" class=\\\"invalid-feedback\\\">\\n                                                  <div>{{showLinkErrorMsg}}</div>\\n                                              </div>   \\n                                          </div>\\n                                        </div> \\n                                      <div class=\\\"form-group row\\\">\\n                                        <div class=\\\"col-sm-4 col-md-4 col-lg-4\\\">\\n                                          <label for=\\\"updadayby\\\">Mandatory</label>\\n                                        </div>\\n                                        <div class=\\\"col-sm-8 col-md-8 col-lg-8 user_buts mandatory\\\">\\n                                          <div class=\\\"\\\">\\n                                            <input type=\\\"radio\\\" formControlName=\\\"mandatory\\\"  [value]=\\\"true\\\">\\n                                            <label  >Yes</label>\\n                                          </div>\\n                                          <div class=\\\"\\\">\\n                                            <input type=\\\"radio\\\" formControlName=\\\"mandatory\\\"  [value]=\\\"false\\\">\\n                                            <label  >No</label>\\n                                            </div>                                       \\n                                        </div>\\n                                      </div>\\n                                      \\n                                  </div>\\n                              </div>\\n                          </div>\\n                    </div>\\n                  </div>\\n                   <div class=\\\"right_panel_inner\\\">\\n                      <div class=\\\"right_panel_box2\\\">\\n                          <div class=\\\" user_fileds\\\">\\n                              <div class=\\\"row\\\">\\n                                  <div class=\\\"col-sm-6 col-md-6 col-lg-6\\\">\\n                                      <div class=\\\"form-group row\\\">\\n                                          <div class=\\\"col-sm-4 col-md-4 col-lg-4\\\">\\n                                            <label >Points</label>\\n                                          </div>\\n                                          <div class=\\\"col-sm-8 col-md-8 col-lg-8\\\">\\n                                            <input formControlName=\\\"awardPoints\\\" type=\\\"number\\\" class=\\\"form-control\\\" id=\\\"mail\\\" placeholder=\\\"\\\" name=\\\"\\\">\\n                                            <div *ngIf=\\\"submitted && f.awardPoints.errors\\\" class=\\\"\\\">\\n                                                <div *ngIf=\\\"f.awardPoints.errors.required\\\">Points Required</div>\\n                                            </div> \\n                                          </div>\\n                                      </div>\\n                                  </div>\\n                                  <div class=\\\"col-sm-6 col-md-6 col-lg-6\\\">\\n                                      <div class=\\\"form-group row\\\">\\n                                          <!-- <div class=\\\"col-sm-4 col-md-4 col-lg-4\\\">\\n                                            <label for=\\\"mname\\\">Status</label>\\n                                          </div> -->\\n                                          <!-- <div class=\\\"col-sm-8 col-md-8 col-lg-8\\\">\\n                                               <div class=\\\"custom-switch custom-switch-label-onoff d-flex\\\">\\n                                                 \\n                                                  <input class=\\\"custom-switch-input\\\" id=\\\"btn_00\\\" formControlName =\\\"status\\\"  [checked]=\\\"(assets?.active==true) ? false: true\\\"  type=\\\"checkbox\\\">\\n                                                  <label class=\\\"custom-switch-btn\\\" for=\\\"btn_013\\\"></label>\\n                                              </div>\\n                                           \\n                                              </div> -->\\n                                        </div>\\n                                  </div>\\n                                 <div *ngIf=\\\"showGroup\\\" class=\\\"col-sm-12 col-md-12 col-lg-12 groups_maps\\\">\\n                                      <div class=\\\"row\\\">\\n                                        <div class=\\\"col-sm-6 col-md-6 col-lg-6\\\">\\n                                          <h5>Groups</h5>\\n                                        </div>\\n                                         <div class=\\\"col-sm-6 col-md-6 col-lg-6\\\">\\n                                          <h5 class=\\\"space_1\\\">Mappings</h5>\\n                                        </div>\\n                                         <div class=\\\" swipe_section\\\">\\n                                         <div class=\\\"swipe_boxes\\\">\\n                                          <ul *ngFor=\\\"let group of groups\\\">\\n                                            <li (click)=\\\"pushRight(group)\\\" [value]=\\\"group.id\\\">{{group.name}}</li>\\n                                            <!-- <li>Non MSL Group</li>\\n                                            <li>Glaucoma Group.</li> -->\\n                                          </ul>\\n                                        </div>\\n                                          <div class=\\\"swipe_arrow\\\">\\n                                            <div class=\\\"swipe_btn\\\">\\n                                              <span class=\\\"arrow_1\\\"><img src=\\\"assets/images/arrow_1.png\\\"></span>\\n                                              <span class=\\\"arrow_2\\\"><img src=\\\"assets/images/arrow_2.png\\\"></span>\\n                                            </div>\\n                                          </div>\\n                                         <div class=\\\"swipe_boxes\\\">\\n                                           <ul *ngFor=\\\"let assetGroup of assetMappedGroups\\\">\\n                                            <li (click)=\\\"pushLeft(assetGroup)\\\" [value]=\\\"assetGroup.id\\\">{{assetGroup.name}}</li>\\n                                          </ul>\\n                                        </div>\\n                                        </div>\\n                                    \\n                                      </div>\\n                                      <!-- <div *ngIf=\\\"submitted && showGroupError\\\" >\\n                                          <div style=\\\"width: 100%;\\n                                          margin-top: .25rem;\\n                                          font-size: 85%;\\n                                          color: #dc3545;\\\">Map atleast one Group</div>\\n                                      </div>  -->\\n\\n                                  </div>\\n                              </div>\\n                              <div class=\\\"form-group row mt-5 autoass\\\">\\n                                        \\n                                        <div class=\\\"col-sm-6 col-md-6 col-lg-6 user_buts mandatory\\\">\\n                                          <label class=\\\"mr-3\\\" >Auto Assignment</label>\\n                                           <div class=\\\"\\\">\\n                                              <input type=\\\"radio\\\" formControlName=\\\"autoAssin\\\"   [value]=\\\"true\\\" (change)=\\\"onClickAutoAssign(true)\\\">\\n                                              <label  >Yes</label>\\n                                            </div>\\n                                            <div class=\\\"\\\">\\n                                              <input type=\\\"radio\\\" formControlName=\\\"autoAssin\\\"  [value]=\\\"false\\\" (change)=\\\"onClickAutoAssign(false)\\\">\\n                                              <label  >No</label>\\n                                              </div>\\n                               \\n                                        </div>\\n                                      </div>\\n                                      <input type=\\\"hidden\\\" formControlName=\\\"id\\\" class=\\\"form-control \\\" name=\\\"id\\\" [value]=\\\"0\\\">\\n                              <div class=\\\"buttons\\\">\\n                                <button type=\\\"button\\\" class=\\\" btn-small\\\" [routerLink]=\\\"['/admin/asset']\\\">Cancel</button>\\n                                <button type=\\\"submit\\\" class=\\\" btn-small bnt_blue\\\">Apply</button>\\n                              </div>\\n                          </div>\\n                      </div>\\n                  </div>\\n                </div>\\n               </form>\\n             </div>  \\n          <!---- User Aseets  End Here ---->\\n          </section> \\n      </div>\\n  </div>\\n</main>\\n<footer class=\\\"fot_main\\\">\\n  <div class=\\\"container\\\">\\n    <div class=\\\"fot_inner\\\">\\n      <div class=\\\"row\\\"><div class=\\\"col-sm-12 col-md-12\\\"><p>© ALLERGAN 2019</p></div></div>\\n   </div>\\n</div>\\n</footer>\"","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { FormBuilder, FormGroup, Validators, FormControl } from '@angular/forms';\nimport { AssetService } from '../../../services/assetservices';\nimport { User } from 'src/app/models';\nimport { GroupService } from 'src/app/admin/services/groupservice';\nimport { Router } from '@angular/router';\nimport { AdminAsset } from '../../../model/AdminAsset';\nimport { Group } from '../../../model//group';\n\n\n@Component({\n  selector: 'app-add-asset',\n  templateUrl: './add-asset.component.html',\n  styleUrls: ['./add-asset.component.css']\n})\nexport class AddAssetComponent implements OnInit {\n  assetTypeName: any;\n  error: Boolean = false;\n  message: String = \"\";\n  showQuize: Boolean = true;\n  currentUser: User;\n  submitted = false;\n  assetForm: FormGroup;\n  fileName: string = \"Not uploaded\";\n  title: \"\";\n  assetTypes: { id: 0, userName: \"\" };\n  therapeuticAreas: { id: 0, name: \"\" };\n  products: { id: 0, name: \"\" };\n  diseaseStates: { id: 0, name: \"\" };\n  contentTypes: [{ id: 0, name: \"\" }];\n  sources = [{ id: 0, name: \"\" }];\n  regions: { id: 0, name: \"\" };\n  quizeValue: boolean = true;\n  countries: { id: 0, name: \"\" };\n  quizes: [{ id: 0, title: \"\" }];\n  alredyQuize: {\n    createdBy: 0\n    dateCreated: \"\"\n    dateUpdated: \"\"\n    id: 0\n    isActive: \"\"\n    jsonData: \"\"\n    status: \"\"\n    timer: \"\"\n    title: \"\"\n    updatedBy: 0\n  };\n  groups: any = [{ id: 0, name: \"\" }];\n  assets: {\n    id: 0, title: \"\", description: \"\", status: 0, active: false,\n    assetType: { userName: \"\" },\n    therapeuticArea: { name: \"\" },\n    product: { name: \"\" },\n    diseaseState: { name: \"\" }\n\n  };\n  sharePoint: String = \"\"\n  showQuizDropDown: boolean = false;\n  showContentTypeDropDown: boolean = true;\n  showUploadAsset: boolean = false;\n  showLink: boolean = false;\n  showGroup: boolean = true;\n  showDSError: boolean = false;\n  showProductError: boolean = false;\n  showQuizError: boolean = false;\n  showcontentTypeError: boolean = false;\n  showFileUploadError: boolean = false;\n  assetMappedGroups: any = [{ id: 0, name: \"\" }];\n  showLinkError: boolean = false;\n  showLinkErrorMsg: String = \"Link Required\";\n  showGroupError: boolean = false;\n  constructor(private formBuilder: FormBuilder,\n    private router: Router,\n    private route: ActivatedRoute,\n    private assetService: AssetService,\n    private groupService: GroupService) {\n    this.currentUser = JSON.parse(localStorage.getItem('currentUser'));\n\n    this.route.queryParams.subscribe(params => {\n      let assetId: number = params['assetId']\n      if (assetId > 0) {\n        this.assetService.getAsset(assetId, this.currentUser.id).subscribe(asset => {\n          //   //////alertJSON.stringify(asset));\n          this.assets = asset.data;\n          this.f.id.setValue(asset.data.id);\n          this.assetMappedGroups = asset.data.groups;\n          this.removeDuplicateGroups()\n          if (asset.data.assetType != null) {\n            this.f.assetType.setValue(asset.data.assetType.id);\n            this.onSelectAssetType(asset.data.assetType.id);\n          }\n          if (asset.data.therapeuticArea != null) {\n            this.f.therapeuticArea.setValue(asset.data.therapeuticArea.id);\n            this.onSelectTherapeuticArea(asset.data.therapeuticArea.id);\n          }\n          this.f.duration.setValue(asset.data.duration);\n          this.f.title.setValue(asset.data.title);\n          this.f.description.setValue(asset.data.description);\n          if (asset.data.diseaseState != null) { this.f.diseaseState.setValue(asset.data.diseaseState.id); }\n          if (asset.data.product != null) { this.f.product.setValue(asset.data.product.id); }\n          if (asset.data.contenetType != null) { this.f.contentType.setValue(asset.data.contenetType); }\n          this.f.source.setValue(asset.data.source);\n          this.onSelectSource(asset.data.source);\n          if (asset.data.source == 4) {\n            this.f.quize.setValue(asset.data.fileName)\n          } else if (asset.data.source == 2) {\n          } else {\n            this.fileName = asset.data.fileName;\n          }\n          if (asset.data.region != null) {\n            this.f.region.setValue(asset.data.region.id);\n            this.onSelectRegion(asset.data.region.id);\n          }\n          if (asset.data.country != null) { this.f.country.setValue(asset.data.country.id); }\n          this.f.expiration.setValue(asset.data.expiryDuartion);\n          this.f.awardPoints.setValue(asset.data.awardPoints);\n          this.f.mandatory.setValue(asset.data.mandatory);\n          this.f.deepLink.setValue(asset.data.deepLink);\n          this.fileName = asset.data.fileName;\n          this.f.autoAssin.setValue(asset.data.autoAssignment);\n          if (asset.data.autoAssignment) {\n            this.showGroup = false;\n          }\n          this.f.status.setValue(true);\n\n        });\n      }\n    });\n\n    this.assetService.getAssetTypes().pipe().subscribe(assetTypes => {\n      this.assetTypes = assetTypes.data;\n      this.assetTypeName = this.assetTypes[0]\n    });\n\n    this.assetService.getRegion().pipe().subscribe(regions => {\n      this.regions = regions.data;\n    });\n\n    this.assetService.getSources().pipe().subscribe(sources => {\n      this.sources = sources.data;\n    });\n\n    this.assetService.getContentTypes().pipe().subscribe(contentTypes => {\n      this.contentTypes = contentTypes.data;\n    });\n\n    this.groupService.getGroups().pipe().subscribe(groups => {\n      this.groups = groups.data;\n    });\n  }\n\n  ngOnInit() {\n    this.assetForm = this.formBuilder.group({\n      id: [0],\n      assetType: ['', [Validators.required]],\n      therapeuticArea: ['', [Validators.required]],\n      duration: [60, [Validators.required]],\n      title: ['', [Validators.required, Validators.minLength(3), Validators.maxLength(50)]],\n      description: ['', [Validators.required, Validators.minLength(3), Validators.maxLength(250)]],\n      expiration: [30, [Validators.required, Validators.minLength(1)]],\n      awardPoints: [100, [Validators.required]],\n      status: [true],\n      autoAssin: [false],\n      mandatory: [false],\n      deepLink: [''],//, [Validators.required]],\n      product: [''],//, [Validators.required]], \n      diseaseState: [''],//, [Validators.required]],\n      contentType: [''],\n      source: ['', [Validators.required, Validators.minLength(1)]],\n      region: [''],// [Validators.required]],\n      country: [''],//[Validators.required]],\n      quize: [''],//, [Validators.required]],\n      file: [''],\n    });\n\n  }\n  onSelectAssetType(assetTypeId: any) {\n    if (assetTypeId != null && assetTypeId > 0) {\n      this.assetService.getTherapeuticAreas(assetTypeId).pipe().subscribe(therapeuticAreas => {\n        this.therapeuticAreas = therapeuticAreas.data;\n      });\n    } else {\n      this.therapeuticAreas = null;\n      this.diseaseStates = null;\n      this.products = null;\n      this.f.therapeuticArea.setValue('')\n      this.f.product.setValue('');\n      this.f.diseaseState.setValue('');\n    }\n  }\n  onSelectTherapeuticArea(therapeuticAreaId: any) {\n    if (therapeuticAreaId != null && therapeuticAreaId > 0) {\n      this.assetService.getDiseaseStateForTA(therapeuticAreaId).pipe().subscribe(diseaseStates => {\n        this.diseaseStates = diseaseStates.data;\n      });\n      this.assetService.getProductsForTA(therapeuticAreaId).pipe().subscribe(products => {\n        this.products = products.data;\n      });\n    } else {\n      this.diseaseStates = null;\n      this.products = null;\n      this.f.product.setValue('');\n      this.f.diseaseState.setValue('');\n    }\n  }\n\n  onSelectDiseaseState(diseaseStateId: any) {\n    if (diseaseStateId != null && diseaseStateId > 0) {\n      this.showDSError = false;\n      this.showProductError = false;\n      return;\n    } else if (this.assetForm.value.product == null && this.assetForm.value.product < 0) {\n      this.showDSError = true;\n      this.showProductError = true;\n      return;\n    } else {\n      this.showDSError = true;\n      this.showProductError = true;\n    }\n  }\n\n  onSelectProduct(productId: any) {\n    if (productId != null && productId > 0) {\n      this.showDSError = false;\n      this.showProductError = false;\n      return;\n    } else if (this.assetForm.value.diseaseState == null && this.assetForm.value.diseaseState < 0) {\n      this.showDSError = true;\n      this.showProductError = true;\n      return;\n    } else {\n      this.showDSError = true;\n      this.showProductError = true;\n    }\n  }\n\n  onSelectQuiz(quizId: any) {\n\n    if (quizId == undefined && quizId != null) {\n      //alertquizId);\n      // this.fileName=String(quizId);\n      //this.showQuizError = false;\n      //return;\n    }\n    //this.showQuizError = true;\n  }\n\n  onSelectRegion(regionId: any) {\n    this.assetService.getCountries(regionId).pipe().subscribe(countries => {\n      this.countries = countries.data;\n    });\n  }\n  onFileSelect(event) {\n    if (event.target.files.length > 0) {\n      const file = event.target.files[0];\n      this.assetForm.get('file').setValue(file);\n      this.fileName = file.name;\n      this.quizeValue = false;\n      this.assetForm.get('contentType').setValue(this.contentTypes.find(x => x.name == this.fileName.split('.').pop()).id);\n      this.showFileUploadError = false;\n    }\n  }\n\n  onSelectSource(sourceId: number) {\n    this.sharePoint = \"\"\n    this.alredyQuize=undefined;\n    this.showQuize = true;\n    this.quizeValue = false;\n    if (sourceId != undefined && sourceId != null) {\n      if (this.sources.find(x => x.id == sourceId)) {\n        if (this.sources.find(x => x.id == sourceId).name === \"Quiz\") {\n          this.showQuize = false;\n          this.assetForm.get('file').setValue('');\n          this.fileName= \"Not uploaded\";\n          this.quizeValue = true;\n\n        }\n        if (this.sources.find(x => x.id == sourceId).name === \"share point\") {\n          this.sharePoint = \"yes\"\n          this.assetForm.get('file').setValue('');\n          this.fileName= \"Not uploaded\";\n          this.alredyQuize=undefined;\n\n        }\n      }\n\n    }\n    this.showQuizDropDown = false;\n    this.showLink = false;\n\n    if (sourceId == 4) {\n      this.showContentTypeDropDown = false;\n      this.showQuizDropDown = true;\n      this.showUploadAsset = false;\n      this.showLink = false;\n      this.route.queryParams.subscribe(params => {\n\n        this.assetService.getQuizes().pipe().subscribe(quizes => {\n          this.quizes = quizes.data;\n        });\n\n        return;\n      });\n    } else if (sourceId == 2) {\n      this.showQuizDropDown = false;\n      this.showUploadAsset = false;\n      this.showLink = true;\n      this.showContentTypeDropDown = false;\n      this.f.contentType.setValue('');\n      return;\n    }\n    this.showUploadAsset = true;\n    this.showContentTypeDropDown = true;\n    this.showcontentTypeError = (this.assetForm.value.contentType.length == 0 && this.submitted);\n  }\n\n  onClickAutoAssign(flag: boolean) {\n    this.showGroup = !flag;\n  }\n  onChangeLink(link: String) {\n    if (link.length == 0) {\n      this.showLinkError = true;\n      this.showLinkErrorMsg = \"Link Required\";\n      return;\n    } else if (link.length < 3) {\n      this.showLinkError = true;\n      this.showLinkErrorMsg = \"Link Minimum 3 Charecters\";\n      return;\n    } else if (link.length > 250) {\n      this.showLinkError = true;\n      this.showLinkErrorMsg = \"Link Maximum 250 Charecters\";\n      return;\n    } else {\n      this.showLinkError = false;\n    }\n  }\n  pushRight(group: Group) {\n    this.assetMappedGroups.push(group);\n    this.groups = this.groups.filter((ele) => { return ele['name'] != group.name; });\n    this.showGroupError = false;\n  }\n  pushLeft(group: Group) {\n    this.groups.push(group);\n    this.assetMappedGroups = this.assetMappedGroups.filter((ele) => { return ele['name'] != group.name; });\n    if (this.assetMappedGroups.length < 2) {\n      this.showGroupError = true;\n    }\n\n  }\n\n  removeDuplicateGroups() {\n    for (var i = this.assetMappedGroups.length - 1; i >= 0; i--) {\n      for (var j = 0; j < this.groups.length; j++) {\n        if (this.assetMappedGroups[i] && (this.assetMappedGroups[i]['name'] === this.groups[j]['name'])) {\n          this.groups.splice(j, 1);\n        }\n      }\n    }\n  }\n\n  get f() { return this.assetForm.controls; }\n\n  onSubmit() {\n    this.error = false;\n    if (this.assetForm.invalid) {\n\n      this.submitted = true;\n      if ((this.assetForm.value.diseaseState.length == 0) && (this.assetForm.value.product.length == 0)) {\n     \n        this.showDSError = true;\n        this.showProductError = true;\n      }\n     \n\n      if (this.showContentTypeDropDown && this.assetForm.value.contentType.length == 0) {\n      \n        this.showcontentTypeError = true;\n      }\n\n      if (this.showUploadAsset && this.assetForm.value.file.length == 0 && this.fileName.includes(\"Not uploaded\")) {\n      \n        this.showFileUploadError = true;\n      }\n      if (this.showLink) {\n        let link = this.assetForm.value.deepLink;\n        if (link.length == 0) {\n          this.showLinkError = true;\n          this.showLinkErrorMsg = \"Link Required\";\n          return;\n        } else if (link.length < 3) {\n          this.showLinkError = true;\n          this.showLinkErrorMsg = \"Link Minimum 3 Charecters\";\n          return;\n        } else if (link.length > 250) {\n          this.showLinkError = true;\n          this.showLinkErrorMsg = \"Link Maximum 250 Charecters\";\n          return;\n        } else {\n          this.showLinkError = false;\n        }\n      }\n      return;\n    }\n    if ((this.assetForm.value.diseaseState.length == 0) && (this.assetForm.value.product.length == 0)) {\n      //////alert\"7\");\n      this.submitted = true;\n      this.showDSError = true;\n      this.showProductError = true;\n      return;\n    }\n\n    if (this.showUploadAsset && this.assetForm.value.file.length == 0 && (this.fileName == \"Not uploaded\")) {\n\n      //////alert\"4\");\n      if (this.showQuize == false) {\n        //////alert\"upload\");\n      } else {\n        this.submitted = true;\n        this.showFileUploadError = true;\n        return;\n      }\n\n    }\n\n    if (this.showLink) {\n      //////alert\"3\");\n      this.submitted = true;\n      let link = this.assetForm.value.deepLink;\n      if (link.length == 0) {\n        this.showLinkError = true;\n        this.showLinkErrorMsg = \"Link Required\";\n        return;\n      } else if (link.length < 3) {\n        this.showLinkError = true;\n        this.showLinkErrorMsg = \"Link Minimum 3 Charecters\";\n        return;\n      } else if (link.length > 250) {\n        this.showLinkError = true;\n        this.showLinkErrorMsg = \"Link Maximum 250 Charecters\";\n        return;\n      } else {\n        \n        this.showLinkError = false;\n      }\n    }\n    if (!this.assetForm.value.autoAssin && this.assetMappedGroups.length < 1) {\n      //////alert\"2\");\n      this.submitted = true;\n      this.showGroupError = true;\n      return;\n    }\n    let formData = new FormData();\n    formData.append('id', this.assetForm.value.id);\n    let userid = this.currentUser.id;\n    var stringForm = userid.toString();\n    formData.append('userId', stringForm);\n    formData.append('assetType', this.assetForm.value.assetType);\n    formData.append('duration', this.assetForm.value.duration);\n    formData.append('title', this.assetForm.value.title);\n    formData.append('therapeuticArea', this.assetForm.value.therapeuticArea);\n    formData.append('description', this.assetForm.value.description);\n    formData.append('diseaseState', this.assetForm.value.diseaseState);\n    if (this.quizeValue == true) {\n     \n      let quiz = \"quiz\";\n      this.assetForm.get('contentType').setValue(this.contentTypes.find(x => x.name == quiz).id);\n\n    }\n    if(this.sharePoint==\"yes\"){\n      if(this.contentTypes.find(x=>x.name==String(\"link\"))){\n     \n        this.assetForm.get('contentType').setValue(this.contentTypes.find(x=>x.name==String(\"link\")).id);\n      }\n    }\n    formData.append('contenetType', this.assetForm.value.contentType);\n    formData.append('product', this.assetForm.value.product);\n    formData.append('source', this.assetForm.value.source);\n    formData.append('region', this.assetForm.value.region);\n    formData.append('deepLink', this.assetForm.value.deepLink);\n    formData.append('country', this.assetForm.value.country);\n    formData.append('expiration', this.assetForm.value.expiration);\n    formData.append('awardPoints', this.assetForm.value.awardPoints);\n    formData.append('mandatory', this.assetForm.value.mandatory);\n    formData.append('status', this.assetForm.value.status);\n    formData.append('autoAssin', this.assetForm.value.autoAssin);\n    formData.append('quize', this.assetForm.value.quize);\n    //alert(\"----------\");\n    //alert(this.assetForm.value.quize);\n    ////alertJSON.stringify(this.assetForm.value.quize));\n    ////alertJSON.stringify(this.alredyQuize));\n    //alert\"befor sub\");\n\n    //alertthis.alredyQuize);\n    //alertthis.fileName);\n    //alertthis.sharePoint);\n    console.log(this.assetForm.value.quize);\n    if (this.fileName == \"Not uploaded\" && this.alredyQuize != undefined) {\n      formData.append('fileName', String(this.alredyQuize));\n    } else {\n      formData.append('fileName', this.fileName);\n    }\n    //////alert\"content type-->> \"+this.assetForm.value.contentType);\n    formData.append('file', this.assetForm.value.file);\n    //formData.append('fileName', this.fileName);\n    //alertJSON.stringify(this.fileName));\n    if (!this.assetForm.value.autoAssin) {\n      //////alert\"1\");\n      this.assetMappedGroups.forEach(i => {\n        formData.append('mappedGroupIds[]', i.id.toString());\n      })\n    }\n    this.error =false;\n    this.message=\"\";\n    if ((this.fileName == \"Not uploaded\" && this.alredyQuize == undefined)  && this.sharePoint==\"\") {\n      this.error = true;\n      this.message = \"Please enter qize\"\n    }\n    // }else if (this.sharePoint==\"\"){\n    //   this.error = true;\n    //   this.message = \"Please enter link\"\n    // }\n    else {\n     \n     \n     \n      console.log(this.assetForm.value.contentType);\n      //alert\"yyyyy\");\n    \n      \n      //  / alert(this.assetForm.value.contentType);\n        this.assetService.addAsset(formData).pipe().subscribe(asset => {\n          this.router.navigate(['/admin/asset']);\n        });\n      \n    }\n  }\n\n}\n","﻿export * from './add-asset.component';","module.exports = \".wmd-view-topscroll, .wmd-view {\\r\\n    overflow-x: scroll;\\r\\n    overflow-y: hidden;\\r\\n}\\r\\n.wmd-view-topscroll::-webkit-scrollbar-track, .wmd-view::-webkit-scrollbar-track\\r\\n{\\r\\n\\t-webkit-box-shadow: inset 0 0 6px rgba(0,0,0,0.3);\\r\\n\\tborder-radius: 10px;\\r\\n\\tbackground-color: #F5F5F5;\\r\\n}\\r\\n.wmd-view-topscroll::-webkit-scrollbar, .wmd-view::-webkit-scrollbar\\r\\n{\\r\\n    width: 6px;\\r\\n    height: 6px;\\r\\n\\tbackground-color: #F5F5F5;\\r\\n}\\r\\n.wmd-view-topscroll::-webkit-scrollbar-thumb, .wmd-view::-webkit-scrollbar-thumb\\r\\n{\\r\\n\\tborder-radius: 10px;\\r\\n\\t-webkit-box-shadow: inset 0 0 6px rgba(0,0,0,.3);\\r\\n\\tbackground-color: #555;\\r\\n}\\r\\n.table {\\r\\n\\ttable-layout: fixed;\\r\\n}\\r\\n.tableHead > th:nth-child(1) {\\r\\n\\twidth: 250px;\\r\\n}\\r\\n.tableHead > th:nth-child(2) {\\r\\n\\twidth: 125px;\\r\\n}\\r\\n.tableHead > th:nth-child(3) {\\r\\n\\twidth: 115px;\\r\\n}\\r\\n.tableHead > th:nth-child(4) {\\r\\n\\twidth: 75px;\\r\\n}\\r\\n.tableHead > th:nth-child(5) {\\r\\n\\twidth: 60px;\\r\\n}\\r\\n.tableHead > th:nth-child(6) {\\r\\n\\twidth: 75px;\\r\\n}\\r\\n.tableHead > th:nth-child(7) {\\r\\n\\twidth: 25px;\\r\\n}\\r\\n.tableHead > th:nth-child(8) {\\r\\n\\twidth: 25px;\\r\\n}\\r\\n.query, .delete {\\r\\n\\tmargin:  0px auto;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYWRtaW4vaG9tZS9hc3NldHMvYXNzZXRzLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxrQkFBa0I7SUFDbEIsa0JBQWtCO0FBQ3RCO0FBQ0E7O0NBRUMsaURBQWlEO0NBQ2pELG1CQUFtQjtDQUNuQix5QkFBeUI7QUFDMUI7QUFFQTs7SUFFSSxVQUFVO0lBQ1YsV0FBVztDQUNkLHlCQUF5QjtBQUMxQjtBQUVBOztDQUVDLG1CQUFtQjtDQUNuQixnREFBZ0Q7Q0FDaEQsc0JBQXNCO0FBQ3ZCO0FBRUE7Q0FDQyxtQkFBbUI7QUFDcEI7QUFDQTtDQUNDLFlBQVk7QUFDYjtBQUNBO0NBQ0MsWUFBWTtBQUNiO0FBQ0E7Q0FDQyxZQUFZO0FBQ2I7QUFDQTtDQUNDLFdBQVc7QUFDWjtBQUNBO0NBQ0MsV0FBVztBQUNaO0FBQ0E7Q0FDQyxXQUFXO0FBQ1o7QUFDQTtDQUNDLFdBQVc7QUFDWjtBQUNBO0NBQ0MsV0FBVztBQUNaO0FBQ0E7Q0FDQyxpQkFBaUI7QUFDbEIiLCJmaWxlIjoic3JjL2FwcC9hZG1pbi9ob21lL2Fzc2V0cy9hc3NldHMuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi53bWQtdmlldy10b3BzY3JvbGwsIC53bWQtdmlldyB7XHJcbiAgICBvdmVyZmxvdy14OiBzY3JvbGw7XHJcbiAgICBvdmVyZmxvdy15OiBoaWRkZW47XHJcbn1cclxuLndtZC12aWV3LXRvcHNjcm9sbDo6LXdlYmtpdC1zY3JvbGxiYXItdHJhY2ssIC53bWQtdmlldzo6LXdlYmtpdC1zY3JvbGxiYXItdHJhY2tcclxue1xyXG5cdC13ZWJraXQtYm94LXNoYWRvdzogaW5zZXQgMCAwIDZweCByZ2JhKDAsMCwwLDAuMyk7XHJcblx0Ym9yZGVyLXJhZGl1czogMTBweDtcclxuXHRiYWNrZ3JvdW5kLWNvbG9yOiAjRjVGNUY1O1xyXG59XHJcblxyXG4ud21kLXZpZXctdG9wc2Nyb2xsOjotd2Via2l0LXNjcm9sbGJhciwgLndtZC12aWV3Ojotd2Via2l0LXNjcm9sbGJhclxyXG57XHJcbiAgICB3aWR0aDogNnB4O1xyXG4gICAgaGVpZ2h0OiA2cHg7XHJcblx0YmFja2dyb3VuZC1jb2xvcjogI0Y1RjVGNTtcclxufVxyXG5cclxuLndtZC12aWV3LXRvcHNjcm9sbDo6LXdlYmtpdC1zY3JvbGxiYXItdGh1bWIsIC53bWQtdmlldzo6LXdlYmtpdC1zY3JvbGxiYXItdGh1bWJcclxue1xyXG5cdGJvcmRlci1yYWRpdXM6IDEwcHg7XHJcblx0LXdlYmtpdC1ib3gtc2hhZG93OiBpbnNldCAwIDAgNnB4IHJnYmEoMCwwLDAsLjMpO1xyXG5cdGJhY2tncm91bmQtY29sb3I6ICM1NTU7XHJcbn1cclxuXHJcbi50YWJsZSB7XHJcblx0dGFibGUtbGF5b3V0OiBmaXhlZDtcclxufVxyXG4udGFibGVIZWFkID4gdGg6bnRoLWNoaWxkKDEpIHtcclxuXHR3aWR0aDogMjUwcHg7XHJcbn1cclxuLnRhYmxlSGVhZCA+IHRoOm50aC1jaGlsZCgyKSB7XHJcblx0d2lkdGg6IDEyNXB4O1xyXG59XHJcbi50YWJsZUhlYWQgPiB0aDpudGgtY2hpbGQoMykge1xyXG5cdHdpZHRoOiAxMTVweDtcclxufVxyXG4udGFibGVIZWFkID4gdGg6bnRoLWNoaWxkKDQpIHtcclxuXHR3aWR0aDogNzVweDtcclxufVxyXG4udGFibGVIZWFkID4gdGg6bnRoLWNoaWxkKDUpIHtcclxuXHR3aWR0aDogNjBweDtcclxufVxyXG4udGFibGVIZWFkID4gdGg6bnRoLWNoaWxkKDYpIHtcclxuXHR3aWR0aDogNzVweDtcclxufVxyXG4udGFibGVIZWFkID4gdGg6bnRoLWNoaWxkKDcpIHtcclxuXHR3aWR0aDogMjVweDtcclxufVxyXG4udGFibGVIZWFkID4gdGg6bnRoLWNoaWxkKDgpIHtcclxuXHR3aWR0aDogMjVweDtcclxufVxyXG4ucXVlcnksIC5kZWxldGUge1xyXG5cdG1hcmdpbjogIDBweCBhdXRvO1xyXG59Il19 */\"","module.exports = \"\\n \\n<app-admin-top-nav></app-admin-top-nav>\\n<router-outlet></router-outlet>\\n    <!-- Page section start -->\\n    <main class=\\\"main_container\\\">\\n        <div class=\\\"container\\\">\\n            <div class=\\\"main_con_inner\\\">\\n          \\n\\n                <app-admin-side-nav></app-admin-side-nav>\\n\\n                <!-- right section  start -->\\n                <section class=\\\"right_panel\\\">\\n                       <!--------- Add Groups Start Here ---------->\\n  <div class=\\\"addgroup hide_tab active\\\" id=\\\"pop_2\\\">\\n    <!-- <div class=\\\"add_group_pop\\\">\\n       <div class=\\\"group_pop_content\\\">\\n            <div class=\\\"rph_header\\\">\\n                <div class=\\\"row\\\">\\n                    <div class=\\\"col-sm-12 col-md-12 col-lg-12 rph_left\\\">\\n                        <h5>Add Asset</h5>\\n                    </div>\\n                </div>\\n            </div>\\n       </div>\\n    </div> -->\\n    <div class=\\\"right_panel_inner\\\">\\n          <div class=\\\"rph_header\\\">\\n              <div class=\\\"row\\\">\\n                  <div class=\\\"col-sm-6 col-md-6 col-lg-6 rph_left\\\">\\n                      <h5>Assets</h5>\\n                  </div>\\n\\n                  <div class=\\\"col-sm-6 col-md-6 col-lg-6\\\">\\n                      <div class=\\\"rph_right\\\">\\n                          <button type=\\\"button\\\" id=\\\"addAsset\\\" class=\\\"btn-small bnt_blue\\\" [routerLink]=\\\"['/admin/asset/add']\\\" [queryParams]=\\\"{'assetId': '0'}\\\">Add Asset</button>\\n                      </div>\\n                  </div>\\n              </div>\\n          </div>\\n          <div class=\\\"right_panel_box group_table\\\">\\n            <!-- <div class=\\\"wmd-view-topscroll\\\">\\n                <div class=\\\"scroll-div1\\\">\\n                </div>\\n            </div> -->\\n            <div class=\\\"table-responsive wmd-view\\\">\\n              <table class=\\\"table\\\">\\n                  <thead>\\n                      <tr class=\\\"tableHead\\\">\\n                          <th>Title</th>\\n                          <th>Asset Type</th>\\n                          <th>Therapeutic Area</th>\\n                          <th>Disease State</th>\\n                          <th>Product</th>\\n                          <th></th>\\n                          <th></th>\\n                          <th></th>\\n                      </tr>\\n                  </thead>\\n                  <tbody>\\n                      <tr *ngFor=\\\"let asset of assets; index as i\\\">\\n                          <td>{{asset.title}}</td>\\n                          <td>{{asset.assetType != null ? asset.assetType.userName:\\\"\\\"}}</td>\\n                          <td>{{asset.therapeuticArea != null ? asset.therapeuticArea.name:\\\"\\\"}}</td>\\n                          <td>{{asset.diseaseState != null ? asset.diseaseState.name:\\\"\\\"}}</td>\\n                          <td>{{asset.product != null ? asset.product.name :\\\"\\\"}}</td>\\n                          <td>\\n                            <div class=\\\"custom-switch custom-switch-label-onoff d-flex\\\">\\n                                <input class=\\\"custom-switch-input\\\" id=\\\"{{'btn_0'+i}}\\\" [checked]=\\\"(asset.active==true) ? false: true\\\"  (change) =\\\"assetStatus($event,asset.id)\\\" type=\\\"checkbox\\\">\\n                                <label class=\\\"custom-switch-btn\\\" for=\\\"{{'btn_0'+i}}\\\"></label>\\n                            </div>\\n                          </td>\\n                          <td>\\n                               <div class=\\\"info_btn\\\"> <button type=\\\"button\\\" class=\\\"query\\\" [routerLink]=\\\"['/admin/edit/asset/'+asset.id]\\\"><img src=\\\"assets/images/query_icon.png\\\"></button></div>\\n                          </td> \\n                           <td>\\n                              <button type=\\\"button\\\" class=\\\"delete\\\" (click)=\\\"onDeleteAsset($event,asset.id)\\\"><i class=\\\"far fa-trash-alt\\\"></i></button>\\n                          </td>\\n                      </tr>\\n                    </tbody>\\n              </table>\\n              </div>\\n          </div>\\n    </div>\\n    \\n </div>  \\n  <!---- Add Groups  End Here ---->\\n\\n\\n                     \\n                      \\n\\n\\n                </section> <!-- Right Panel End Here -->\\n            </div>\\n        </div>\\n    </main>\\n    <footer class=\\\"fot_main\\\">\\n      <div class=\\\"container\\\">\\n        <div class=\\\"fot_inner\\\">\\n          <div class=\\\"row\\\"><div class=\\\"col-sm-12 col-md-12\\\"><p>© ALLERGAN 2019</p></div></div>\\n        </div>\\n      </div>\\n    </footer>\\n  \"","import { Component, OnInit } from '@angular/core';\nimport { AlertService } from '../../../services';\nimport { User } from '../../../models';\nimport { AssetService } from '../../services/assetservices';\n@Component({\n  selector: 'app-assets',\n  templateUrl: './assets.component.html',\n  styleUrls: ['./assets.component.css']\n})\nexport class AssetsComponent implements OnInit {\n  currentUser: User;\n  addAssetShow:boolean = false;\n  assets:  [{id:0,title:\"\",description:\"\",status:0,\n               assetType:{userName:\"\"},\n               therapeuticArea:{name:\"\"},\n               product:{name:\"\"},\n               diseaseState:{name:\"\"}\n                       \n            }];\n  constructor(\n     private alertService: AlertService,\n     private assetService:AssetService) {\n    this.currentUser = JSON.parse(localStorage.getItem('currentUser'));\n    this.assetService.getAssets(this.currentUser.id).pipe().subscribe(assets => {      \n      this.assets = assets.data;\n      console.log(this.assets);\n  });\n  \n}\n\n  ngOnInit() {\n    // $(function(){\n    //   console.log($(\".wmd-view-topscroll\"))\n    //   $(\".wmd-view-topscroll\").scroll(function(){\n    //       $(\".wmd-view\")\n    //           .scrollLeft($(\".wmd-view-topscroll\").scrollLeft());\n    //   });\n    //   $(\".wmd-view\").scroll(function(){\n    //       $(\".wmd-view-topscroll\")\n    //           .scrollLeft($(\".wmd-view\").scrollLeft());\n    //   });\n  // });\n\n  setTimeout(() => {\n    // var table = <HTMLElement>document.querySelector('.table');\n    // var tableWidth = table.clientWidth;\n    // var topScroll = <HTMLElement>document.querySelector('.scroll-div1');\n    // topScroll.style.width = tableWidth + 'px';\n    // topScroll.style.height = 5 + 'px';\n\n\n\n    $(function(){\n        $(\".wmd-view-topscroll\").scroll(function(){\n            $(\".wmd-view\")\n                .scrollLeft($(\".wmd-view-topscroll\").scrollLeft());\n            \n        });\n        $(\".wmd-view\").scroll(function(){\n            $(\".wmd-view-topscroll\")\n                .scrollLeft($(\".wmd-view\").scrollLeft());\n        });\n    });\n\n\n\n\n  }, 5000);\n  \n}\n\n\n  \n\n  addAsset() {\n    this.addAssetShow=true;\n      \n  }\n  assetStatus($event, assetId:Number){\n   \n    let status=false;\n        if($event.target.checked==false){\n        status=true;\n        }\n      this.assetService.changeAssetStatus(assetId,status).pipe().subscribe(assets => {      \n      this.assets = assets.data;\n    });\n  }\n  onDeleteAsset($event, assetId:Number){\n   \n    this.assetService.deleteAsset(assetId).pipe().subscribe(assets => {      \n      this.assets = assets.data;\n    });\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FkbWluL2hvbWUvYXNzZXRzL2VkaXQtYXNzZXQvZWRpdC1hc3NldC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<app-admin-top-nav></app-admin-top-nav>\\n<router-outlet></router-outlet>\\n<main class=\\\"main_container\\\">\\n  <div class=\\\"container\\\">\\n      <div class=\\\"main_con_inner\\\">\\n          <app-admin-side-nav></app-admin-side-nav>\\n          <!-- right section  start -->\\n          <section class=\\\"right_panel\\\">\\n              <div class=\\\"user_assets hide_tab active\\\"  id=\\\"pop_3\\\">\\n               <form [formGroup]=\\\"assetForm\\\" (ngSubmit)=\\\"onSubmit()\\\">            \\n                  <div class=\\\"assets_panel\\\">\\n                    <div class=\\\"right_panel_inner border_dashed\\\">\\n                        <div class=\\\"rph_header\\\">\\n                            <div class=\\\"row\\\">\\n                                <div class=\\\"col-sm-6 col-md-6 col-lg-6 rph_left\\\">\\n                                    <h5>Assets</h5>\\n                                </div>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"right_panel_box2\\\">\\n                            <div class=\\\" user_fileds\\\">\\n                                <div class=\\\"row\\\">\\n                                    <div class=\\\"col-sm-6 col-md-6 col-lg-6\\\">\\n                                        <div class=\\\"form-group row\\\">\\n                                          <div class=\\\"col-sm-4 col-md-4 col-lg-4\\\">\\n                                            <label >Asset Type</label>\\n                                          </div>\\n                                          <div class=\\\"col-sm-8 col-md-8 col-lg-8\\\">\\n                                            <select formControlName=\\\"assetType\\\" [ngClass]=\\\"{ 'is-invalid': submitted && f.assetType.errors }\\\" class=\\\"custom-select slects_option\\\" (change)=\\\"onSelectAssetType($event.target.value)\\\">\\n                                              <option value=\\\"\\\">Select AssetType</option>\\n                                              <option *ngFor=\\\"let assetType of assetTypes\\\" value={{assetType.id}} >{{assetType.userName}}</option>\\n                                            </select>\\n                                              <div *ngIf=\\\"submitted && f.assetType.errors\\\" class=\\\"invalid-feedback\\\">\\n                                                <div *ngIf=\\\"f.assetType.errors.required\\\">Choose AssetType</div>\\n                                              </div>  \\n                                        </div>\\n                                      </div>\\n                                        <div class=\\\"form-group row\\\">\\n                                          <div class=\\\"col-sm-4 col-md-4 col-lg-4\\\">\\n                                            <label for=\\\"lastname\\\">Title</label>\\n                                          </div>\\n                                            <div class=\\\"col-sm-8 col-md-8 col-lg-8\\\">\\n                                            <input type=\\\"text\\\" formControlName=\\\"title\\\"  class=\\\"form-control\\\" id=\\\"\\\" [ngClass]=\\\"{ 'is-invalid': submitted && f.title.errors }\\\" placeholder=\\\"\\\" name=\\\"lastname\\\">\\n                                             <div *ngIf=\\\"submitted && f.title.errors\\\" class=\\\"invalid-feedback\\\">\\n                                                  <div *ngIf=\\\"f.title.errors.required\\\">Title is required</div>\\n                                                  <div *ngIf=\\\"f.title.errors.minlength\\\">Title must be at least 3 characters</div>\\n                                                  <div *ngIf=\\\"f.title.errors.maxlength\\\">Title must be max 250 characters</div>\\n                                              </div> \\n                                          </div>\\n                                        </div>\\n                                        <div class=\\\"form-group row\\\">\\n                                          <div class=\\\"col-sm-4 col-md-4 col-lg-4\\\">\\n                                            <label for=\\\"\\\">Description</label>\\n                                          </div>\\n                                            <div class=\\\"col-sm-8 col-md-8 col-lg-8\\\">\\n                                            <input type=\\\"\\\" formControlName=\\\"description\\\" class=\\\"form-control\\\" [ngClass]=\\\"{ 'is-invalid': submitted && f.description.errors }\\\" id=\\\"mail\\\" placeholder=\\\"\\\" name=\\\"\\\">\\n                                            <div *ngIf=\\\"submitted && f.description.errors\\\" class=\\\"invalid-feedback\\\">\\n                                                <div *ngIf=\\\"f.description.errors.required\\\">Description is required</div>\\n                                                <div *ngIf=\\\"f.description.errors.minlength\\\">Description must be at least  3 characters</div>\\n                                                <div *ngIf=\\\"f.description.errors.maxlength\\\">Description must be max 50 characters</div>\\n                                            </div> \\n                                          </div>\\n                                        </div>\\n                                        <!-- <div class=\\\"form-group row\\\" *ngIf=\\\"showContentTypeDropDown\\\"> -->\\n                                          <!-- <div class=\\\"col-sm-4 col-md-4 col-lg-4\\\">\\n                                            <label >Content Type</label>\\n                                          </div> -->\\n                                          <!-- <div class=\\\"col-sm-8 col-md-8 col-lg-8\\\">\\n                                            <select formControlName=\\\"contentType\\\" class=\\\"custom-select slects_option\\\" [ngClass]=\\\"{ 'is-invalid': submitted && showcontentTypeError }\\\" (change)=\\\"onSelectContentType($event.target.value)\\\">\\n                                              <option value=\\\"\\\">Select ContentType</option>\\n                                              <option *ngFor=\\\"let contentType of contentTypes\\\" value={{contentType.id}} >{{contentType.name}}</option>\\n                                            </select>\\n                                            <div *ngIf=\\\"submitted && showcontentTypeError\\\" class=\\\"invalid-feedback\\\">\\n                                                <div>Choose ContentType</div>\\n                                            </div> \\n                                        </div> -->\\n                                      <!-- </div> -->\\n                                    </div>\\n                                    <div class=\\\"col-sm-6 col-md-6 col-lg-6\\\">\\n                                        <div class=\\\"form-group row\\\">\\n                                          <div class=\\\"col-sm-4 col-md-4 col-lg-4\\\">\\n                                            <label >Duration (min)</label>\\n                                          </div>\\n                                          <div class=\\\"col-sm-8 col-md-8 col-lg-8\\\">\\n                                              <input type=\\\"number\\\" formControlName=\\\"duration\\\" class=\\\"form-control\\\" id=\\\"mail\\\" placeholder=\\\"\\\" name=\\\"\\\">\\n                                              <div *ngIf=\\\"submitted && f.duration.errors\\\" class=\\\"\\\">\\n                                                  <div *ngIf=\\\"f.duration.errors.required\\\">Duration is required</div>\\n                                              </div> \\n                                            </div>\\n                                      </div>\\n                                        <div class=\\\"form-group row\\\">\\n                                          <div class=\\\"col-sm-4 col-md-4 col-lg-4\\\">\\n                                            <label >Therapeutic Area</label>\\n                                          </div>\\n                                          <div class=\\\"col-sm-8 col-md-8 col-lg-8\\\">\\n                                              <select formControlName=\\\"therapeuticArea\\\"  [ngClass]=\\\"{ 'is-invalid': submitted && f.therapeuticArea.errors }\\\" class=\\\"custom-select slects_option\\\" (change)=\\\"onSelectTherapeuticArea($event.target.value)\\\">\\n                                                  <option value=\\\"\\\">Select TherapeuticArea</option>\\n                                                <option *ngFor=\\\"let therapeuticArea of therapeuticAreas\\\" value={{therapeuticArea.id}} >{{therapeuticArea.name}}</option>\\n                                              </select>\\n                                              <div *ngIf=\\\"submitted && f.therapeuticArea.errors\\\" class=\\\"invalid-feedback\\\">\\n                                                  <div *ngIf=\\\"f.therapeuticArea.errors.required\\\">Choose  TherapeuticArea</div>\\n                                              </div>  \\n                                        </div>\\n                                      </div>\\n                                        <div class=\\\"form-group row\\\">\\n                                          <div class=\\\"col-sm-4 col-md-4 col-lg-4\\\">\\n                                            <label >Disease State</label>\\n                                          </div>\\n                                          <div class=\\\"col-sm-8 col-md-8 col-lg-8\\\">\\n                                            <select formControlName=\\\"diseaseState\\\" [ngClass]=\\\"{ 'is-invalid': submitted && showDSError }\\\" class=\\\"custom-select slects_option\\\" (change)=\\\"onSelectDiseaseState($event.target.value)\\\" >\\n                                              <option value=\\\"\\\" >Select DiseaseStates</option>\\n                                              <option *ngFor=\\\"let diseaseState of diseaseStates\\\" value={{diseaseState.id}} >{{diseaseState.name}}</option>\\n                                          </select>\\n                                           <div *ngIf=\\\"submitted && showDSError\\\" class=\\\"invalid-feedback\\\">\\n                                              <div >Choose  DiseaseState</div>\\n                                          </div> \\n                                        </div>\\n                                      </div>\\n                                    </div>\\n                                </div>\\n                            </div>\\n                            <!-- </form> -->\\n                        </div>\\n                    </div>\\n                    \\n                   <div class=\\\"right_panel_inner border_dashed\\\">\\n                      <div class=\\\"right_panel_box2\\\">\\n                          <div class=\\\"user_fileds\\\">\\n\\n                              <div *ngIf=\\\"error\\\" class=\\\"alert alert-danger alert-dismissible fade show\\\" role=\\\"alert\\\">\\n                                  {{message}} \\n                                 <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\" aria-label=\\\"Close\\\">\\n                                   <span aria-hidden=\\\"true\\\">&times;</span>\\n                                 </button>\\n                               </div>\\n\\n                              <div class=\\\"row\\\">\\n                                  <div class=\\\"col-sm-6 col-md-6 col-lg-6\\\">\\n                                      <div class=\\\"form-group row\\\">\\n                                          <div class=\\\"col-sm-4 col-md-4 col-lg-4\\\">\\n                                            <label >Product</label>\\n                                          </div>\\n                                          <div class=\\\"col-sm-8 col-md-8 col-lg-8\\\">\\n                                            <select formControlName=\\\"product\\\" [ngClass]=\\\"{ 'is-invalid': submitted && showProductError }\\\" class=\\\"custom-select slects_option\\\" (change)=\\\"onSelectProduct($event.target.value)\\\">\\n                                              <option value=\\\"\\\">Select Product</option>\\n                                             <option *ngFor=\\\"let product of products\\\" value={{product.id}} >{{product.name}}</option>\\n                                          </select>\\n                                          <div *ngIf=\\\"submitted && showProductError\\\" class=\\\"invalid-feedback\\\">\\n                                              <div>Choose  Product</div>\\n                                          </div> \\n                                        </div>\\n                                      </div>\\n                                      <div class=\\\"form-group row\\\">\\n                                          <div class=\\\"col-sm-4 col-md-4 col-lg-4\\\">\\n                                            <label >Region</label>\\n                                          </div>\\n                                          <div class=\\\"col-sm-8 col-md-8 col-lg-8\\\">\\n                                            <select formControlName=\\\"region\\\" class=\\\"custom-select slects_option\\\" (change)=\\\"onSelectRegion($event.target.value)\\\">\\n                                              <option value=\\\"\\\">Select Region</option>\\n                                              <option *ngFor=\\\"let region of regions\\\" value={{region.id}} >{{region.name}}</option>\\n                                            </select>\\n                                            <div *ngIf=\\\"submitted && f.region.errors\\\" class=\\\"\\\">\\n                                              <div *ngIf=\\\"f.region.errors.required\\\">Choose  Region</div>\\n                                          </div> \\n                                        </div>\\n                                      </div>\\n                                      <div class=\\\"form-group row\\\">\\n                                          <div class=\\\"col-sm-4 col-md-4 col-lg-4\\\">\\n                                            <label >Country</label>\\n                                          </div>\\n                                          <div class=\\\"col-sm-8 col-md-8 col-lg-8\\\">\\n                                            <select formControlName=\\\"country\\\" class=\\\"custom-select slects_option\\\">\\n                                              <option value=\\\"\\\">Select Country</option>\\n                                              <option *ngFor=\\\"let country of countries\\\" value={{country.id}} >{{country.name}}</option>\\n                                          </select>\\n                                          <div *ngIf=\\\"submitted && f.country.errors\\\" class=\\\"\\\">\\n                                            <div *ngIf=\\\"f.country.errors.required\\\">Choose Country</div>\\n                                        </div> \\n                                        </div>\\n                                      </div>\\n                                      <div class=\\\"form-group row\\\">\\n                                          <div class=\\\"col-sm-4 col-md-4 col-lg-4\\\">\\n                                            <label >Expiration Duration (days)</label>\\n                                          </div>\\n                                          <div class=\\\"col-sm-8 col-md-8 col-lg-8\\\">\\n                                              <input type=\\\"number\\\" formControlName=\\\"expiration\\\" class=\\\"form-control\\\" id=\\\"mail\\\" placeholder=\\\"\\\" name=\\\"\\\">\\n                                              <div *ngIf=\\\"submitted && f.expiration.errors\\\" class=\\\"\\\">\\n                                                  <div *ngIf=\\\"f.expiration.errors.required\\\">Expiration Duration (days) Required</div>\\n                                              </div>\\n                                          </div>\\n                                      </div>\\n                                  </div>\\n                                  <div class=\\\"col-sm-6 col-md-6 col-lg-6\\\">\\n                                      <div class=\\\"form-group row\\\">\\n                                          <div class=\\\"col-sm-4 col-md-4 col-lg-4\\\">\\n                                            <label >Source</label>\\n                                          </div>\\n                                          <div class=\\\"col-sm-8 col-md-8 col-lg-8\\\">\\n                                              <select formControlName=\\\"source\\\"  [ngClass]=\\\"{ 'is-invalid': submitted && f.source.errors }\\\" class=\\\"custom-select slects_option\\\" (change)=\\\"onSelectSource($event.target.value)\\\">\\n                                                <option value=\\\"\\\">Select Source</option>\\n                                                <option *ngFor=\\\"let source of sources\\\" value={{source.id}} >{{source.name}}</option>\\n                                              </select>\\n                                              <div *ngIf=\\\"submitted && f.source.errors\\\" class=\\\"invalid-feedback\\\">\\n                                                <div *ngIf=\\\"f.source.errors.required\\\">Choose Source</div>\\n                                            </div> \\n                                          </div>\\n                                      </div>\\n                                    <div *ngIf=\\\"showQuize && showUploadAsset\\\" class=\\\"form-group row\\\" >\\n                                        <div class=\\\"col-sm-4 col-md-4 col-lg-4\\\">\\n                                          <label for=\\\"createdby\\\">Link</label>\\n                                        </div>\\n                                        <div class=\\\"col-sm-8 col-md-8 col-lg-8\\\">\\n                                          <div  class=\\\"custom-file upload_file\\\">\\n                                            <input type=\\\"file\\\"  class=\\\"custom-file-input\\\" id=\\\"customFile\\\" (change)=\\\"onFileSelect($event)\\\" [ngClass]=\\\"{ 'is-invalid': submitted && showFileUploadError }\\\">\\n                                            <label class=\\\"custom-file-label\\\" for=\\\"customFile\\\">{{fileName}}</label>\\n                                            <div *ngIf=\\\"submitted && showFileUploadError\\\" class=\\\"invalid-feedback\\\">\\n                                                <div >Upload a file</div>\\n                                            </div> \\n                                          </div>\\n                                        </div>\\n                                      </div> \\n                                      <div *ngIf=\\\"showQuizDropDown\\\" class=\\\"form-group row\\\" >\\n                                        <div class=\\\"col-sm-4 col-md-4 col-lg-4\\\">\\n                                          <label for=\\\"createdby\\\">Quiz</label>\\n                                        </div>\\n                                        <div class=\\\"col-sm-8 col-md-8 col-lg-8\\\">\\n                                             <select formControlName =\\\"quize\\\" class=\\\"custom-select slects_option\\\" [ngClass]=\\\"{ 'is-invalid': submitted && showQuizError }\\\" [(ngModel)]=\\\"alreadyQuiz\\\" (change)=\\\"onSelectQuiz($event.target.value)\\\">\\n                                                <option value=\\\"\\\">Select Quiz</option>\\n                                                <option   [ngValue]=\\\"quize\\\" *ngFor=\\\"let quize of quizes\\\"  >{{quize.title}}</option>\\n                                              </select>   \\n                                              <div *ngIf=\\\"submitted && showQuizError\\\" class=\\\"invalid-feedback\\\">\\n                                                  <div>Choose Quiz</div>\\n                                              </div>                                           \\n                                        </div>\\n                                      </div> \\n                                      <div *ngIf=\\\"showLink\\\" class=\\\"form-group row\\\" >\\n                                          <div class=\\\"col-sm-4 col-md-4 col-lg-4\\\">\\n                                            <label for=\\\"createdby\\\">Link</label>\\n                                          </div>\\n                                          <div class=\\\"col-sm-8 col-md-8 col-lg-8\\\">\\n                                              <input formControlName =\\\"deepLink\\\" type=\\\"\\\" class=\\\"form-control\\\" id=\\\"mail\\\" placeholder=\\\"\\\" name=\\\"\\\"(change)=\\\"onChangeLink($event.target.value)\\\" [ngClass]=\\\"{ 'is-invalid': submitted && showLinkError }\\\">\\n                                              <div *ngIf=\\\"submitted && showLinkError\\\" class=\\\"invalid-feedback\\\">\\n                                                  <div>{{showLinkErrorMsg}}</div>\\n                                              </div>   \\n                                          </div>\\n                                        </div> \\n                                      <div class=\\\"form-group row\\\">\\n                                        <div class=\\\"col-sm-4 col-md-4 col-lg-4\\\">\\n                                          <label for=\\\"updadayby\\\">Mandatory</label>\\n                                        </div>\\n                                        <div class=\\\"col-sm-8 col-md-8 col-lg-8 user_buts mandatory\\\">\\n                                          <div class=\\\"\\\">\\n                                            <input type=\\\"radio\\\" formControlName=\\\"mandatory\\\"  [value]=\\\"true\\\">\\n                                            <label  >Yes</label>\\n                                          </div>\\n                                          <div class=\\\"\\\">\\n                                            <input type=\\\"radio\\\" formControlName=\\\"mandatory\\\"  [value]=\\\"false\\\">\\n                                            <label  >No</label>\\n                                            </div>                                       \\n                                        </div>\\n                                      </div>\\n                                      \\n                                  </div>\\n                              </div>\\n                          </div>\\n                    </div>\\n                  </div>\\n                   <div class=\\\"right_panel_inner\\\">\\n                      <div class=\\\"right_panel_box2\\\">\\n                          <div class=\\\" user_fileds\\\">\\n                              <div class=\\\"row\\\">\\n                                  <div class=\\\"col-sm-6 col-md-6 col-lg-6\\\">\\n                                      <div class=\\\"form-group row\\\">\\n                                          <div class=\\\"col-sm-4 col-md-4 col-lg-4\\\">\\n                                            <label >Points</label>\\n                                          </div>\\n                                          <div class=\\\"col-sm-8 col-md-8 col-lg-8\\\">\\n                                            <input formControlName=\\\"awardPoints\\\" type=\\\"number\\\" class=\\\"form-control\\\" id=\\\"mail\\\" placeholder=\\\"\\\" name=\\\"\\\">\\n                                            <div *ngIf=\\\"submitted && f.awardPoints.errors\\\" class=\\\"\\\">\\n                                                <div *ngIf=\\\"f.awardPoints.errors.required\\\">Points Required</div>\\n                                            </div> \\n                                          </div>\\n                                      </div>\\n                                  </div>\\n                                  <div class=\\\"col-sm-6 col-md-6 col-lg-6\\\">\\n                                      <div class=\\\"form-group row\\\">\\n                                          <!-- <div class=\\\"col-sm-4 col-md-4 col-lg-4\\\">\\n                                            <label for=\\\"mname\\\">Status</label>\\n                                          </div> -->\\n                                          <!-- <div class=\\\"col-sm-8 col-md-8 col-lg-8\\\">\\n                                               <div class=\\\"custom-switch custom-switch-label-onoff d-flex\\\">\\n                                                 \\n                                                  <input class=\\\"custom-switch-input\\\" id=\\\"btn_00\\\" formControlName =\\\"status\\\"  [checked]=\\\"(assets?.active==true) ? false: true\\\"  type=\\\"checkbox\\\">\\n                                                  <label class=\\\"custom-switch-btn\\\" for=\\\"btn_013\\\"></label>\\n                                              </div>\\n                                           \\n                                              </div> -->\\n                                        </div>\\n                                  </div>\\n                                 <div *ngIf=\\\"showGroup\\\" class=\\\"col-sm-12 col-md-12 col-lg-12 groups_maps\\\">\\n                                      <div class=\\\"row\\\">\\n                                        <div class=\\\"col-sm-6 col-md-6 col-lg-6\\\">\\n                                          <h5>Groups</h5>\\n                                        </div>\\n                                         <div class=\\\"col-sm-6 col-md-6 col-lg-6\\\">\\n                                          <h5 class=\\\"space_1\\\">Mappings</h5>\\n                                        </div>\\n                                         <div class=\\\" swipe_section\\\">\\n                                         <div class=\\\"swipe_boxes\\\">\\n                                          <ul *ngFor=\\\"let group of groups\\\">\\n                                            <li (click)=\\\"pushRight(group)\\\" [value]=\\\"group.id\\\">{{group.name}}</li>\\n                                            <!-- <li>Non MSL Group</li>\\n                                            <li>Glaucoma Group.</li> -->\\n                                          </ul>\\n                                        </div>\\n                                          <div class=\\\"swipe_arrow\\\">\\n                                            <div class=\\\"swipe_btn\\\">\\n                                              <span class=\\\"arrow_1\\\"><img src=\\\"assets/images/arrow_1.png\\\"></span>\\n                                              <span class=\\\"arrow_2\\\"><img src=\\\"assets/images/arrow_2.png\\\"></span>\\n                                            </div>\\n                                          </div>\\n                                         <div class=\\\"swipe_boxes\\\">\\n                                           <ul *ngFor=\\\"let assetGroup of assetMappedGroups\\\">\\n                                            <li (click)=\\\"pushLeft(assetGroup)\\\" [value]=\\\"assetGroup.id\\\">{{assetGroup.name}}</li>\\n                                          </ul>\\n                                        </div>\\n                                        </div>\\n                                    \\n                                      </div>\\n                                      <div *ngIf=\\\"submitted && showGroupError\\\" >\\n                                          <div style=\\\"width: 100%;\\n                                          margin-top: .25rem;\\n                                          font-size: 85%;\\n                                          color: #dc3545;\\\">Map atleast one Group</div>\\n                                      </div> \\n\\n                                  </div>\\n                              </div>\\n                              <div class=\\\"form-group row mt-5 autoass\\\">\\n                                        \\n                                        <div class=\\\"col-sm-6 col-md-6 col-lg-6 user_buts mandatory\\\">\\n                                          <label class=\\\"mr-3\\\" >Auto Assignment</label>\\n                                           <div class=\\\"\\\">\\n                                              <input type=\\\"radio\\\" formControlName=\\\"autoAssin\\\"   [value]=\\\"true\\\" (change)=\\\"onClickAutoAssign(true)\\\">\\n                                              <label  >Yes</label>\\n                                            </div>\\n                                            <div class=\\\"\\\">\\n                                              <input type=\\\"radio\\\" formControlName=\\\"autoAssin\\\"  [value]=\\\"false\\\" (change)=\\\"onClickAutoAssign(false)\\\">\\n                                              <label  >No</label>\\n                                              </div>\\n                               \\n                                        </div>\\n                                      </div>\\n                                      <input type=\\\"hidden\\\" formControlName=\\\"id\\\" class=\\\"form-control \\\" name=\\\"id\\\" [value]=\\\"0\\\">\\n                              <div class=\\\"buttons\\\">\\n                                <button type=\\\"button\\\" class=\\\" btn-small\\\" [routerLink]=\\\"['/admin/asset']\\\">Cancel</button>\\n                                <button type=\\\"submit\\\" class=\\\" btn-small bnt_blue\\\">Apply</button>\\n                              </div>\\n                          </div>\\n                      </div>\\n                  </div>\\n                </div>\\n               </form>\\n             </div>  \\n          <!---- User Aseets  End Here ---->\\n          </section> \\n      </div>\\n  </div>\\n</main>\\n<footer class=\\\"fot_main\\\">\\n  <div class=\\\"container\\\">\\n    <div class=\\\"fot_inner\\\">\\n      <div class=\\\"row\\\"><div class=\\\"col-sm-12 col-md-12\\\"><p>© ALLERGAN 2019</p></div></div>\\n   </div>\\n</div>\\n</footer>\"","\nimport { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { FormBuilder, FormGroup, Validators, FormControl } from '@angular/forms';\nimport { AssetService } from '../../../services/assetservices';\nimport { User } from '../../../../models/user';\nimport { GroupService } from '../../../services/groupservice';\nimport { Router } from '@angular/router';\nimport { AdminAsset } from '../../../model/AdminAsset';\nimport { Group } from '../../../model/group';\nimport { Quize } from '../../../model/Quize';\n@Component({\n  selector: 'app-edit-asset',\n  templateUrl: './edit-asset.component.html',\n  styleUrls: ['./edit-asset.component.css']\n})\nexport class EditAssetComponent implements OnInit {\n  assetTypeName: any;\n  error: Boolean = false;\n  message: String = \"\";\n  showQuize: Boolean = true;\n  currentUser: User;\n  submitted = false;\n  assetForm: FormGroup;\n  fileName: string = \"Not uploaded\";\n  title: \"\";\n  assetTypes: { id: 0, userName: \"\" };\n  therapeuticAreas: { id: 0, name: \"\" };\n  products: { id: 0, name: \"\" };\n  diseaseStates: { id: 0, name: \"\" };\n  contentTypes: [{ id: 0, name: \"\" }];\n  sources = [{ id: 0, name: \"\" }];\n  regions: { id: 0, name: \"\" };\n  quizeValue: boolean = true;\n  countries: { id: 0, name: \"\" };\n  quizes: [{\n    createdBy: 0\n    dateCreated: \"\"\n    dateUpdated: \"\"\n    id: 0\n    isActive: \"\"\n    jsonData: \"\"\n    status: \"\"\n    timer: \"\"\n    title: \"\"\n    updatedBy: 0\n  }];\n  alreadyQuiz: Quize = new Quize();\n  groups: any = [{ id: 0, name: \"\" }];\n  assets: {\n    id: 0, title: \"\", description: \"\", status: 0, active: false,\n    assetType: { userName: \"\" },\n    quize: {\n      createdBy: 0\n      dateCreated: \"\"\n      dateUpdated: \"\"\n      id: 0\n      isActive: \"\"\n      jsonData: \"\"\n      status: \"\"\n      timer: \"\"\n      title: \"\"\n      updatedBy: 0\n    },\n    therapeuticArea: { name: \"\" },\n    product: { name: \"\" },\n    diseaseState: { name: \"\" }\n  };\n  sharePoint: String = \"\"\n  showQuizDropDown: boolean = false;\n  showContentTypeDropDown: boolean = true;\n  showUploadAsset: boolean = false;\n  showLink: boolean = false;\n  showGroup: boolean = true;\n  showDSError: boolean = false;\n  showProductError: boolean = false;\n  showQuizError: boolean = false;\n  showcontentTypeError: boolean = false;\n  showFileUploadError: boolean = false;\n  assetMappedGroups: any = [{ id: 0, name: \"\" }];\n  showLinkError: boolean = false;\n  showLinkErrorMsg: String = \"Link Required\";\n  showGroupError: boolean = false;\n  constructor(private formBuilder: FormBuilder,\n    private router: Router,\n    private route: ActivatedRoute,\n    private assetService: AssetService,\n    private groupService: GroupService) {\n    this.currentUser = JSON.parse(localStorage.getItem('currentUser'));\n    this.route.params.subscribe(params => {\n      let assetId: number = params['assetId']\n      if (assetId > 0) {\n        this.assetService.getAsset(assetId, this.currentUser.id).subscribe(asset => {\n          this.assets = asset.data;\n          this.f.id.setValue(asset.data.id);\n          this.assetMappedGroups = asset.data.groups;\n          this.removeDuplicateGroups()\n          if (asset.data.assetType != null) {\n            this.f.assetType.setValue(asset.data.assetType.id);\n            this.onSelectAssetType(asset.data.assetType.id);\n          }\n          if (asset.data.therapeuticArea != null) {\n            this.f.therapeuticArea.setValue(asset.data.therapeuticArea.id);\n            this.onSelectTherapeuticArea(asset.data.therapeuticArea.id);\n          }\n          this.f.duration.setValue(asset.data.duration);\n          this.f.title.setValue(asset.data.title);\n          this.f.description.setValue(asset.data.description);\n          if (asset.data.diseaseState != null) { this.f.diseaseState.setValue(asset.data.diseaseState.id); }\n          if (asset.data.product != null) { this.f.product.setValue(asset.data.product.id); }\n          if (asset.data.contenetType != null) { this.f.contentType.setValue(asset.data.contenetType); }\n          this.f.source.setValue(asset.data.source);\n          this.onSelectSource(asset.data.source);\n          if (asset.data.source == 4) {\n            this.f.quize.setValue(asset.data.fileName)\n          } else if (asset.data.source == 2) {\n          } else {\n            this.fileName = asset.data.fileName;\n          }\n          if (asset.data.region != null) {\n            this.f.region.setValue(asset.data.region.id);\n            this.onSelectRegion(asset.data.region.id);\n          }\n          if (asset.data.country != null) { this.f.country.setValue(asset.data.country.id); }\n          this.f.expiration.setValue(asset.data.expiryDuartion);\n          this.f.awardPoints.setValue(asset.data.awardPoints);\n          this.f.mandatory.setValue(asset.data.mandatory);\n          if (asset.data.deepLink == null) {\n            this.f.deepLink.setValue(\" \");\n          } else {\n            this.f.deepLink.setValue(asset.data.deepLink);\n          }\n          this.fileName = asset.data.fileName;\n          this.f.autoAssin.setValue(asset.data.autoAssignment);\n          if (asset.data.autoAssignment) {\n            this.showGroup = false;\n          }\n          this.f.status.setValue(true);\n        });\n      }\n    });\n    this.assetService.getAssetTypes().pipe().subscribe(assetTypes => {\n      this.assetTypes = assetTypes.data;\n      this.assetTypeName = this.assetTypes[0]\n    });\n    this.assetService.getRegion().pipe().subscribe(regions => {\n      this.regions = regions.data;\n    });\n    this.assetService.getSources().pipe().subscribe(sources => {\n      this.sources = sources.data;\n      if (this.sources.length >= 0) {\n        this.sharePoint = \"yes\"\n      }\n    });\n    this.assetService.getContentTypes().pipe().subscribe(contentTypes => {\n      this.contentTypes = contentTypes.data;\n    });\n    this.groupService.getGroups().pipe().subscribe(groups => {\n      this.groups = groups.data;\n    });\n  }\n  ngOnInit() {\n    this.assetForm = this.formBuilder.group({\n      id: [0],\n      assetType: ['', [Validators.required]],\n      therapeuticArea: ['', [Validators.required]],\n      duration: [60, [Validators.required]],\n      title: ['', [Validators.required, Validators.minLength(3), Validators.maxLength(50)]],\n      description: ['', [Validators.required, Validators.minLength(3), Validators.maxLength(250)]],\n      expiration: [30, [Validators.required, Validators.minLength(1)]],\n      awardPoints: [100, [Validators.required]],\n      status: [true],\n      autoAssin: [false],\n      mandatory: [false],\n      deepLink: [''],//, [Validators.required]],\n      product: [''],//, [Validators.required]], \n      diseaseState: [''],//, [Validators.required]],\n      contentType: [''],\n      source: ['', [Validators.required, Validators.minLength(1)]],\n      region: [''],// [Validators.required]],\n      country: [''],//[Validators.required]],\n      quize: [''],//, [Validators.required]],\n      file: [''],\n    });\n\n  }\n  onSelectAssetType(assetTypeId: any) {\n    if (assetTypeId != null && assetTypeId > 0) {\n      this.assetService.getTherapeuticAreas(assetTypeId).pipe().subscribe(therapeuticAreas => {\n        this.therapeuticAreas = therapeuticAreas.data;\n      });\n    } else {\n      this.therapeuticAreas = null;\n      this.diseaseStates = null;\n      this.products = null;\n      this.f.therapeuticArea.setValue('')\n      this.f.product.setValue('');\n      this.f.diseaseState.setValue('');\n    }\n  }\n  onSelectTherapeuticArea(therapeuticAreaId: any) {\n    if (therapeuticAreaId != null && therapeuticAreaId > 0) {\n      this.assetService.getDiseaseStateForTA(therapeuticAreaId).pipe().subscribe(diseaseStates => {\n        this.diseaseStates = diseaseStates.data;\n      });\n      this.assetService.getProductsForTA(therapeuticAreaId).pipe().subscribe(products => {\n        this.products = products.data;\n      });\n    } else {\n      this.diseaseStates = null;\n      this.products = null;\n      this.f.product.setValue('');\n      this.f.diseaseState.setValue('');\n    }\n  }\n\n  onSelectDiseaseState(diseaseStateId: any) {\n    if (diseaseStateId != null && diseaseStateId > 0) {\n      this.showDSError = false;\n      this.showProductError = false;\n      return;\n    } else if (this.assetForm.value.product == null && this.assetForm.value.product < 0) {\n      this.showDSError = true;\n      this.showProductError = true;\n      return;\n    } else {\n      this.showDSError = true;\n      this.showProductError = true;\n    }\n  }\n\n  onSelectProduct(productId: any) {\n    if (productId != null && productId > 0) {\n      this.showDSError = false;\n      this.showProductError = false;\n      return;\n    } else if (this.assetForm.value.diseaseState == null && this.assetForm.value.diseaseState < 0) {\n      this.showDSError = true;\n      this.showProductError = true;\n      return;\n    } else {\n      this.showDSError = true;\n      this.showProductError = true;\n    }\n  }\n\n  onSelectQuiz(quizId: any) {\n\n    if (quizId == undefined && quizId != null) {\n      ////alert(quizId);\n      // this.fileName=String(quizId);\n      //this.showQuizError = false;\n      //return;\n    }\n    //this.showQuizError = true;\n  }\n  onSelectRegion(regionId: any) {\n    this.assetService.getCountries(regionId).pipe().subscribe(countries => {\n      this.countries = countries.data;\n    });\n  }\n  onFileSelect(event) {\n    if (event.target.files.length > 0) {\n      const file = event.target.files[0];\n      this.assetForm.get('file').setValue(file);\n      this.fileName = file.name;\n      this.quizeValue = false;\n      this.assetForm.get('contentType').setValue(this.contentTypes.find(x => x.name == this.fileName.split('.').pop()).id);\n      this.showFileUploadError = false;\n    }\n  }\n\n  onSelectSource(sourceId: number) {\n    this.sharePoint = \"\"\n    //this.alreadyQuiz=undefined;\n    this.showQuize = true;\n    this.quizeValue = false;\n    if (sourceId != undefined && sourceId != null) {\n      if (this.sources.find(x => x.id == sourceId)) {\n        if (this.sources.find(x => x.id == sourceId).name === \"Quiz\") {\n          this.showQuize = false;\n          this.assetForm.get('file').setValue('');\n          this.fileName = \"Not uploaded\";\n          this.quizeValue = true;\n\n        }\n        if (this.sources.find(x => x.id == sourceId).name === \"share point\") {\n          this.sharePoint = \"yes\"\n          this.assetForm.get('file').setValue('');\n          this.fileName = \"Not uploaded\";\n          this.quizeValue = false;\n          this.showLink = true;\n          // this.alreadyQuiz=undefined;\n        }\n      }\n    }\n    this.showQuizDropDown = false;\n    this.showLink = false;\n    if (sourceId == 4) {\n      this.showContentTypeDropDown = false;\n      this.showQuizDropDown = true;\n      this.showUploadAsset = false;\n      this.showLink = false;\n      this.route.queryParams.subscribe(params => {\n        this.assetService.getQuizes().pipe().subscribe(quizes => {\n          this.quizes = quizes.data;\n          if (this.assets != undefined && this.assets.quize != null) {\n            this.alreadyQuiz = this.quizes.find(x => x.id == this.assets.quize.id);\n            this.assetForm.get('file').setValue('');\n            this.fileName = \"Not uploaded\";\n            this.quizeValue = true;\n            //  this.showLink = false;\n            this.showUploadAsset = false;\n          }\n        });\n        return;\n      });\n    } else if (sourceId == 2) {\n      this.showQuizDropDown = false;\n      this.showUploadAsset = false;\n      this.showLink = true;\n      this.showContentTypeDropDown = false;\n      this.f.contentType.setValue('');\n      return;\n    }\n    this.showUploadAsset = true;\n    this.showContentTypeDropDown = true;\n    this.showcontentTypeError = (this.assetForm.value.contentType.length == 0 && this.submitted);\n  }\n\n  onClickAutoAssign(flag: boolean) {\n    this.showGroup = !flag;\n  }\n  onChangeLink(link: String) {\n    if (link.length == 0) {\n      this.showLinkError = true;\n      this.showLinkErrorMsg = \"Link Required\";\n      return;\n    } else if (link.length < 3) {\n      this.showLinkError = true;\n      this.showLinkErrorMsg = \"Link Minimum 3 Charecters\";\n      return;\n    } else if (link.length > 250) {\n      this.showLinkError = true;\n      this.showLinkErrorMsg = \"Link Maximum 250 Charecters\";\n      return;\n    } else {\n      this.showLinkError = false;\n    }\n  }\n  pushRight(group: Group) {\n    this.assetMappedGroups.push(group);\n    this.groups = this.groups.filter((ele) => { return ele['name'] != group.name; });\n    this.showGroupError = false;\n  }\n  pushLeft(group: Group) {\n    this.groups.push(group);\n    this.assetMappedGroups = this.assetMappedGroups.filter((ele) => { return ele['name'] != group.name; });\n    if (this.assetMappedGroups.length < 2) {\n      this.showGroupError = true;\n    }\n\n  }\n\n  removeDuplicateGroups() {\n    for (var i = this.assetMappedGroups.length - 1; i >= 0; i--) {\n      for (var j = 0; j < this.groups.length; j++) {\n        if (this.assetMappedGroups[i] && (this.assetMappedGroups[i]['name'] === this.groups[j]['name'])) {\n          this.groups.splice(j, 1);\n        }\n      }\n    }\n  }\n\n  get f() { return this.assetForm.controls; }\n\n  onSubmit() {\n    this.error = false;\n    if (this.assetForm.invalid) {\n      this.submitted = true;\n      if ((this.assetForm.value.diseaseState.length == 0) && (this.assetForm.value.product.length == 0)) {\n        this.showDSError = true;\n        this.showProductError = true;\n      }\n      if (this.showContentTypeDropDown && this.assetForm.value.contentType.length == 0) {\n        this.showcontentTypeError = true;\n      }\n      if (this.showUploadAsset && this.assetForm.value.file.length == 0 && this.fileName.includes(\"Not uploaded\")) {\n        this.showFileUploadError = true;\n      }\n      if (this.showLink) {\n        let link = this.assetForm.value.deepLink;\n        if (link.length == 0) {\n          this.showLinkError = true;\n          this.showLinkErrorMsg = \"Link Required\";\n          return;\n        } else if (link.length < 3) {\n          this.showLinkError = true;\n          this.showLinkErrorMsg = \"Link Minimum 3 Charecters\";\n          return;\n        } else if (link.length > 250) {\n          this.showLinkError = true;\n          this.showLinkErrorMsg = \"Link Maximum 250 Charecters\";\n          return;\n        } else {\n          this.showLinkError = false;\n        }\n      }\n      return;\n    }\n    if ((this.assetForm.value.diseaseState.length == 0) && (this.assetForm.value.product.length == 0)) {\n      this.submitted = true;\n      this.showDSError = true;\n      this.showProductError = true;\n      return;\n    }\n    if (this.showUploadAsset && this.assetForm.value.file.length == 0 && (this.fileName == \"Not uploaded\")) {\n      if (this.showQuize == false) {\n      } else {\n        this.submitted = true;\n        this.showFileUploadError = true;\n        return;\n      }\n\n    }\n\n    if (this.showLink) {\n      this.submitted = true;\n      let link = this.assetForm.value.deepLink;\n      if (link.length == 0) {\n        this.showLinkError = true;\n        this.showLinkErrorMsg = \"Link Required\";\n        return;\n      } else if (link.length < 3) {\n        this.showLinkError = true;\n        this.showLinkErrorMsg = \"Link Minimum 3 Charecters\";\n        return;\n      } else if (link.length > 250) {\n        this.showLinkError = true;\n        this.showLinkErrorMsg = \"Link Maximum 250 Charecters\";\n        return;\n      } else {\n\n        this.showLinkError = false;\n      }\n    }\n    if (!this.assetForm.value.autoAssin && this.assetMappedGroups.length < 1) {\n      this.submitted = true;\n      this.showGroupError = true;\n      return;\n    }\n    let formData = new FormData();\n    formData.append('id', this.assetForm.value.id);\n    let userid = this.currentUser.id;\n    var stringForm = userid.toString();\n    formData.append('userId', stringForm);\n    formData.append('assetType', this.assetForm.value.assetType);\n    formData.append('duration', this.assetForm.value.duration);\n    formData.append('title', this.assetForm.value.title);\n    formData.append('therapeuticArea', this.assetForm.value.therapeuticArea);\n    formData.append('description', this.assetForm.value.description);\n    formData.append('diseaseState', this.assetForm.value.diseaseState);\n    if (this.quizeValue == true) {\n      let quiz = \"quiz\";\n      this.assetForm.get('contentType').setValue(this.contentTypes.find(x => x.name == quiz).id);\n\n    }\n    if (this.sharePoint == \"yes\") {\n      if (this.contentTypes.find(x => x.name == String(\"link\"))) {\n        this.assetForm.get('contentType').setValue(this.contentTypes.find(x => x.name == String(\"link\")).id);\n      }\n    }\n    formData.append('contenetType', this.assetForm.value.contentType);\n    formData.append('product', this.assetForm.value.product);\n    formData.append('source', this.assetForm.value.source);\n    formData.append('region', this.assetForm.value.region);\n    //formData.append('deepLink', this.assetForm.value.deepLink);\n    formData.append('country', this.assetForm.value.country);\n    formData.append('expiration', this.assetForm.value.expiration);\n    formData.append('awardPoints', this.assetForm.value.awardPoints);\n    formData.append('mandatory', this.assetForm.value.mandatory);\n    formData.append('status', this.assetForm.value.status);\n    formData.append('autoAssin', this.assetForm.value.autoAssin);\n    if (this.alreadyQuiz.id == undefined) {\n      formData.append('quize', \"\");\n    } else {\n      formData.append('quize', String(this.alreadyQuiz.id));\n    }\n    console.log(this.assetForm.value.quize);\n    if (this.fileName == \"Not uploaded\" && this.alreadyQuiz.id != undefined && this.sharePoint != \"yes\") {\n      formData.append('deepLink', \" \");\n      formData.append('fileName', String(this.alreadyQuiz.id));\n    } else if (this.fileName == \"Not uploaded\" && this.alreadyQuiz.id != undefined && this.sharePoint == \"yes\") {\n      formData.append('deepLink', this.assetForm.value.deepLink);\n      formData.append('fileName', \"Not uploaded\");\n    }\n    else if (this.fileName != \"Not uploaded\" && this.alreadyQuiz.id == undefined && this.sharePoint == \"yes\") {\n      formData.append('deepLink', this.assetForm.value.deepLink);\n      formData.append('fileName', \"Not uploaded\");\n    }\n    else if (this.fileName == \"Not uploaded\" && this.alreadyQuiz.id == undefined && this.sharePoint == \"yes\") {\n      formData.append('deepLink', this.assetForm.value.deepLink);\n      formData.append('fileName', \"Not uploaded\");\n    }\n    else {\n      formData.append('deepLink', \" \");\n      formData.append('fileName', this.fileName);\n    }\n    formData.append('file', this.assetForm.value.file);\n    if (!this.assetForm.value.autoAssin) {\n      this.assetMappedGroups.forEach(i => {\n        formData.append('mappedGroupIds[]', i.id.toString());\n      })\n    }\n    this.error = false;\n    this.message = \"\";\n    if ((this.fileName == \"Not uploaded\" && this.alreadyQuiz.id == undefined) && this.sharePoint == \"\") {\n      this.error = true;\n      this.message = \"Please enter qize\"\n    }\n    else {\n      console.log(this.assetForm.value.contentType);\n      this.assetService.addAsset(formData).pipe().subscribe(asset => {\n        this.router.navigate(['/admin/asset']);\n      });\n\n    }\n  }\n}\n","﻿export * from './assets.component';","module.exports = \"/* ==============Batch Import================= */\\r\\n.batch_import_inner {\\r\\n\\tbackground: #fff;\\r\\n    border-radius: 10px;\\r\\n    margin-right: 10px;\\r\\n    padding: 30px 35px;\\r\\n    box-shadow: 1px 1px 10px 0px rgba(0,0,0, 0.1);\\r\\n    position: relative;\\r\\n}\\r\\n.batch_import_type_inner {\\r\\n\\tmargin: 0px;\\r\\n}\\r\\nlabel {\\r\\n    cursor: pointer;\\r\\n}\\r\\n.info_txt {\\r\\n\\tpadding: 0px;\\r\\n}\\r\\n.info_txt p {\\r\\n\\tpadding: 15px;\\r\\n    background-color: #ecf7ec;\\r\\n    color: #169a1e;\\r\\n\\tfont-size: 14px;\\r\\n\\tborder-radius: 8px;\\r\\n}\\r\\n.import_formate {\\r\\n\\tpadding: 0px;\\r\\n}\\r\\n.import_list {\\r\\n\\tlist-style: none;\\r\\n    padding: 12px 15px;\\r\\n    display: flex;\\r\\n    background-color: #ebebeb;\\r\\n    border-radius: 8px;\\r\\n}\\r\\n.import_list li{\\r\\n\\tdisplay: inline-block;\\r\\n\\tpadding: 0px;\\r\\n}\\r\\n.import_list li a{\\r\\n\\tcolor: #4b4b4b;\\r\\n\\tfont-size: 14px;\\r\\n    text-decoration: none;\\r\\n    cursor:pointer;\\r\\n}\\r\\n.import_list li a:hover {\\r\\n\\tfont-weight: 700;\\r\\n}\\r\\n.upload_file {\\r\\n\\tpadding: 0px;\\r\\n}\\r\\n.upload_file > p {\\r\\n\\tborder-bottom: 1px solid #ececec;\\r\\n\\tpadding-bottom: 10px;\\r\\n}\\r\\n.upload_users_wrap > h3 {\\r\\n\\tdisplay: inline-block;\\r\\n    margin-top: 10px;\\r\\n}\\r\\n.upload_assets_wrap > h3 {\\r\\n\\tdisplay: inline-block;\\r\\n    margin-top: 13px;\\r\\n}\\r\\n.upload_questions_wrap > h3 {\\r\\n\\tdisplay: inline-block;\\r\\n    margin-top: 16px;\\r\\n}\\r\\n.form-title {\\r\\n    float: left;\\r\\n}\\r\\n.upload_sheet {\\r\\n\\tdisplay: inline-block;\\r\\n\\tfloat: right;\\r\\n}\\r\\n.upload_sheet > .batch_upload[type=\\\"file\\\"] {\\r\\n\\tdisplay: none;\\r\\n}\\r\\n.upload_sheet > label {\\r\\n    width: 230px;\\r\\n    box-shadow: 3px 3px 3px 0px rgba(0,0,0, 0.1);\\r\\n    padding: 10px 15px 10px 100px;\\r\\n    margin: 0px;\\r\\n    border-radius: 200px;\\r\\n    text-align: right;\\r\\n    color: #4b4b4b;\\r\\n    position: relative;\\r\\n    text-overflow: ellipsis;\\r\\n    white-space: nowrap;\\r\\n    overflow: hidden;\\r\\n}\\r\\n.upload_sheet > label::before {\\r\\n\\tcontent: 'Choose file';\\r\\n    display: inline-block;\\r\\n    font-size: 12px;\\r\\n    top: 50%;\\r\\n    left: 8px;\\r\\n    position: absolute;\\r\\n    transform: translateY(-50%);\\r\\n    box-shadow: 3px 3px 8px 0px rgba(0,0,0, 0.1);\\r\\n    border-radius: 8px;\\r\\n    padding: 2px 8px;\\r\\n}\\r\\n.btn_upload {\\r\\n\\tpadding: 6px 25px;\\r\\n    background-color: #626262;\\r\\n    color: #fff;\\r\\n    font-size: 14px;\\r\\n    border-radius: 200px;\\r\\n    float: right;\\r\\n    margin: 8px 15px;\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYWRtaW4vaG9tZS9iYXRjaC1pbXBvcnQvYmF0Y2gtaW1wb3J0LmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsZ0RBQWdEO0FBQ2hEO0NBQ0MsZ0JBQWdCO0lBQ2IsbUJBQW1CO0lBQ25CLGtCQUFrQjtJQUNsQixrQkFBa0I7SUFDbEIsNkNBQTZDO0lBQzdDLGtCQUFrQjtBQUN0QjtBQUNBO0NBQ0MsV0FBVztBQUNaO0FBQ0E7SUFDSSxlQUFlO0FBQ25CO0FBQ0E7Q0FDQyxZQUFZO0FBQ2I7QUFDQTtDQUNDLGFBQWE7SUFDVix5QkFBeUI7SUFDekIsY0FBYztDQUNqQixlQUFlO0NBQ2Ysa0JBQWtCO0FBQ25CO0FBQ0E7Q0FDQyxZQUFZO0FBQ2I7QUFDQTtDQUNDLGdCQUFnQjtJQUNiLGtCQUFrQjtJQUNsQixhQUFhO0lBQ2IseUJBQXlCO0lBQ3pCLGtCQUFrQjtBQUN0QjtBQUNBO0NBQ0MscUJBQXFCO0NBQ3JCLFlBQVk7QUFDYjtBQUNBO0NBQ0MsY0FBYztDQUNkLGVBQWU7SUFDWixxQkFBcUI7SUFDckIsY0FBYztBQUNsQjtBQUNBO0NBQ0MsZ0JBQWdCO0FBQ2pCO0FBQ0E7Q0FDQyxZQUFZO0FBQ2I7QUFDQTtDQUNDLGdDQUFnQztDQUNoQyxvQkFBb0I7QUFDckI7QUFDQTtDQUNDLHFCQUFxQjtJQUNsQixnQkFBZ0I7QUFDcEI7QUFFQTtDQUNDLHFCQUFxQjtJQUNsQixnQkFBZ0I7QUFDcEI7QUFFQTtDQUNDLHFCQUFxQjtJQUNsQixnQkFBZ0I7QUFDcEI7QUFDQTtJQUNJLFdBQVc7QUFDZjtBQUNBO0NBQ0MscUJBQXFCO0NBQ3JCLFlBQVk7QUFDYjtBQUNBO0NBQ0MsYUFBYTtBQUNkO0FBQ0E7SUFDSSxZQUFZO0lBQ1osNENBQTRDO0lBQzVDLDZCQUE2QjtJQUM3QixXQUFXO0lBQ1gsb0JBQW9CO0lBQ3BCLGlCQUFpQjtJQUNqQixjQUFjO0lBQ2Qsa0JBQWtCO0lBQ2xCLHVCQUF1QjtJQUN2QixtQkFBbUI7SUFDbkIsZ0JBQWdCO0FBQ3BCO0FBQ0E7Q0FDQyxzQkFBc0I7SUFDbkIscUJBQXFCO0lBQ3JCLGVBQWU7SUFDZixRQUFRO0lBQ1IsU0FBUztJQUNULGtCQUFrQjtJQUNsQiwyQkFBMkI7SUFDM0IsNENBQTRDO0lBQzVDLGtCQUFrQjtJQUNsQixnQkFBZ0I7QUFDcEI7QUFDQTtDQUNDLGlCQUFpQjtJQUNkLHlCQUF5QjtJQUN6QixXQUFXO0lBQ1gsZUFBZTtJQUNmLG9CQUFvQjtJQUNwQixZQUFZO0lBQ1osZ0JBQWdCO0FBQ3BCIiwiZmlsZSI6InNyYy9hcHAvYWRtaW4vaG9tZS9iYXRjaC1pbXBvcnQvYmF0Y2gtaW1wb3J0LmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIvKiA9PT09PT09PT09PT09PUJhdGNoIEltcG9ydD09PT09PT09PT09PT09PT09ICovXHJcbi5iYXRjaF9pbXBvcnRfaW5uZXIge1xyXG5cdGJhY2tncm91bmQ6ICNmZmY7XHJcbiAgICBib3JkZXItcmFkaXVzOiAxMHB4O1xyXG4gICAgbWFyZ2luLXJpZ2h0OiAxMHB4O1xyXG4gICAgcGFkZGluZzogMzBweCAzNXB4O1xyXG4gICAgYm94LXNoYWRvdzogMXB4IDFweCAxMHB4IDBweCByZ2JhKDAsMCwwLCAwLjEpO1xyXG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG59XHJcbi5iYXRjaF9pbXBvcnRfdHlwZV9pbm5lciB7XHJcblx0bWFyZ2luOiAwcHg7XHJcbn1cclxubGFiZWwge1xyXG4gICAgY3Vyc29yOiBwb2ludGVyO1xyXG59XHJcbi5pbmZvX3R4dCB7XHJcblx0cGFkZGluZzogMHB4O1xyXG59XHJcbi5pbmZvX3R4dCBwIHtcclxuXHRwYWRkaW5nOiAxNXB4O1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogI2VjZjdlYztcclxuICAgIGNvbG9yOiAjMTY5YTFlO1xyXG5cdGZvbnQtc2l6ZTogMTRweDtcclxuXHRib3JkZXItcmFkaXVzOiA4cHg7XHJcbn1cclxuLmltcG9ydF9mb3JtYXRlIHtcclxuXHRwYWRkaW5nOiAwcHg7XHJcbn1cclxuLmltcG9ydF9saXN0IHtcclxuXHRsaXN0LXN0eWxlOiBub25lO1xyXG4gICAgcGFkZGluZzogMTJweCAxNXB4O1xyXG4gICAgZGlzcGxheTogZmxleDtcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICNlYmViZWI7XHJcbiAgICBib3JkZXItcmFkaXVzOiA4cHg7XHJcbn1cclxuLmltcG9ydF9saXN0IGxpe1xyXG5cdGRpc3BsYXk6IGlubGluZS1ibG9jaztcclxuXHRwYWRkaW5nOiAwcHg7XHJcbn1cclxuLmltcG9ydF9saXN0IGxpIGF7XHJcblx0Y29sb3I6ICM0YjRiNGI7XHJcblx0Zm9udC1zaXplOiAxNHB4O1xyXG4gICAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xyXG4gICAgY3Vyc29yOnBvaW50ZXI7XHJcbn1cclxuLmltcG9ydF9saXN0IGxpIGE6aG92ZXIge1xyXG5cdGZvbnQtd2VpZ2h0OiA3MDA7XHJcbn1cclxuLnVwbG9hZF9maWxlIHtcclxuXHRwYWRkaW5nOiAwcHg7XHJcbn1cclxuLnVwbG9hZF9maWxlID4gcCB7XHJcblx0Ym9yZGVyLWJvdHRvbTogMXB4IHNvbGlkICNlY2VjZWM7XHJcblx0cGFkZGluZy1ib3R0b206IDEwcHg7XHJcbn1cclxuLnVwbG9hZF91c2Vyc193cmFwID4gaDMge1xyXG5cdGRpc3BsYXk6IGlubGluZS1ibG9jaztcclxuICAgIG1hcmdpbi10b3A6IDEwcHg7XHJcbn1cclxuXHJcbi51cGxvYWRfYXNzZXRzX3dyYXAgPiBoMyB7XHJcblx0ZGlzcGxheTogaW5saW5lLWJsb2NrO1xyXG4gICAgbWFyZ2luLXRvcDogMTNweDtcclxufVxyXG5cclxuLnVwbG9hZF9xdWVzdGlvbnNfd3JhcCA+IGgzIHtcclxuXHRkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XHJcbiAgICBtYXJnaW4tdG9wOiAxNnB4O1xyXG59XHJcbi5mb3JtLXRpdGxlIHtcclxuICAgIGZsb2F0OiBsZWZ0O1xyXG59XHJcbi51cGxvYWRfc2hlZXQge1xyXG5cdGRpc3BsYXk6IGlubGluZS1ibG9jaztcclxuXHRmbG9hdDogcmlnaHQ7XHJcbn1cclxuLnVwbG9hZF9zaGVldCA+IC5iYXRjaF91cGxvYWRbdHlwZT1cImZpbGVcIl0ge1xyXG5cdGRpc3BsYXk6IG5vbmU7XHJcbn1cclxuLnVwbG9hZF9zaGVldCA+IGxhYmVsIHtcclxuICAgIHdpZHRoOiAyMzBweDtcclxuICAgIGJveC1zaGFkb3c6IDNweCAzcHggM3B4IDBweCByZ2JhKDAsMCwwLCAwLjEpO1xyXG4gICAgcGFkZGluZzogMTBweCAxNXB4IDEwcHggMTAwcHg7XHJcbiAgICBtYXJnaW46IDBweDtcclxuICAgIGJvcmRlci1yYWRpdXM6IDIwMHB4O1xyXG4gICAgdGV4dC1hbGlnbjogcmlnaHQ7XHJcbiAgICBjb2xvcjogIzRiNGI0YjtcclxuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICAgIHRleHQtb3ZlcmZsb3c6IGVsbGlwc2lzO1xyXG4gICAgd2hpdGUtc3BhY2U6IG5vd3JhcDtcclxuICAgIG92ZXJmbG93OiBoaWRkZW47XHJcbn1cclxuLnVwbG9hZF9zaGVldCA+IGxhYmVsOjpiZWZvcmUge1xyXG5cdGNvbnRlbnQ6ICdDaG9vc2UgZmlsZSc7XHJcbiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XHJcbiAgICBmb250LXNpemU6IDEycHg7XHJcbiAgICB0b3A6IDUwJTtcclxuICAgIGxlZnQ6IDhweDtcclxuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgtNTAlKTtcclxuICAgIGJveC1zaGFkb3c6IDNweCAzcHggOHB4IDBweCByZ2JhKDAsMCwwLCAwLjEpO1xyXG4gICAgYm9yZGVyLXJhZGl1czogOHB4O1xyXG4gICAgcGFkZGluZzogMnB4IDhweDtcclxufVxyXG4uYnRuX3VwbG9hZCB7XHJcblx0cGFkZGluZzogNnB4IDI1cHg7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjNjI2MjYyO1xyXG4gICAgY29sb3I6ICNmZmY7XHJcbiAgICBmb250LXNpemU6IDE0cHg7XHJcbiAgICBib3JkZXItcmFkaXVzOiAyMDBweDtcclxuICAgIGZsb2F0OiByaWdodDtcclxuICAgIG1hcmdpbjogOHB4IDE1cHg7XHJcbn1cclxuIl19 */\"","module.exports = \"<app-admin-top-nav></app-admin-top-nav>\\r\\n<router-outlet></router-outlet>\\r\\n    <!-- Page section start -->\\r\\n    <main class=\\\"main_container\\\">\\r\\n        <div class=\\\"container\\\">\\r\\n            <div class=\\\"main_con_inner\\\">\\r\\n          \\r\\n\\r\\n                <app-admin-side-nav></app-admin-side-nav>\\r\\n   <!-- right section  start -->\\r\\n   <section class=\\\"right_panel\\\">\\r\\n                      <div class=\\\"batch_import\\\"  id=\\\"pop_5\\\">\\r\\n                        <div class=\\\"batch_import_inner\\\">\\r\\n                            <div class=\\\"rph_header\\\">\\r\\n                                <div class=\\\"row\\\">\\r\\n                                    <div class=\\\"col-sm-6 col-md-6 col-lg-6 rph_left\\\">\\r\\n                                        <h5>Batch Import</h5>\\r\\n                                    </div>\\r\\n\\r\\n                                    <div class=\\\"col-sm-6 col-md-6 col-lg-6\\\">\\r\\n                                        <div class=\\\"rph_right\\\">\\r\\n                                            <!-- <form class=\\\"serach_form d-flex\\\">\\r\\n                                                <button type=\\\"button\\\" class=\\\"search_btn\\\"><i class=\\\"fas fa-search\\\"></i>\\r\\n                                                   <div class=\\\"serach_box\\\" style=\\\"display: none;\\\"><input type=\\\"text\\\" placeholder=\\\"Search..\\\"></div>\\r\\n                                                </button>\\r\\n                                            </form> -->\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"batch_import_type\\\">\\r\\n                              <div class=\\\"batch_import_type_inner row\\\">\\r\\n                                <div class=\\\"col-12 info_txt\\\">\\r\\n                                  <p>This tool allows you to add users, assets (make sure you have moved the asset to server),questions, \\r\\n                                      from an excel file. The format of the file is at least one row in an excel spreadsheet\\r\\n                                      and then uploading that file here.</p>\\r\\n                                </div>\\r\\n                                <div class=\\\"col-12 col-sm-12 col-md-12 import_formate\\\">\\r\\n                                  <p>You can download a spreadsheet here,</p>\\r\\n                                  <ul class=\\\"import_list\\\">\\r\\n                                    <li class=\\\"col-12 col-sm-12 col-md-4 col-lg-4\\\"><a (click)=\\\"openTemplate('Users.xlsx')\\\">Users</a></li>\\r\\n                                    <li class=\\\"col-12 col-sm-12 col-md-4 col-lg-4 text-center\\\"><a (click)=\\\"openTemplate('Assets.xlsx')\\\">Assets</a></li>\\r\\n                                    <li class=\\\"col-12 col-sm-12 col-md-4 col-lg-4 text-center\\\"><a (click)=\\\"openTemplate('Questions.xlsx')\\\">Questions</a></li>\\r\\n                                  </ul>\\r\\n                                </div>\\r\\n                                <div class=\\\"col-12 col-sm-12 col-md-12 upload_file\\\">\\r\\n                                  <p>If you have finished creating or updating your spreadsheet and would like to upload it now,\\r\\n                                      you can do so here:</p>\\r\\n                                      \\r\\n                                      <form class=\\\"clearfix\\\" [formGroup] = \\\"userForm\\\"  (ngSubmit)= \\\"onSubmitBatchImportUserForm($event)\\\" >\\r\\n                                        <div class=\\\"upload_users_wrap form-title\\\">\\r\\n                                          <h3>Upload Users here:</h3>\\r\\n                                        </div>\\r\\n                                        <div class=\\\"upload_sheet form-select\\\">\\r\\n                                          <input type=\\\"file\\\" formControlName = \\\"batchImportUserFile\\\" id = \\\"batchImportUserFile\\\" class=\\\"batch_upload\\\" (change)=\\\"onUserFileChange($event)\\\">\\r\\n                                          <!-- <input type=\\\"file\\\" formControlName = \\\"batchImportAssetFile\\\" name = \\\"batchImportAssetFile\\\" id=\\\"batch_upload\\\"  (change)=\\\"onAssetFileChange($event)\\\"> -->\\r\\n                                          <label for=\\\"batchImportUserFile\\\">{{userBatchFile}}</label>\\r\\n                                          <!-- <button class=\\\"btn btn_upload\\\">Upload</button> -->\\r\\n                                          <input class=\\\"btn btn_upload\\\" type=\\\"submit\\\" value=\\\"Upload\\\" >\\r\\n                                          <!-- <img src=\\\"images/quest.png\\\" alt=\\\"quest\\\"> -->\\r\\n                                        </div>\\r\\n                                      </form>\\r\\n\\r\\n\\r\\n                                      \\r\\n                                      <form class=\\\"clearfix\\\" [formGroup] = \\\"assetForm\\\" (ngSubmit)= \\\"onSubmitBatchImportAssetForm($event)\\\" >\\r\\n                                        <div class=\\\"upload_assets_wrap form-title\\\">\\r\\n                                          <h3>Upload Assets here:</h3>\\r\\n                                        </div>\\r\\n                                        <div class=\\\"upload_sheet form-select\\\">\\r\\n                                          <input type=\\\"file\\\" class=\\\"batch_upload\\\" formControlName = \\\"batchImportAssetFile\\\"  (change)=\\\"onAssetFileChange($event)\\\" id=\\\"batchImportAssetFile\\\">\\r\\n                                          <label for=\\\"batchImportAssetFile\\\">{{assetBatchFile}}</label>\\r\\n                                          <button class=\\\"btn btn_upload\\\">Upload</button>\\r\\n                                          <!-- <img src=\\\"images/quest.png\\\" alt=\\\"quest\\\"> -->\\r\\n                                        </div>\\r\\n                                      </form>\\r\\n\\r\\n\\r\\n                                      <form class=\\\"clearfix\\\" [formGroup] = \\\"questionForm\\\" (ngSubmit)= \\\"onSubmitBatchImportQuestionForm($event)\\\">\\r\\n                                        <div class=\\\"upload_questions_wrap form-title\\\">\\r\\n                                          <h3>Upload Question here:</h3>\\r\\n                                        </div>\\r\\n                                        <div class=\\\"upload_sheet form-select\\\">\\r\\n                                          <input type=\\\"file\\\" class=\\\"batch_upload\\\"  formControlName = \\\"batchImportQuestionFile\\\" (change)=\\\"onQuestionFileChange($event)\\\" id=\\\"batchImportQuestionFile\\\">\\r\\n                                          <label for=\\\"batchImportQuestionFile\\\">{{questionBatchFile}}</label>\\r\\n                                          <button class=\\\"btn btn_upload\\\">Upload</button>\\r\\n                                          <!-- <img src=\\\"images/quest.png\\\" alt=\\\"quest\\\"> -->\\r\\n                                        </div>\\r\\n                                      </form>\\r\\n                                </div>\\r\\n                              </div>\\r\\n                            </div> \\r\\n                        </div>\\r\\n                      </div>\\r\\n\\r\\n                    <!-- Batch Import Ends -->\\r\\n\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t  <!-- Question Bank Ends -->\\r\\n\\r\\n</section> <!-- Right Panel End Here -->\\r\\n</div>\\r\\n</div>\\r\\n</main>\\r\\n<footer class=\\\"fot_main\\\">\\r\\n<div class=\\\"container\\\">\\r\\n<div class=\\\"fot_inner\\\">\\r\\n<div class=\\\"row\\\"><div class=\\\"col-sm-12 col-md-12\\\"><p>© ALLERGAN 2019</p></div></div>\\r\\n</div>\\r\\n</div>\\r\\n</footer>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { first } from 'rxjs/operators';\r\nimport { FormBuilder, FormGroup } from '@angular/forms';\r\n\r\n\r\nimport { Router } from '@angular/router';\r\nimport { BatchImportService } from '../../services/batchimportservice';\r\nimport { AlertService } from '../../../services';\r\n\r\n@Component({\r\n  selector: 'app-admin-batch-import',\r\n  templateUrl: './batch-import.component.html',\r\n  styleUrls: ['./batch-import.component.css']\r\n\r\n})\r\nexport class BatchImportComponent implements OnInit {\r\n  constructor(private formBuilder:FormBuilder, private batchImportService: BatchImportService, \r\n  private alertService :AlertService){}\r\n\r\n  userForm:FormGroup;\r\n  assetForm:FormGroup;\r\n  questionForm:FormGroup;\r\n  public userBatchFile : string = \"No file choosen\";\r\n  public assetBatchFile : string = \"No file choosen\";\r\n  public questionBatchFile : string = \"No file choosen\";\r\n  public userFile;\r\n\r\n  \r\n  ngOnInit(): void {\r\n    this.assetForm = this.formBuilder.group({\r\n      batchImportAssetFile: ['']\r\n    });\r\n    this.userForm = this.formBuilder.group({\r\n      batchImportUserFile : ['']\r\n    })  \r\n    this.questionForm = this.formBuilder.group({\r\n      batchImportQuestionFile : ['']\r\n    })    \r\n     \r\n  }\r\n  onSubmitBatchImportQuestionForm(event){\r\n    if(this.questionForm.controls.batchImportQuestionFile.value.length == 0){\r\n      this.alertService.success(\"Please select file for import questions.\");\r\n    }else{\r\n      var questionFormData = new FormData();\r\n      questionFormData.append('file', this.questionForm.controls.batchImportQuestionFile.value);\r\n      questionFormData.append('inputFileName', this.questionForm.controls.batchImportQuestionFile.value.name);\r\n      this.batchImportService.batchImportQuestion(questionFormData)\r\n      .pipe().subscribe(\r\n        data =>{\r\n          var successCount = 0;\r\n          var failCount = 0;\r\n          if(data.length == 0){\r\n            this.alertService.success(\"Total question stored: 0\");\r\n          }else if(data.length >= 1){\r\n            for(var R = 0; R < data.length; R++){\r\n              var currentElement = data[R];\r\n              console.dir(currentElement);\r\n              if( currentElement.processMessage == \"Stored..\"){\r\n                successCount++;\r\n              }else{\r\n                failCount++;\r\n              }\r\n            }\r\n            this.alertService.success(\"Total questions stored: \"+ successCount +\" , Fail : \"+ failCount);\r\n          }\r\n  \r\n        },\r\n        erroor => {\r\n          this.alertService.error(\"Error !\");\r\n        }\r\n      );\r\n\r\n    }\r\n  }\r\n\r\n  onQuestionFileChange(event) {\r\n    if (event.target.files.length > 0) {\r\n      var questionFile = event.target.files[0];\r\n      this.questionBatchFile = questionFile.name;\r\n      setTimeout(()=>{    \r\n        this.questionForm.get('batchImportQuestionFile').setValue(questionFile);\r\n      }, 200); \r\n    }\r\n  }\r\n\r\n  onSubmitBatchImportAssetForm(event){\r\n     \r\n    if(this.assetForm.controls.batchImportAssetFile.value.length == 0){\r\n      this.alertService.success(\"Please select file for import assets.\");\r\n    }else{\r\n      var formData2 = new FormData();\r\n      formData2.append('file', this.assetForm.controls.batchImportAssetFile.value);\r\n      formData2.append('inputFileName', this.assetForm.controls.batchImportAssetFile.value.name);\r\n      this.batchImportService.batchImportAsset(formData2)\r\n      .pipe().subscribe(\r\n        data =>{\r\n          \r\n          var successCount = 0;\r\n          var failCount = 0;\r\n          if(data.length == 0){\r\n            this.alertService.success(\"Total Asset stored: 0\");\r\n          }else if(data.length >= 1){\r\n            for(var R = 0; R < data.length; R++){\r\n              var currentElement = data[R];\r\n              console.dir(currentElement);\r\n              if( currentElement.processMessage == \"Asset Stored..\"){\r\n                successCount++;\r\n              }else{\r\n                failCount++;\r\n              }\r\n            }\r\n            this.alertService.success(\"Total asset stored: \"+ successCount +\" , Fail : \"+ failCount);\r\n          }\r\n        },\r\n        erroor => {\r\n          this.alertService.error(\"Error !\");\r\n        }\r\n      );\r\n\r\n    }\r\n  }\r\n  onAssetFileChange(event) {\r\n    if (event.target.files.length > 0) {\r\n      var assetFile = event.target.files[0];\r\n      this.assetBatchFile = assetFile.name;\r\n      setTimeout(()=>{    \r\n        this.assetForm.get('batchImportAssetFile').setValue(assetFile);\r\n      }, 200); \r\n    }\r\n  }\r\n  ////--------------------------------------------------------------------------------------------------------\r\n  onSubmitBatchImportUserForm(event){\r\n    if(this.userForm.controls.batchImportUserFile.value.length == 0){\r\n      this.alertService.success(\"Please select file for import users.\");\r\n    }else{\r\n      var formData = new FormData();\r\n      formData.append('file', this.userForm.controls.batchImportUserFile.value);\r\n      formData.append('inputFileName', this.userForm.controls.batchImportUserFile.value.name);\r\n      this.batchImportService.batchImportUser(formData)\r\n      .pipe().subscribe(\r\n        data =>{\r\n          var successCount = 0;\r\n          var failCount = 0;\r\n          if(data.length == 0){\r\n            this.alertService.success(\"Total user stored: 0\");\r\n          }else if(data.length >= 1){\r\n            for(var R = 0; R < data.length; R++){\r\n              var currentElement = data[R];\r\n              console.dir(currentElement);\r\n              if( currentElement.processMessage == \"Stored..!\"){\r\n                successCount++;\r\n              }else{\r\n                failCount++;\r\n              }\r\n            }\r\n            this.alertService.success(\"Total user stored: \"+ successCount +\" , Fail : \"+ failCount);\r\n          }\r\n        },\r\n        erroor => {\r\n          this.alertService.error(\"Error !\");\r\n        }\r\n      );\r\n\r\n    }\r\n  }\r\n  onUserFileChange(event) {\r\n    if (event.target.files.length > 0) {\r\n      this.userFile = event.target.files[0];\r\n      this.userBatchFile = this.userFile.name;\r\n      setTimeout(()=>{    \r\n        this.userForm.get('batchImportUserFile').setValue(this.userFile);\r\n      }, 200);  \r\n    }\r\n  }\r\n///----------------------------------------------------------\r\nopenTemplate(templateName:string):any{\r\n  this.batchImportService.openTemplate(templateName)\r\n  .pipe()\r\n     .subscribe(content => {\r\n      if(navigator.appVersion.toString().indexOf('.NET') > 0){\r\n        var blob = new Blob([content], { type: content.type});\r\n        window.navigator.msSaveBlob(blob);\r\n      }else{\r\n        var blob = new Blob([content], { type: content.type}),\r\n        url = window.URL.createObjectURL(blob);\r\n        window.open(url);\r\n      }\r\n     });\r\n }\r\n \r\n}","module.exports = \"* {\\r\\n    font-size: 1.3rem;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYWRtaW4vaG9tZS9jbG9uZS1xdWl6L2Nsb25lLXF1aXouY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLGlCQUFpQjtBQUNyQiIsImZpbGUiOiJzcmMvYXBwL2FkbWluL2hvbWUvY2xvbmUtcXVpei9jbG9uZS1xdWl6LmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIqIHtcclxuICAgIGZvbnQtc2l6ZTogMS4zcmVtO1xyXG59Il19 */\"","module.exports = \"<app-admin-top-nav></app-admin-top-nav>\\r\\n<main class=\\\"main_container\\\">\\r\\n  <div class=\\\"container\\\">\\r\\n      <div class=\\\"main_con_inner\\\">\\r\\n    \\r\\n\\r\\n          <app-admin-side-nav></app-admin-side-nav>\\r\\n\\r\\n          <!-- right section  start -->\\r\\n          <section class=\\\"right_panel\\\">\\r\\n<!-- Quiz Starts -->\\r\\n                      \\r\\n<div class=\\\"quiz_wrap hide_tab active\\\"  id=\\\"pop_6\\\">\\r\\n    \\r\\n     <div class=\\\"quiz_Inner\\\">\\r\\n        <div class=\\\"rph_header\\\">\\r\\n            <div class=\\\"row\\\">\\r\\n                <div class=\\\"col-sm-6 col-md-6 col-lg-6 rph_left\\\">\\r\\n                    <h5>Clone Quiz</h5>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div class=\\\"right_panel_box2\\\">\\r\\n          <form class=\\\"user_fileds\\\" name=\\\"form\\\" (ngSubmit)=\\\"f.form.valid && onSubmit()\\\" #f=\\\"ngForm\\\" novalidate>\\r\\n\\r\\n            <div class=\\\"row\\\">\\r\\n                <div class=\\\"col-sm-6 col-md-6 col-lg-6\\\">\\r\\n                  <div class=\\\"form-group row\\\">\\r\\n                    <div class=\\\"col-sm-4 col-md-4 col-lg-4\\\">\\r\\n                      <label for=\\\"lastname\\\">Title</label>\\r\\n                    </div>\\r\\n                    <div class=\\\"col-sm-8 col-md-8 col-lg-8\\\">\\r\\n                      <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"\\\" name=\\\"title\\\" [(ngModel)]=\\\"model.title\\\" #title=\\\"ngModel\\\" [ngClass]=\\\"{ 'is-invalid': f.submitted && title.invalid }\\\" required>\\r\\n                      <div *ngIf=\\\"f.submitted && title.invalid\\\" class=\\\"invalid-feedback\\\">\\r\\n                          <div *ngIf=\\\"title.errors.required\\\">Title is required</div>\\r\\n                      </div>\\r\\n                    </div>\\r\\n                  </div>                 \\r\\n                </div>\\r\\n            </div>\\r\\n          \\r\\n            <input type=\\\"hidden\\\" class=\\\"form-control\\\" placeholder=\\\"\\\" name=\\\"id\\\" [(ngModel)]=\\\"model.id\\\" #id=\\\"ngModel\\\" >\\r\\n          <!-- <div class=\\\"applyFilers mt-4 \\\" name=\\\"domain\\\">\\r\\n                <select class=\\\"custom-select slects_option\\\"  #assetType (change)=\\\"getThearpeuticAreas($event.target.value)\\\" >\\r\\n                      <option selected=\\\"\\\">Select AT’s</option>\\r\\n                      <option *ngFor=\\\"let assetType of assetTypes ; index as i\\\" [value]=\\\"assetType.id\\\">{{assetType.userName}}</option>\\r\\n                </select>\\r\\n                <select class=\\\"custom-select slects_option\\\" #ta  (change)=\\\"getdiseaseAndProducts($event.target.value)\\\">\\r\\n                    <option selected=\\\"\\\">Select TA’s</option>\\r\\n                    <option *ngFor=\\\"let ta of therapeuticAreaList ; index as i\\\" [value]=\\\"ta\\\">{{ta}}</option>\\r\\n                </select>    \\r\\n                <select class=\\\"custom-select slects_option\\\" #disease >\\r\\n                    <option selected=\\\"\\\">Select DS’s</option>\\r\\n                    <option *ngFor=\\\"let dis of diseaseList ; index as i\\\" [value]=\\\"dis\\\">{{dis}}</option>                        \\r\\n                </select>    \\r\\n                <select class=\\\"custom-select slects_option\\\" #product>\\r\\n                    <option selected=\\\"\\\">Select Product</option>\\r\\n                    <option *ngFor=\\\"let prod of productList ; index as i\\\" [value]=\\\"prod\\\">{{prod}}</option>\\r\\n                </select> \\r\\n            </div> -->\\r\\n\\r\\n          <div class=\\\"row questSelectedWrap\\\">\\r\\n            <div class=\\\"col-12 col-sm-12 questSelected\\\">\\r\\n              <div class=\\\"questHeader\\\">\\r\\n                <h2><span class=\\\"questCount\\\">{{questionCount}}</span> Questions Selected</h2>\\r\\n                <h3>Title</h3>\\r\\n              </div>\\r\\n              <div class=\\\"questChecked\\\">\\r\\n                <ul>\\r\\n                  <li class=\\\"questList\\\" *ngFor=\\\"let question of questions ; index as i\\\">\\r\\n                        <input type=\\\"checkbox\\\" value=\\\"{{question.id}}\\\" id=\\\"{{'quest'+i}}\\\" (change)=\\\"onCheckboxChange(question.id,$event)\\\" [checked]=\\\"checkedList.indexOf(question.id) > -1 ? true: false\\\">\\r\\n                        <label for=\\\"{{'quest'+i}}\\\">{{question.qsData.question}}</label>\\r\\n                  </li>\\r\\n                  \\r\\n                </ul>\\r\\n                <button class=\\\"btn quizBtn\\\">Clone</button>\\r\\n                <button class=\\\"btn quizBtn\\\" (click)=\\\"cancelQuiz()\\\">Cancel</button>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </form>\\r\\n        </div>\\r\\n    </div> \\r\\n\\r\\n    \\r\\n</div>\\r\\n\\r\\n<!-- Quiz Ends -->\\r\\n</section> <!-- Right Panel End Here -->\\r\\n<form class=\\\"user_fileds\\\" name=\\\"form\\\" (ngSubmit)=\\\"f.form.valid && confirmClone()\\\" #f=\\\"ngForm\\\" novalidate>\\r\\n    <div class=\\\"confirmClonewrap\\\"  *ngIf=\\\"clone_confirm\\\">\\r\\n        <div class=\\\"confirmClone\\\">\\r\\n          <h1>Clone form</h1>\\r\\n          <p>You’re about to clone this existing quiz, Please provide a name for the new copy.</p>\\r\\n          <div class=\\\"cloneField\\\">\\r\\n            <!-- <input type=\\\"text\\\"> -->\\r\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"\\\" name=\\\"clonetitle\\\" [(ngModel)]=\\\"model.clonetitle\\\" #clonetitle=\\\"ngModel\\\" [ngClass]=\\\"{ 'is-invalid': f.submitted && clonetitle.invalid }\\\" required maxlength=\\\"30\\\">\\r\\n              <div *ngIf=\\\"f.submitted && clonetitle.invalid\\\" class=\\\"invalid-feedback\\\">\\r\\n                  <div *ngIf=\\\"clonetitle.errors.required\\\">Title is required</div>\\r\\n              </div>\\r\\n            <div class=\\\"cloneFieldBtn\\\">\\r\\n                <button class=\\\"btn btncloneCancel\\\" (click)=\\\"cancelClone()\\\">Cancel</button>\\r\\n                <button class=\\\"btn btncloneConfirm\\\">Confirm</button>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n</form>\\r\\n\\r\\n\\r\\n  <!-- overLay -->\\r\\n  <div class=\\\"overlay\\\" *ngIf=\\\"clone_overlay\\\"></div>\\r\\n\\r\\n</div>\\r\\n</div>\\r\\n</main>\\r\\n<footer class=\\\"fot_main\\\">\\r\\n<div class=\\\"container\\\">\\r\\n<div class=\\\"fot_inner\\\">\\r\\n<div class=\\\"row\\\"><div class=\\\"col-sm-12 col-md-12\\\"><p>© ALLERGAN 2019</p></div></div>\\r\\n</div>\\r\\n</div>\\r\\n</footer>\"","import { Component, OnInit } from \"@angular/core\";\r\nimport { first } from \"rxjs/operators\";\r\nimport { QuizService } from '../../services/quizservice';\r\nimport { Router, ActivatedRoute } from \"@angular/router\";\r\nimport { FormBuilder } from \"@angular/forms\";\r\nimport { MetaDataService } from \"../../services/metadataService\";\r\nimport { QuestionBankService } from '../../services/questionbankservice';\r\nimport { AlertService } from \"src/app/services\";\r\nimport { User } from \"src/app/models\";\r\nimport { Quiz } from '../../model/quiz';\r\n\r\n@Component({\r\n    selector: 'app-admin-clone-quiz',\r\n    templateUrl: './clone-quiz.component.html',\r\n    styleUrls: ['./clone-quiz.component.css']\r\n  })\r\n\r\n  export class CloneQuizComponent implements OnInit {\r\n    currentUser: User;\r\n    selectedQuestionsList = [];\r\n    editQuiz: Quiz = new Quiz();\r\n    title: string = '';\r\n    id: number;\r\n    jsonData: Array<string>\r\n    clone_confirm : boolean = false;\r\n    clone_overlay : boolean = false;\r\n\r\n    assetTypes : [{id:0, userName:\"\"}];\r\n    therapeuticAreaList: Array<string> = [];\r\n    diseaseList: Array<string> = [];\r\n    productList: Array<string> = [];\r\n    checkedList: Array<number> = [];\r\n    questions:  [{}];\r\n    quiz:  [{}];\r\n    questionCount = 0;\r\n    zero : number = 0;\r\n\r\n    constructor(\r\n        private fb: FormBuilder, \r\n        private route: ActivatedRoute, \r\n        private formBuilder: FormBuilder, \r\n        private alertService: AlertService,\r\n        private metaService: MetaDataService,\r\n        private questionBankService: QuestionBankService,\r\n        private router: Router,\r\n        private quizService: QuizService) {\r\n        this.currentUser = JSON.parse(localStorage.getItem('currentUser'));    \r\n    \r\n        this.route.params.subscribe(params =>\r\n          this.quizService.getQuizById(Number(params['id'])).pipe().subscribe(quizz => {\r\n            this.editQuiz = quizz.data;  \r\n            console.log(this.editQuiz); \r\n            this.model.id = this.editQuiz.id;    \r\n            this.model.title = this.editQuiz.title; \r\n            this.jsonData = this.editQuiz.jsonData.toString().replace('[','').replace(']','').split(',');\r\n            this.checkedList = this.jsonData.map(Number);\r\n            if(this.checkedList.indexOf(this.zero) > -1){\r\n              this.checkedList.splice(this.checkedList.indexOf(this.zero), 1);\r\n            }\r\n            this.questionCount = this.checkedList.length  \r\n          },\r\n            error => {\r\n              this.alertService.error(error);    \r\n            }\r\n          )\r\n        )\r\n    \r\n      }\r\n\r\n    ngOnInit() {\r\n      this.checkedList = [];\r\n      this.questionBankService.getAllQuestions().pipe(first()).subscribe(questions => {  \r\n        this.questions=questions;           \r\n      });\r\n      this.metaService.getAllAssetTypes().pipe(first()).subscribe(assetTypes => {  \r\n          this.assetTypes = assetTypes.data;\r\n      });\r\n      this.metaService.getTherapeuticAreaMap().pipe(first()).subscribe(TA => { \r\n          TA.data.forEach(ta => {\r\n              this.therapeuticAreaList.push(ta.name);\r\n              ta.products.forEach(prod => {\r\n                this.productList.push(prod.name);\r\n              });\r\n              ta.diseaseStates.forEach(disease => {\r\n                this.diseaseList.push(disease.name);\r\n              });\r\n          });\r\n      }); \r\n    }\r\n\r\n    model: any = { };\r\n\r\n    getThearpeuticAreas(assetTypeId){\r\n      this.therapeuticAreaList = [];\r\n      this.metaService.getTherapeuticAreas(assetTypeId).pipe(first()).subscribe(therapeutic => { \r\n          therapeutic.data.forEach(ta => {\r\n            this.therapeuticAreaList.push(ta.name);\r\n          });\r\n      });\r\n    }\r\n  \r\n    getdiseaseAndProducts(taName){\r\n      this.metaService.getTherapeuticAreaMap().pipe(first()).subscribe(TA => { \r\n        TA.data.forEach(ta => {\r\n          if(taName === ta.name){\r\n            this.productList = [];\r\n            this.diseaseList = [];\r\n            ta.products.forEach(prod => {\r\n              this.productList.push(prod.name);\r\n            });\r\n            ta.diseaseStates.forEach(disease => {\r\n              this.diseaseList.push(disease.name);\r\n            });\r\n          }                \r\n        });\r\n      });    \r\n    }\r\n    \r\n    cancelQuiz(){\r\n      this.checkedList = [];\r\n      this.router.navigate(['/admin/quiz']);\r\n    }\r\n\r\n    cancelClone(){\r\n      this.clone_confirm = false;\r\n      this.clone_overlay = false; \r\n    }\r\n\r\n    onCheckboxChange(questionId,$event){\r\n      if(this.checkedList.indexOf(questionId) > -1){\r\n        this.checkedList.splice(this.checkedList.indexOf(questionId), 1);\r\n      }else{\r\n        this.checkedList.push(questionId);\r\n      }\r\n      console.log(this.checkedList);\r\n      this.questionCount = this.checkedList.length;\r\n    }\r\n\r\n    onSubmit() {\r\n      this.clone_confirm = true;\r\n      this.clone_overlay = true;   \r\n      \r\n      this.model.clonetitle = this.model.title;\r\n    }\r\n\r\n    confirmClone(){\r\n      console.log(111);\r\n      let quiz=new Quiz();\r\n      quiz.title = this.model.clonetitle\r\n      quiz.jsonData=this.checkedList;\r\n\r\n      this.quizService.insertQuiz(quiz).pipe(first()).subscribe(q => { \r\n        this.quizService.getQuiz().pipe(first()).subscribe(quizz => {      \r\n           this.quiz = quizz.data;\r\n         });\r\n         this.checkedList = [];\r\n         this.router.navigate(['/admin/quiz']);\r\n         this.alertService.success('Success.');\r\n          window.scroll(0,0);\r\n        },\r\n        error => {\r\n          this.alertService.error(error);\r\n          window.scroll(0,0);\r\n       });\r\n    }\r\n  }","module.exports = \".invalid-select {\\r\\n    border-color: #dc3545;\\r\\n}\\r\\n.invalid-txt {\\r\\n    width: 100%;\\r\\n    margin-top: .25rem;\\r\\n    font-size: 80%;\\r\\n    color: #dc3545;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYWRtaW4vaG9tZS9lZGl0LXF1ZXN0aW9uL2VkaXQtcXVlc3Rpb24uY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLHFCQUFxQjtBQUN6QjtBQUNBO0lBQ0ksV0FBVztJQUNYLGtCQUFrQjtJQUNsQixjQUFjO0lBQ2QsY0FBYztBQUNsQiIsImZpbGUiOiJzcmMvYXBwL2FkbWluL2hvbWUvZWRpdC1xdWVzdGlvbi9lZGl0LXF1ZXN0aW9uLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuaW52YWxpZC1zZWxlY3Qge1xyXG4gICAgYm9yZGVyLWNvbG9yOiAjZGMzNTQ1O1xyXG59XHJcbi5pbnZhbGlkLXR4dCB7XHJcbiAgICB3aWR0aDogMTAwJTtcclxuICAgIG1hcmdpbi10b3A6IC4yNXJlbTtcclxuICAgIGZvbnQtc2l6ZTogODAlO1xyXG4gICAgY29sb3I6ICNkYzM1NDU7XHJcbn0iXX0= */\"","module.exports = \"<app-admin-top-nav></app-admin-top-nav>\\r\\n<router-outlet></router-outlet>\\r\\n    <!-- Page section start -->\\r\\n    <main class=\\\"main_container\\\">\\r\\n        <div class=\\\"container\\\">\\r\\n            <div class=\\\"main_con_inner\\\">\\r\\n          \\r\\n\\r\\n                <app-admin-side-nav></app-admin-side-nav>\\r\\n   <!-- right section  start -->\\r\\n   <section class=\\\"right_panel\\\">\\r\\n <!-- Question Bank Starts -->\\r\\n                      \\r\\n <div class=\\\"question_bank\\\"  id=\\\"pop_4\\\">\\r\\n        \\r\\n        <!-- Add Questions Starts-->\\r\\n        <div class=\\\"question_bank_Inner\\\">\\r\\n            <div class=\\\"rph_header\\\">\\r\\n                <div class=\\\"row\\\">\\r\\n                    <div class=\\\"col-sm-6 col-md-6 col-lg-6 rph_left\\\">\\r\\n                        <h5>Edit Question</h5>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"right_panel_box2\\\">\\r\\n                <form class=\\\"user_fileds\\\" name=\\\"form\\\" (ngSubmit)=\\\"f.form.valid && onSubmit()\\\" #f=\\\"ngForm\\\" novalidate>\\r\\n                <div class=\\\"row\\\">\\r\\n                    <div class=\\\"col-sm-6 col-md-6 col-lg-6\\\">\\r\\n                      <div class=\\\"form-group row\\\">\\r\\n                        <div class=\\\"col-sm-4 col-md-4 col-lg-4\\\">\\r\\n                          <label for=\\\"lastname\\\">Title</label>\\r\\n                          <input type=\\\"hidden\\\" class=\\\"form-control\\\" placeholder=\\\"\\\" name=\\\"id\\\" [(ngModel)]=\\\"model.id\\\"  >\\r\\n                        </div>\\r\\n                        <div class=\\\"col-sm-8 col-md-8 col-lg-8\\\">\\r\\n                          <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"\\\" name=\\\"title\\\" [(ngModel)]=\\\"model.title\\\" #title=\\\"ngModel\\\" [ngClass]=\\\"{ 'is-invalid': f.submitted && title.invalid }\\\" required minlength=\\\"3\\\" maxlength=\\\"30\\\">\\r\\n                            <div *ngIf=\\\"f.submitted && title.invalid\\\" class=\\\"invalid-feedback\\\">\\r\\n                                <div *ngIf=\\\"title.errors.required\\\">Title is required</div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                      </div>\\r\\n\\r\\n                      <div class=\\\"form-group row\\\">\\r\\n                            <div class=\\\"col-sm-4 col-md-4 col-lg-4\\\">\\r\\n                              <label for=\\\"lastname\\\">Question</label>\\r\\n                            </div>\\r\\n                            <div class=\\\"col-sm-8 col-md-8 col-lg-8\\\">\\r\\n                              <textarea rows=\\\"4\\\" cols=\\\"50\\\" class=\\\"form-control\\\" placeholder=\\\"\\\" name=\\\"question\\\" [(ngModel)]=\\\"model.question\\\" #question=\\\"ngModel\\\" [ngClass]=\\\"{ 'is-invalid': f.submitted && question.invalid }\\\" required></textarea>\\r\\n                                <div *ngIf=\\\"f.submitted && question.invalid\\\" class=\\\"invalid-feedback\\\">\\r\\n                                    <div *ngIf=\\\"question.errors.required\\\">Question is required</div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                          </div>\\r\\n\\r\\n                      <div class=\\\"form-group row\\\">\\r\\n                        <div class=\\\"col-sm-4 col-md-4 col-lg-4\\\">\\r\\n                          <label >Asset Type</label>\\r\\n                        </div>\\r\\n                        <div class=\\\"col-sm-8 col-md-8 col-lg-8\\\">\\r\\n                            <select class=\\\"custom-select slects_option\\\" [ngClass]=\\\"{'invalid-select': assetTypeMessage}\\\" #assetType=\\\"ngModel\\\" (change)=\\\"getThearpeuticAreas($event.target.value)\\\" name=\\\"assetType\\\" [(ngModel)]=\\\"model.assetTypeId\\\" [ngClass]=\\\"{ 'is-invalid': f.submitted && assetType.invalid }\\\" required>\\r\\n                                <option selected=\\\"\\\" value = \\\"0\\\">Select</option>\\r\\n                                <option *ngFor=\\\"let assetType of assetTypes ; index as i\\\" [value]=\\\"assetType.id\\\" [selected]=\\\"assetType.id == model.assetTypeId\\\">{{assetType.userName}}</option>\\r\\n                          </select>\\r\\n                          <div *ngIf=\\\"assetTypeMessage\\\" class=\\\"invalid-txt\\\">\\r\\n                            <div *ngIf=\\\"assetTypeMessage\\\">Asset Type is required</div>\\r\\n                          </div> \\r\\n                          <div *ngIf=\\\"f.submitted && assetType.invalid\\\" class=\\\"invalid-feedback\\\">\\r\\n                              <div *ngIf=\\\"assetType.errors.required\\\">Asset Type is required</div>\\r\\n                          </div>\\r\\n                        </div>\\r\\n                      </div>\\r\\n\\r\\n                      <div class=\\\"form-group row\\\">\\r\\n                        <div class=\\\"col-sm-4 col-md-4 col-lg-4\\\">\\r\\n                          <label >Select TA</label>\\r\\n                        </div>\\r\\n                        <div class=\\\"col-sm-8 col-md-8 col-lg-8\\\">\\r\\n                            <select class=\\\"custom-select slects_option\\\" [ngClass]=\\\"{'invalid-select': taMessage}\\\" #ta=\\\"ngModel\\\"  (change)=\\\"getdiseaseAndProducts($event.target.value)\\\" name=\\\"ta\\\" [(ngModel)]=\\\"model.therapeuticAreaId\\\" [ngClass]=\\\"{ 'is-invalid': f.submitted && ta.invalid }\\\" required>\\r\\n                                <option selected=\\\"\\\" value = \\\"0\\\">Select</option>\\r\\n                                <!-- <option *ngFor=\\\"let ta of therapeuticAreaList ; index as i\\\" [value]=\\\"ta\\\">{{ta}}</option> -->\\r\\n                                <option *ngFor=\\\"let ta of therapeuticAreaMap | keyvalue\\\" [value]=\\\"ta.key\\\" [selected]=\\\"ta.key == question.therapeuticAreaId\\\">{{ta.value}}</option>\\r\\n                            </select> \\r\\n                            <div *ngIf=\\\"taMessage\\\" class=\\\"invalid-txt\\\">\\r\\n                              <div *ngIf=\\\"taMessage\\\">TA is required</div>\\r\\n                            </div> \\r\\n                            <div *ngIf=\\\"f.submitted && ta.invalid\\\" class=\\\"invalid-feedback\\\">\\r\\n                                <div *ngIf=\\\"ta.errors.required\\\">TA is required</div>\\r\\n                            </div>\\r\\n                            \\r\\n                        </div>\\r\\n                      </div>\\r\\n\\r\\n                      <div class=\\\"form-group row\\\">\\r\\n                        <div class=\\\"col-sm-4 col-md-4 col-lg-4\\\">\\r\\n                          <label >Disease state</label>\\r\\n                        </div>\\r\\n                        <div class=\\\"col-sm-8 col-md-8 col-lg-8\\\">\\r\\n                            <select class=\\\"custom-select slects_option\\\" #disease name=\\\"disease\\\" [(ngModel)]=\\\"model.diseaseStateId\\\" >\\r\\n                                <option selected=\\\"\\\" value = \\\"0\\\">Select</option>\\r\\n                                <!-- <option *ngFor=\\\"let dis of diseaseList ; index as i\\\" [value]=\\\"dis\\\">{{dis}}</option> -->\\r\\n                                <option *ngFor=\\\"let dis of diseaseMap | keyvalue\\\" [value]=\\\"dis.key\\\" [selected]=\\\"dis.key == question.diseaseStateId\\\">{{dis.value}}</option>\\r\\n                            </select> \\r\\n                        </div>\\r\\n                      </div>\\r\\n\\r\\n                      <div class=\\\"form-group row\\\">\\r\\n                        <div class=\\\"col-sm-4 col-md-4 col-lg-4\\\">\\r\\n                          <label >Product</label>\\r\\n                        </div>\\r\\n                        <div class=\\\"col-sm-8 col-md-8 col-lg-8\\\">\\r\\n                            <select class=\\\"custom-select slects_option\\\" #product name=\\\"product\\\" [(ngModel)]=\\\"model.productId\\\">\\r\\n                                <option selected=\\\"\\\" value = \\\"0\\\">Select</option>\\r\\n                                <!-- <option *ngFor=\\\"let prod of productList ; index as i\\\" [value]=\\\"prod\\\">{{prod}}</option> -->\\r\\n                                <option *ngFor=\\\"let prod of productMap | keyvalue\\\" [value]=\\\"prod.key\\\" [selected]=\\\"prod.key == question.productId\\\">{{prod.value}}</option>\\r\\n                            </select> \\r\\n                        </div>\\r\\n                      </div>\\r\\n\\r\\n                      <div class=\\\"form-group row\\\">\\r\\n                        <div class=\\\"col-sm-4 col-md-4 col-lg-4\\\">\\r\\n                          <label >Question Type</label>\\r\\n                        </div>\\r\\n                        <div class=\\\"col-sm-8 col-md-8 col-lg-8\\\">\\r\\n                            <select class=\\\"custom-select slects_option\\\" name=\\\"QType\\\" [(ngModel)]=\\\"model.QType\\\" #QType=\\\"ngModel\\\" (change)=\\\"typeSection($event.target.value)\\\" [ngClass]=\\\"{ 'is-invalid': f.submitted && QType.invalid }\\\" required>\\r\\n                              <option value=\\\"SINGLE_CHOICE\\\" [selected]=\\\"model.QType == 'SINGLE_CHOICE'\\\">Single Choice</option>\\r\\n                              <option value=\\\"MULTIPLE_CHOICE\\\" [selected]=\\\"model.QType == 'MULTIPLE_CHOICE'\\\">Multiple Choice</option>\\r\\n                          </select>\\r\\n                          <div *ngIf=\\\"f.submitted && QType.invalid\\\" class=\\\"invalid-feedback\\\">\\r\\n                              <div *ngIf=\\\"QType.errors.required\\\">Question Type is required</div>\\r\\n                          </div>\\r\\n                        </div>\\r\\n                      </div>\\r\\n\\r\\n                      <!-- <div class=\\\"form-group row\\\">\\r\\n                        <div class=\\\"col-sm-4 col-md-4 col-lg-4\\\">\\r\\n                          <label >Region</label>\\r\\n                        </div>\\r\\n                        <div class=\\\"col-sm-8 col-md-8 col-lg-8\\\">\\r\\n                            <select class=\\\"custom-select slects_option\\\">\\r\\n                              <option ></option>\\r\\n                              <option value=\\\"1\\\">Region</option>\\r\\n                              <option value=\\\"2\\\">Region</option>\\r\\n                              <option value=\\\"3\\\">Region</option>\\r\\n                            </select>\\r\\n                        </div>\\r\\n                      </div> -->\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"row\\\">\\r\\n                  <div class=\\\"col-sm-12 col-md-12 col-lg-12 rph_left\\\">\\r\\n                    <span class=\\\"invalid-txt\\\">{{ansMessage}}</span>\\r\\n                    <h5>Answers</h5>\\r\\n                    <div class=\\\"form-group row\\\" *ngFor=\\\"let answer of answers; let i = index\\\">\\r\\n                      <div class=\\\"col-sm-12 col-md-12 col-lg-12 feedBackWrap\\\">                        \\r\\n                        <label >{{nameArray[i].name}}</label>\\r\\n                        <span>\\r\\n                          <input type =\\\"radio\\\" [id]=\\\"answer.text\\\" value=\\\"{{answer.correct}}\\\" name=\\\"radio-group\\\" *ngIf=\\\"radioDisplay\\\"  (click)=\\\"onItemChange(answer)\\\" [checked]=\\\"answer.correct\\\"/>\\r\\n                          <input type =\\\"checkbox\\\" [id]=\\\"answer.text\\\"  value=\\\"{{answer.correct}}\\\" name=\\\"radio-group\\\" *ngIf=\\\"checkBoxDisplay\\\" (click)=\\\"onItemChange(answer)\\\" [checked]=\\\"answer.correct\\\"/>\\r\\n                        </span>\\r\\n                          <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"\\\" placeholder=\\\"\\\" name=\\\"{{'ans' + i}}\\\" [value]=\\\"answer.text\\\" [(ngModel)]=\\\"answer.text\\\">\\r\\n                        <!-- <button type=\\\"button\\\" class=\\\"delete\\\"><i class=\\\"far fa-trash-alt\\\"></i></button> -->\\r\\n                            <span (click)=\\\"onRemoveRow(answer.id)\\\" class=\\\"delete\\\"><i class=\\\"far fa-trash-alt\\\"></i></span>\\r\\n                      </div>\\r\\n                    </div>\\r\\n                    \\r\\n                    <div class=\\\"feedBack_btns row\\\">\\r\\n                      <div class=\\\"col-xs-12 col-sm-12 col-md-12 col-lg-12 feedBack_btn1\\\">\\r\\n                        <span class=\\\"btn btn_feedback\\\" (click)=\\\"onAddRow()\\\">Add Answer</span>\\r\\n                      </div>\\r\\n                      <div class=\\\"col-xs-12 col-sm-12 col-md-12 col-lg-12 feedBack_btn2\\\">\\r\\n                          <button class=\\\"btn btn_feedback btn_feedback_cancel\\\" (click)=\\\"cancelAddQuestion()\\\">Cancel</button>\\r\\n                          <!-- <button class=\\\"btn btn_feedback\\\">Save & Add Another</button> -->\\r\\n                          <button class=\\\"btn btn_feedback btn_feedback_save\\\">Save</button>\\r\\n                      </div>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </form>\\r\\n            </div>\\r\\n         </div>\\r\\n      </div>\\r\\n\\r\\n\\r\\n\\r\\n    <!-- Question Bank Ends -->\\r\\n\\r\\n</section> <!-- Right Panel End Here -->\\r\\n</div>\\r\\n</div>\\r\\n</main>\\r\\n<footer class=\\\"fot_main\\\">\\r\\n<div class=\\\"container\\\">\\r\\n<div class=\\\"fot_inner\\\">\\r\\n<div class=\\\"row\\\"><div class=\\\"col-sm-12 col-md-12\\\"><p>© ALLERGAN 2019</p></div></div>\\r\\n</div>\\r\\n</div>\\r\\n</footer>\\r\\n\"","import { Component, OnInit } from \"@angular/core\";\r\nimport { Router, ActivatedRoute } from \"@angular/router\";\r\nimport { FormBuilder } from \"@angular/forms\";\r\nimport { AlertService } from 'src/app/services';\r\nimport { User } from \"src/app/models\";\r\nimport { QuestionBankService } from \"../../services/questionbankservice\";\r\nimport { Question } from '../../model/Question';\r\nimport { MetaDataService } from \"../../services/metadataService\";\r\nimport { first } from \"rxjs/operators\";\r\nimport { Answer } from \"../../model/Answer\";\r\nimport { QSData } from \"../../model/AnswerData\";\r\n\r\n@Component({\r\n    selector: 'app-admin-edit-question',\r\n    templateUrl: './edit-question.component.html',\r\n    styleUrls: ['./edit-question.component.css']\r\n  \r\n  })\r\n\r\n    export class EditQuestionComponent implements OnInit { \r\n      ngOnInit() {       \r\n        this.metaService.getAllAssetTypes().pipe(first()).subscribe(assetTypes => {  \r\n          this.assetTypes = assetTypes.data;\r\n          console.log(this.assetTypes)\r\n        });\r\n      }\r\n      currentUser: User;   \r\n      editQuestion: any ;// Question = new Question();\r\n      assetTypes : [{id:0, userName:\"\"}];\r\n\r\n      therapeuticAreaMap = new Map();\r\n      diseaseMap= new Map();\r\n      productMap= new Map();\r\n      radioDisplay : boolean = true;\r\n      checkBoxDisplay: boolean = false;\r\n      correctFlag : Array<any> = [];\r\n      answers: any;\r\n      radioSelected: any;\r\n      choiceLetters : Array<any> = ['A', 'B', 'C', 'D', 'E', 'F'];\r\n      taMessage: boolean = false;\r\n      assetTypeMessage : boolean = false;\r\n      ansMessage: string = '';\r\n      nameArray: Array<any> = [\r\n        {\r\n          'index' : 0,\r\n          'name': 'A',\r\n          'text': '',\r\n          'correct': ''\r\n        },\r\n        {\r\n          'index' : 1,\r\n          'name': 'B',\r\n          'text': '',\r\n          'correct': ''\r\n        },\r\n        {\r\n          'index' : 2,\r\n          'name': 'C',\r\n          'text': '',\r\n          'correct': ''\r\n        },\r\n        {\r\n          'index' : 3,\r\n          'name': 'D',\r\n          'text': '',\r\n          'correct': ''\r\n        },\r\n        {\r\n          'index' : 4,\r\n          'name': 'E',\r\n          'text': '',\r\n          'correct': ''\r\n        },        \r\n        {\r\n          'index' : 5,\r\n          'name': 'F',\r\n          'text': '',\r\n          'correct': ''\r\n        }\r\n      ];\r\n\r\n      constructor(\r\n          private formBuilder: FormBuilder,\r\n          private alertService: AlertService,\r\n          private route: ActivatedRoute,\r\n          private questionBankService:QuestionBankService,          \r\n          private metaService: MetaDataService,\r\n          private router: Router) { \r\n            this.currentUser = JSON.parse(localStorage.getItem('currentUser'));   \r\n\r\n            this.route.params.subscribe(params =>\r\n              this.questionBankService.getQuestionById(Number(params['id'])).pipe().subscribe(question => {\r\n                this.editQuestion = question.data;   \r\n                this.model.id = this.editQuestion.id;   \r\n                this.model.title =  this.editQuestion.title;\r\n                this.model.question = JSON.parse(this.editQuestion.jsonData).question;\r\n                console.log('this.editQuestion.assetTypeId'+this.editQuestion.assetTypeId);\r\n                this.model.assetTypeId = this.editQuestion.assetTypeId;\r\n                if(this.model.assetTypeId > 0){\r\n                  this.getThearpeuticAreas(this.model.assetTypeId);\r\n                }\r\n             //   this.model.assetTypeId = this.editQuestion.assetTypeId;\r\n                this.model.therapeuticAreaId = this.editQuestion.therapeuticAreaId;\r\n                if(this.model.therapeuticAreaId > 0){\r\n                  this.getdiseaseAndProducts(this.model.therapeuticAreaId);\r\n                }\r\n                this.model.diseaseStateId = this.editQuestion.diseaseStateId;\r\n                this.model.productId = this.editQuestion.productId;\r\n                this.model.QType = JSON.parse(this.editQuestion.jsonData).questionType;\r\n                if(this.model.QType){\r\n                  this.typeSection(this.model.QType);\r\n                }\r\n                this.answers = JSON.parse(this.editQuestion.jsonData).answers;\r\n\r\n                console.log(this.answers);\r\n                this.answers.forEach(a => {\r\n                  if(a.correct == true){this.correctFlag.push(a.id);}\r\n                });\r\n                // JSON.parse(this.editQuestion.jsonData).answers.forEach(q => {\r\n                //   console.log(q);\r\n\r\n                //   this.nameArray.forEach(n => {\r\n                //     this.model.div.val = n.text;\r\n                //   });\r\n                // });\r\n                \r\n              },\r\n                error => {\r\n                  this.alertService.error(error);    \r\n                }\r\n              )\r\n            )\r\n\r\n           }\r\n\r\n        questions:  [{}];\r\n        model: any = { };\r\n\r\n        cancelAddQuestion(){\r\n          this.router.navigate(['/admin/questionBank']);\r\n        }\r\n\r\n        getThearpeuticAreas(assetTypeId){\r\n          this.assetTypeMessage = false;\r\n        if(assetTypeId == 0){ this.assetTypeMessage = true; }else{\r\n          this.therapeuticAreaMap.clear()\r\n          this.metaService.getTherapeuticAreas(assetTypeId).pipe(first()).subscribe(therapeutic => { \r\n              therapeutic.data.forEach(ta => {\r\n                this.therapeuticAreaMap.set(ta.id, ta.name);\r\n              });\r\n          });\r\n        }\r\n    }\r\n     \r\n        getdiseaseAndProducts(taID){\r\n            this.taMessage = false;\r\n        if(taID == 0){ this.taMessage = true; }else{\r\n            this.metaService.getTherapeuticAreaMap().pipe(first()).subscribe(TA => { \r\n              TA.data.forEach(ta => {\r\n                if(taID == ta.id){\r\n                  this.productMap.clear();\r\n                this.diseaseMap.clear();\r\n                  ta.products.forEach(prod => {\r\n                    this.productMap.set(prod.id,prod.name);\r\n                  });\r\n                  ta.diseaseStates.forEach(disease => {\r\n                    this.diseaseMap.set(disease.id, disease.name);\r\n                  });\r\n                }                \r\n              });\r\n            });    \r\n        }\r\n    }\r\n    \r\n        typeSection(type){\r\n          if(type === 'SINGLE_CHOICE'){\r\n            this.checkBoxDisplay = false;\r\n            this.radioDisplay = true;\r\n          }else{\r\n            this.checkBoxDisplay = true;\r\n            this.radioDisplay = false;\r\n          }\r\n        }\r\n\r\n    \r\n\t    onItemChange(a){\r\n        console.log(a)\r\n\t      console.log(this.model.QType);\r\n\t      if(this.model.QType === 'SINGLE_CHOICE'){ \r\n\t        this.correctFlag = [] ;\r\n          this.correctFlag.push(a.id);\r\n          console.log(this.correctFlag);\r\n\t      }else{\r\n\t        if(this.correctFlag.indexOf(a.id) > -1){\r\n\t          this.correctFlag.splice(this.correctFlag.indexOf(a.id), 1);\r\n\t        }else{\r\n\t          this.correctFlag.push(a.id);\r\n\t        }\r\n        }\r\n        if(this.correctFlag.length > 0){ this.ansMessage = ''; }else{ this.ansMessage = 'Please select atleast one Answer.'; }\r\n\t      console.log(this.correctFlag);\r\n\t    }\r\n    \r\n        onSubmit() {\r\n          console.log('on submit');\r\n\tif(this.correctFlag.length == 0){\r\n\t        this.ansMessage = 'Please select atleast one Answer.';\r\n\t      }else{\r\n          console.log('inside');\r\n          this.assetTypeMessage = false; \r\n          this.taMessage = false;\r\n          \r\n          console.log('onSubmit');\r\n          let qsData = new QSData();\r\n          let answerArray : Array<Answer> = [];\r\n          \r\n          this.answers.forEach(n => {\r\n            // console.log(n);\r\n            let answer = new Answer();\r\n\r\n            if(this.correctFlag.indexOf(n.id) > -1){\r\n              answer.correct = true;\r\n            }else{\r\n              answer.correct = false;\r\n            }\r\n            // // answer.correct = n.correct;\r\n            answer.id = n.id;\r\n            answer.text = n.text;\r\n            answerArray.push(answer);\r\n          });\r\n          console.log(answerArray)\r\n        \r\n          qsData.answers = answerArray;\r\n          qsData.questionType = this.model.QType;\r\n          qsData.question = this.model.question;\r\n\r\n          let question=new Question();\r\n          question.id = this.model.id;\r\n          question.title=this.model.title;\r\n          if(this.model.assetTypeId > 0){\r\n            question.assetTypeId=this.model.assetTypeId;\r\n          }else{\r\n            this.assetTypeMessage = true;\r\n          }\r\n         console.log(question.assetTypeId);\r\n          if(this.model.therapeuticAreaId > 0){            \r\n            question.therapeuticAreaId = this.model.therapeuticAreaId;\r\n          }else{\r\n            this.taMessage = true;\r\n          }\r\n\r\n         \r\n          question.diseaseStateId = this.model.diseaseStateId;\r\n          question.productId = this.model.productId;\r\n          question.status= 'true';\r\n\r\n          question.qsData = qsData;\r\n          console.log(question);\r\n          if(question.assetTypeId > 0 && question.therapeuticAreaId > 0){\r\n            this.questionBankService.editQuestion(question).pipe(first()).subscribe(questionss => {   \r\n              this.questionBankService.getAllQuestions().pipe(first()).subscribe(questionss => {      \r\n                this.questions = questionss.data;\r\n              }); \r\n              this.router.navigate(['/admin/questionBank']);   \r\n              this.alertService.success('Successfully Updated.');\r\n                window.scroll(0,0);\r\n              },\r\n              error => {\r\n                this.alertService.error(error);\r\n                window.scroll(0,0);\r\n            });  \r\n\t    }\r\n          }\r\n          \r\n        }\r\n onAddRow() {\r\n   console.log(11);\r\n   let obj ;\r\n   let last:any = this.answers[this.answers.length-1];\r\n    \r\n    if(last == undefined){\r\n       obj = {\r\n        'id' : 0,\r\n        'text': '',\r\n        'correct': ''\r\n        }\r\n    }else{\r\n       obj = {\r\n        'id' : last.index + 1,\r\n        'text': '',\r\n        'correct': ''\r\n        }\r\n    }   \r\n    if(this.answers[last.index + 1] != undefined){\r\n      this.answers.push(obj);\r\n    }\r\n  }\r\n\r\n  onRemoveRow(rowIndex:number){ \r\n    let i;\r\n\r\n    this.answers.forEach(n => {\r\n      if(n.id == rowIndex){\r\n         i = this.answers.indexOf(n);\r\n      }\r\n    });\r\n   console.log(i);\r\n\r\n      this.answers.splice(i,1);\r\n  }\r\n\r\n  }\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FkbWluL2hvbWUvZWRpdC1xdWl6L2VkaXQtcXVpei5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<app-admin-top-nav></app-admin-top-nav>\\r\\n<main class=\\\"main_container\\\">\\r\\n  <div class=\\\"container\\\">\\r\\n      <div class=\\\"main_con_inner\\\">\\r\\n    \\r\\n\\r\\n          <app-admin-side-nav></app-admin-side-nav>\\r\\n\\r\\n          <!-- right section  start -->\\r\\n          <section class=\\\"right_panel\\\">\\r\\n<!-- Quiz Starts -->\\r\\n                      \\r\\n<div class=\\\"quiz_wrap hide_tab active\\\"  id=\\\"pop_6\\\">\\r\\n    \\r\\n     <div class=\\\"quiz_Inner\\\">\\r\\n        <div class=\\\"rph_header\\\">\\r\\n            <div class=\\\"row\\\">\\r\\n                <div class=\\\"col-sm-6 col-md-6 col-lg-6 rph_left\\\">\\r\\n                    <h5>Edit Quiz</h5>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div class=\\\"right_panel_box2\\\">\\r\\n          <form class=\\\"user_fileds\\\" name=\\\"form\\\" (ngSubmit)=\\\"f.form.valid && onSubmit()\\\" #f=\\\"ngForm\\\" novalidate>\\r\\n\\r\\n            <div class=\\\"row\\\">\\r\\n                <div class=\\\"col-sm-6 col-md-6 col-lg-6\\\">\\r\\n                  <div class=\\\"form-group row\\\">\\r\\n                    <div class=\\\"col-sm-4 col-md-4 col-lg-4\\\">\\r\\n                      <label for=\\\"lastname\\\">Title</label>\\r\\n                    </div>\\r\\n                    <div class=\\\"col-sm-8 col-md-8 col-lg-8\\\">\\r\\n                      <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"\\\" name=\\\"title\\\" [(ngModel)]=\\\"model.title\\\" #title=\\\"ngModel\\\" [ngClass]=\\\"{ 'is-invalid': f.submitted && title.invalid }\\\" required>\\r\\n                      <div *ngIf=\\\"f.submitted && title.invalid\\\" class=\\\"invalid-feedback\\\">\\r\\n                          <div *ngIf=\\\"title.errors.required\\\">Title is required</div>\\r\\n                      </div>\\r\\n                    </div>\\r\\n                  </div>                 \\r\\n                </div>\\r\\n            </div>\\r\\n          \\r\\n            <input type=\\\"hidden\\\" class=\\\"form-control\\\" placeholder=\\\"\\\" name=\\\"id\\\" [(ngModel)]=\\\"model.id\\\" #title=\\\"ngModel\\\" >\\r\\n          <!-- <div class=\\\"applyFilers mt-4 \\\" name=\\\"domain\\\">\\r\\n                <select class=\\\"custom-select slects_option\\\"  #assetType (change)=\\\"getThearpeuticAreas($event.target.value)\\\" >\\r\\n                      <option selected=\\\"\\\">Select AT’s</option>\\r\\n                      <option *ngFor=\\\"let assetType of assetTypes ; index as i\\\" [value]=\\\"assetType.id\\\">{{assetType.userName}}</option>\\r\\n                </select>\\r\\n                <select class=\\\"custom-select slects_option\\\" #ta  (change)=\\\"getdiseaseAndProducts($event.target.value)\\\">\\r\\n                    <option selected=\\\"\\\">Select TA’s</option>\\r\\n                    <option *ngFor=\\\"let ta of therapeuticAreaList ; index as i\\\" [value]=\\\"ta\\\">{{ta}}</option>\\r\\n                </select>    \\r\\n                <select class=\\\"custom-select slects_option\\\" #disease >\\r\\n                    <option selected=\\\"\\\">Select DS’s</option>\\r\\n                    <option *ngFor=\\\"let dis of diseaseList ; index as i\\\" [value]=\\\"dis\\\">{{dis}}</option>                        \\r\\n                </select>    \\r\\n                <select class=\\\"custom-select slects_option\\\" #product>\\r\\n                    <option selected=\\\"\\\">Select Product</option>\\r\\n                    <option *ngFor=\\\"let prod of productList ; index as i\\\" [value]=\\\"prod\\\">{{prod}}</option>\\r\\n                </select> \\r\\n            </div> -->\\r\\n\\r\\n          <div class=\\\"row questSelectedWrap\\\">\\r\\n            <div class=\\\"col-12 col-sm-12 questSelected\\\">\\r\\n              <div class=\\\"questHeader\\\">\\r\\n                <h2><span class=\\\"questCount\\\">{{questionCount}}</span> Questions Selected</h2>\\r\\n                <h3>Title</h3>\\r\\n              </div>\\r\\n              <div class=\\\"questChecked\\\">\\r\\n                <ul>\\r\\n                  <li class=\\\"questList\\\" *ngFor=\\\"let question of questions ; index as i\\\" >\\r\\n                        <input type=\\\"checkbox\\\" value=\\\"{{question.id}}\\\" id=\\\"{{'quest'+i}}\\\" (change)=\\\"onCheckboxChange(question.id,$event)\\\" [checked]=\\\"checkedList.indexOf(question.id) > -1 ? true: false\\\">\\r\\n                        <label for=\\\"{{'quest'+i}}\\\">{{question.qsData.question}}</label>                      \\r\\n                  </li>\\r\\n                </ul>\\r\\n                <button class=\\\"btn quizBtn\\\">Submit</button>\\r\\n                <button class=\\\"btn quizBtn\\\" (click)=\\\"cancelQuiz()\\\">Cancel</button>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </form>\\r\\n        </div>\\r\\n    </div> \\r\\n\\r\\n    \\r\\n</div>\\r\\n\\r\\n<!-- Quiz Ends -->\\r\\n</section> <!-- Right Panel End Here -->\\r\\n\\r\\n\\r\\n\\r\\n</div>\\r\\n</div>\\r\\n</main>\\r\\n<footer class=\\\"fot_main\\\">\\r\\n<div class=\\\"container\\\">\\r\\n<div class=\\\"fot_inner\\\">\\r\\n<div class=\\\"row\\\"><div class=\\\"col-sm-12 col-md-12\\\"><p>© ALLERGAN 2019</p></div></div>\\r\\n</div>\\r\\n</div>\\r\\n</footer>\"","import { Component, OnInit } from \"@angular/core\";\r\nimport { first } from \"rxjs/operators\";\r\nimport { QuizService } from '../../services/quizservice';\r\nimport { Router, ActivatedRoute } from \"@angular/router\";\r\nimport { FormBuilder } from \"@angular/forms\";\r\nimport { MetaDataService } from \"../../services/metadataService\";\r\nimport { QuestionBankService } from '../../services/questionbankservice';\r\nimport { AlertService } from \"src/app/services\";\r\nimport { User } from \"src/app/models\";\r\nimport { Quiz } from '../../model/quiz';\r\n\r\n@Component({\r\n  selector: 'app-admin-edit-quiz',\r\n  templateUrl: './edit-quiz.component.html',\r\n  styleUrls: ['./edit-quiz.component.css']\r\n})\r\n\r\nexport class EditQuizComponent implements OnInit {\r\n  currentUser: User;\r\n  selectedQuestionsList = [];\r\n  editQuiz: Quiz = new Quiz();\r\n  title: string = '';\r\n  id: number;\r\n  jsonData: Array<string>\r\n\r\n  assetTypes: [{ id: 0, userName: \"\" }];\r\n  therapeuticAreaList: Array<string> = [];\r\n  diseaseList: Array<string> = [];\r\n  productList: Array<string> = [];\r\n  checkedList: Array<number> = [];\r\n  questions: [{}];\r\n  quiz: [{}];\r\n  questionCount = 0;\r\n  zero: number = 0;\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private route: ActivatedRoute,\r\n    private formBuilder: FormBuilder,\r\n    private alertService: AlertService,\r\n    private metaService: MetaDataService,\r\n    private questionBankService: QuestionBankService,\r\n    private router: Router,\r\n    private quizService: QuizService) {\r\n    this.currentUser = JSON.parse(localStorage.getItem('currentUser'));\r\n\r\n    this.route.params.subscribe(params =>\r\n      this.quizService.getQuizById(Number(params['id'])).pipe().subscribe(quizz => {\r\n        this.editQuiz = quizz.data;\r\n        this.model.id = this.editQuiz.id;\r\n        this.model.title = this.editQuiz.title;\r\n        this.jsonData = this.editQuiz.jsonData.toString().replace('[', '').replace(']', '').split(',');\r\n        this.checkedList = this.jsonData.map(Number);\r\n        if (this.checkedList.indexOf(this.zero) > -1) {\r\n          this.checkedList.splice(this.checkedList.indexOf(this.zero), 1);\r\n        }\r\n        this.questionCount = this.checkedList.length\r\n\r\n      },\r\n        error => {\r\n          this.alertService.error(error);\r\n        }\r\n      )\r\n    )\r\n\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.checkedList = [];\r\n    this.questionBankService.getAllQuestions().pipe(first()).subscribe(questions => {\r\n      this.questions = questions;\r\n    });\r\n    this.metaService.getAllAssetTypes().pipe(first()).subscribe(assetTypes => {\r\n      this.assetTypes = assetTypes.data;\r\n    });\r\n    this.metaService.getTherapeuticAreaMap().pipe(first()).subscribe(TA => {\r\n      TA.data.forEach(ta => {\r\n        this.therapeuticAreaList.push(ta.name);\r\n        ta.products.forEach(prod => {\r\n          this.productList.push(prod.name);\r\n        });\r\n        ta.diseaseStates.forEach(disease => {\r\n          this.diseaseList.push(disease.name);\r\n        });\r\n      });\r\n    });\r\n  }\r\n\r\n  model: any = {};\r\n\r\n  getThearpeuticAreas(assetTypeId) {\r\n    this.therapeuticAreaList = [];\r\n    this.metaService.getTherapeuticAreas(assetTypeId).pipe(first()).subscribe(therapeutic => {\r\n      therapeutic.data.forEach(ta => {\r\n        this.therapeuticAreaList.push(ta.name);\r\n      });\r\n    });\r\n  }\r\n\r\n  getdiseaseAndProducts(taName) {\r\n    this.metaService.getTherapeuticAreaMap().pipe(first()).subscribe(TA => {\r\n      TA.data.forEach(ta => {\r\n        if (taName === ta.name) {\r\n          this.productList = [];\r\n          this.diseaseList = [];\r\n          ta.products.forEach(prod => {\r\n            this.productList.push(prod.name);\r\n          });\r\n          ta.diseaseStates.forEach(disease => {\r\n            this.diseaseList.push(disease.name);\r\n          });\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  cancelQuiz() {\r\n    this.checkedList = [];\r\n    this.router.navigate(['/admin/quiz']);\r\n  }\r\n\r\n  onCheckboxChange(questionId, $event) {\r\n    if (this.checkedList.indexOf(questionId) > -1) {\r\n      this.checkedList.splice(this.checkedList.indexOf(questionId), 1);\r\n    } else {\r\n      this.checkedList.push(questionId);\r\n    }\r\n    console.log(this.checkedList);\r\n    this.questionCount = this.checkedList.length;\r\n  }\r\n\r\n  onSubmit() {\r\n    this.quizService.updateQuiz(this.model, this.checkedList).pipe(first()).subscribe(q => {\r\n      this.quizService.getQuiz().pipe(first()).subscribe(quizz => {\r\n        this.quiz = quizz.data;\r\n      });\r\n      this.checkedList = [];\r\n      this.router.navigate(['/admin/quiz']);\r\n      this.alertService.success('Successfully Updated.');\r\n      window.scroll(0, 0);\r\n    },\r\n      error => {\r\n        this.alertService.error(error);\r\n        window.scroll(0, 0);\r\n      });\r\n  }\r\n\r\n}","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FkbWluL2hvbWUvZWRpdC11c2VyL2VkaXQtdXNlci5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<app-admin-top-nav></app-admin-top-nav>\\n<main class=\\\"main_container\\\">\\n  <div class=\\\"container\\\">\\n      <div class=\\\"main_con_inner\\\">\\n    \\n\\n          <app-admin-side-nav></app-admin-side-nav>\\n\\n          <!-- right section  start -->\\n          <section class=\\\"right_panel\\\">\\n\\n<div class=\\\"users_detials2\\\">\\n  <div class=\\\"right_panel_inner border_dashed\\\">\\n      <div class=\\\"rph_header\\\">\\n          <div class=\\\"row\\\">\\n              <div class=\\\"col-sm-6 col-md-6 col-lg-6 rph_left\\\">\\n                  <h5>Users Details</h5>\\n              </div>\\n          </div>\\n      </div>\\n      <div class=\\\"right_panel_box2\\\">\\n          <form  [formGroup]=\\\"countryForm\\\" class=\\\" user_fileds\\\">\\n              <div class=\\\"row\\\">\\n                  <div class=\\\"col-sm-6 col-md-6 col-lg-6\\\">\\n                      <div class=\\\"form-group row\\\">\\n                        <div class=\\\"col-sm-4 col-md-4 col-lg-4\\\">\\n                          <label >First Name</label>\\n                        </div>\\n                        <div class=\\\"col-sm-8 col-md-8 col-lg-8\\\">\\n                          <input type=\\\"text\\\" class=\\\"form-control \\\"  formControlName=\\\"firstname\\\" id=\\\"firstname\\\"  [ngModel]=\\\"editUser.firstName\\\"  [ngClass]=\\\"{ 'is-invalid': edituserprofile && f.firstname.errors }\\\" name=\\\"firstname\\\" disabled >\\n                          <div *ngIf=\\\"edituserprofile && f.firstname.errors\\\" class=\\\"invalid-feedback\\\">\\n                            <div *ngIf=\\\"f.firstname.errors.required\\\">Firstname is required</div>\\n                            <div *ngIf=\\\"f.firstname.errors.minlength\\\">Firstname must be at least 3 characters</div>\\n                \\n                            \\n                        </div>\\n                        </div>\\n                      </div>\\n                      <div class=\\\"form-group row\\\">\\n                        <div class=\\\"col-sm-4 col-md-4 col-lg-4\\\">\\n                          <label >Last Name</label>\\n                        </div>\\n                          <div class=\\\"col-sm-8 col-md-8 col-lg-8\\\">\\n                          <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"lastnames\\\" id=\\\"lastnames\\\" [ngModel]=\\\"editUser.lastName\\\" name=\\\"lastnames\\\" disabled>\\n                        </div>\\n                      </div>\\n                      <div class=\\\"form-group row\\\">\\n                        <div class=\\\"col-sm-4 col-md-4 col-lg-4\\\">\\n                          <label >Email ID:</label>\\n                        </div>\\n                          <div class=\\\"col-sm-8 col-md-8 col-lg-8\\\">\\n                          <input type=\\\"email\\\" class=\\\"form-control\\\" formControlName=\\\"mail\\\" id=\\\"mail\\\" [ngModel]=\\\"editUser.email\\\"  [ngClass]=\\\"{ 'is-invalid': edituserprofile && f.mail.errors }\\\" name=\\\"mail\\\" disabled>\\n                        \\n                          <div *ngIf=\\\"edituserprofile && f.mail.errors\\\" class=\\\"invalid-feedback\\\">\\n                            <div *ngIf=\\\"f.mail.errors.required\\\">Firstname is required</div>\\n                            <div *ngIf=\\\"f.mail.errors.minlength\\\">Firstname must be at least 3 characters</div>\\n                \\n                            \\n                        </div>\\n\\n                        </div>\\n                      </div>\\n                      <div class=\\\"form-group row\\\">\\n                        <div class=\\\"col-sm-4 col-md-4 col-lg-4\\\">\\n                          <label>Title</label>\\n                        </div>\\n                          <div class=\\\"col-sm-8 col-md-8 col-lg-8\\\">\\n                          <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"title\\\" id=\\\"title\\\" [ngModel]=\\\"editUser.title\\\" name=\\\"title\\\" disabled>\\n                        </div>\\n                      </div>\\n\\n\\n                  </div>\\n                \\n                  <div class=\\\"col-sm-6 col-md-6 col-lg-6\\\">\\n                      <div class=\\\"form-group row\\\">\\n                        <div class=\\\"col-sm-4 col-md-4 col-lg-4\\\">\\n                          <label>Employee Type</label>\\n                        </div>\\n                          <div class=\\\"col-sm-8 col-md-8 col-lg-8\\\">\\n                          <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"etype\\\" id=\\\"etype\\\" [ngModel]=\\\"editUser.etype\\\" name=\\\"etype1\\\" disabled>\\n                        </div>\\n                      </div>\\n                      <div class=\\\"form-group row\\\">\\n                        <div class=\\\"col-sm-4 col-md-4 col-lg-4\\\">\\n                          <label>Country</label>\\n                        </div>\\n                        <div class=\\\"col-sm-8 col-md-8 col-lg-8\\\">\\n                            \\n                        \\n                            <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"homeCountry\\\" id=\\\"homeCountry\\\" [ngModel]=\\\"editUser.homeCountry\\\" name=\\\"homeCountry\\\" disabled>\\n                        </div>\\n                      </div>\\n                      <div class=\\\"form-group row\\\">\\n\\n                        <div class=\\\"col-sm-4 col-md-4 col-lg-4\\\">\\n                          <label>Status</label>\\n                        </div>\\n                          <div class=\\\"col-sm-8 col-md-8 col-lg-8\\\">\\n                          <div class=\\\"custom-switch custom-switch-label-onoff d-flex\\\">\\n                              <input class=\\\"custom-switch-input\\\" id=\\\"btn_05\\\"  formControlName=\\\"status\\\" [checked]=\\\"(editUser.status==true) ? false: true\\\"   (change) =\\\"userStatus($event,editUser?.id)\\\"   type=\\\"checkbox\\\">\\n                              <label class=\\\"custom-switch-btn\\\" for=\\\"btn_05\\\"></label>\\n                          </div>\\n                        </div>\\n                      </div>\\n                  </div>\\n\\n\\n                  \\n                  <div class=\\\"col-sm-12 col-md-12 col-lg-12 groups_maps\\\">\\n                    <div class=\\\"row\\\">\\n                      <div class=\\\"col-sm-6 col-md-6 col-lg-6\\\">\\n                        <h5>Roles</h5>\\n                      </div>\\n                       <div class=\\\"col-sm-6 col-md-6 col-lg-6\\\">\\n                        <h5 class=\\\"space_1\\\">Mappings</h5>\\n                      </div>\\n                        <div class=\\\" swipe_section\\\">\\n                     \\n                        <div class=\\\"swipe_boxes getvelue\\\">\\n                          <ul id=\\\"leftdata\\\" class=\\\"leftsid\\\"  *ngFor=\\\"let role of this.editUser.roles\\\">\\n                            <li class=\\\"lefttext\\\" (click)=\\\"pushData(role)\\\" [value]=\\\"role.id\\\">{{role.name}}</li>\\n                          </ul>\\n                        </div>\\n                        <div class=\\\"swipe_arrow\\\">\\n                          <div class=\\\"swipe_btn\\\">\\n                          <span class=\\\"arrow_1 clickarrow\\\"><img src=\\\"assets/images/arrow_1.png\\\"></span>\\n                          <span class=\\\"arrow_2 clickarrow\\\"><img src=\\\"assets/images/arrow_2.png\\\"></span>\\n                        </div>\\n                        </div>\\n                     \\n                      \\n                        <div class=\\\"swipe_boxes getvelue\\\">\\n                         <ul id=\\\"rightdata\\\" class=\\\"rightsid\\\" *ngFor=\\\"let role of editUser.userRoles\\\">\\n                          <li class=\\\"righttext\\\" (click)=\\\"pushUserRole(role)\\\" [value]=\\\"role.id\\\">{{role.name}}</li>\\n                          <!-- <li class=\\\"righttext\\\">{{}}</li> -->\\n                        </ul>\\n                      \\n                      \\n                      </div>\\n                      </div>\\n                  \\n                    </div>\\n\\n                </div>\\n              </div>\\n\\n          </form>\\n      </div>\\n  </div>\\n <div class=\\\"right_panel_inner border_dashed\\\">\\n    <div class=\\\"right_panel_box2\\\">\\n\\n  \\n\\n        <form class=\\\" user_fileds\\\" [formGroup]=\\\"editmanagerForm\\\" >\\n            <div class=\\\"row\\\">\\n                <div class=\\\"col-sm-6 col-md-6 col-lg-6\\\">\\n                    <div class=\\\"form-group row\\\">\\n                      <div class=\\\"col-sm-4 col-md-4 col-lg-4\\\">\\n                        <label>Manager Name</label>\\n                      </div>\\n                      <div class=\\\"col-sm-8 col-md-8 col-lg-8\\\">\\n\\n                        <select formControlName=\\\"managerNameForm\\\" [(ngModel)]=\\\"managername\\\" >\\n                            <option class=\\\"s-smal\\\"  [ngValue]=\\\"'none'\\\" disabled>Select Manager</option>\\n                      <option [ngValue]=\\\"manager\\\"  *ngFor=\\\"let manager of editUser.manager\\\" class=\\\"s-smal\\\">{{manager.name}}</option>\\n                  </select> \\n\\n                  \\n\\n                        <!-- <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"mname\\\" [(ngModel)]=\\\"editUser.manager.name\\\" name=\\\"mname\\\"> -->\\n                      </div>\\n                    </div>\\n                    <div class=\\\"form-group row\\\">\\n                      <div class=\\\"col-sm-4 col-md-4 col-lg-4\\\">\\n                        <label >Manager Email</label>\\n                      </div>\\n                      <div class=\\\"col-sm-8 col-md-8 col-lg-8\\\">\\n                          <input type=\\\"email\\\" class=\\\"form-control\\\" id=\\\"userEmail\\\" formControlName=\\\"managerEmail\\\" [ngModel]=\\\"managername.email\\\" name=\\\"memial\\\" disabled>\\n                      </div>\\n                    </div>\\n                    <div class=\\\"form-group row\\\">\\n                      <div class=\\\"col-sm-4 col-md-4 col-lg-4\\\">\\n                        <label >Regions of  Operation</label>\\n                      </div>\\n                      <div class=\\\"col-sm-8 col-md-8 col-lg-8\\\">\\n\\n                        <select id=\\\"gds-cr-one\\\" formControlName=\\\"userRegion\\\" (change)=\\\"regionSelect($event.target.value)\\\">\\n                          <option class=\\\"s-smal\\\"  [ngValue]=\\\"'none'\\\" disabled>Select Regions</option>\\n                      <option *ngFor=\\\"let regions of regionList\\\" value={{regions.item_id}} class=\\\"s-smal\\\">{{regions.item_text}}</option>\\n                 </select>\\n                      </div>\\n                    </div>\\n                    <div class=\\\"form-group row\\\">\\n                      <div class=\\\"col-sm-4 col-md-4 col-lg-4\\\">\\n                        <label>Country of Oparation</label>\\n                      </div>\\n\\n                      <div class=\\\"col-sm-8 col-md-8 col-lg-8\\\">\\n                          \\n                      <ng-multiselect-dropdown\\n                      [placeholder]=\\\"'Country of Operation'\\\"\\n                      [data]=\\\"countryOfOpa\\\"\\n                      [(ngModel)]=\\\"countryOf\\\"\\n                      [settings]=\\\"dropdownSettingsTaList\\\"\\n                      (onSelect)=\\\"countrySelect($event)\\\"\\n                      (onSelectAll)=\\\"countrySelectAll($event)\\\"\\n                      formControlName=\\\"countryList\\\" style=\\\"\\n                      color: #d9d9d9;\\\"                                        \\n                    ngDefaultControl>\\n                    </ng-multiselect-dropdown>\\n                    </div>\\n\\n                    </div>\\n                </div>\\n                <div class=\\\"col-sm-6 col-md-6 col-lg-6\\\">\\n                </div>\\n            </div>\\n\\n        </form>\\n    </div>\\n</div>\\n\\n\\n<div class=\\\"right_panel_inner\\\">\\n    <h4>Therapeutic Areas</h4>\\n    <br>\\n  <div class=\\\"right_panel_box2\\\">\\n      <form class=\\\" user_fileds\\\" [formGroup]=\\\"taForm\\\">\\n          <div class=\\\"row\\\">\\n              <div class=\\\"col-sm-6 col-md-6 col-lg-6\\\">\\n                  <div class=\\\"form-group row\\\">\\n                    <div class=\\\"col-sm-4 col-md-4 col-lg-4\\\">\\n                      <label>Therapeutic Area</label>\\n                    </div>\\n                    <div class=\\\"col-sm-8 col-md-8 col-lg-8\\\">\\n\\n                        <select id=\\\"gds-cr-one\\\" formControlName=\\\"therapeuticList\\\" (change)=\\\"onTAItemSelect($event.target.value)\\\">\\n                            <option class=\\\"s-smal\\\"  [ngValue]=\\\"'none'\\\" disabled>Select Therapeutic Area</option>\\n                        <option *ngFor=\\\"let regions of therputicAreaList\\\" value={{regions.item_id}} class=\\\"s-smal\\\">{{regions.item_text}}</option>\\n                    </select>\\n\\n                      <!-- <ng-multiselect-dropdown\\n                                          [placeholder]=\\\"'Therapeutic Area'\\\"\\n                                          [data]=\\\"therputicAreaList\\\"\\n                                          [(ngModel)]=\\\"therputicAreaItems\\\"\\n                                          [settings]=\\\"dropdownSettingsTaList\\\"\\n                                          (onSelect)=\\\"onTAItemSelect($event)\\\"\\n                                          (onSelectAll)=\\\"onTASelectAll($event)\\\"\\n                                          formControlName=\\\"therapeuticList\\\" style=\\\"\\n                                          color: #d9d9d9;\\\"                                        \\n                                        ngDefaultControl>\\n                                        </ng-multiselect-dropdown> -->\\n                        </div>\\n                  </div>\\n                  <div class=\\\"form-group row\\\">\\n                    <div class=\\\"col-sm-4 col-md-4 col-lg-4\\\">\\n                      <label>Products</label>\\n                    </div>\\n                    <div class=\\\"col-sm-8 col-md-8 col-lg-8\\\">\\n\\n                      <ng-multiselect-dropdown\\n                      [placeholder]=\\\"'Products'\\\"\\n                      [data]=\\\"productListTa\\\"\\n                      [(ngModel)]=\\\"productItemsTa\\\"\\n                      [settings]=\\\"dropdownSettingsTaList\\\"\\n                      (onSelect)=\\\"productSelect($event)\\\"\\n                      (onSelectAll)=\\\"onProductsTASelectAll($event)\\\"\\n                      formControlName=\\\"productList\\\" style=\\\"\\n                      color: #d9d9d9;\\\"                                        \\n                    ngDefaultControl>\\n                    </ng-multiselect-dropdown>\\n                        </div>\\n                  </div>\\n              </div>\\n              <div class=\\\"col-sm-6 col-md-6 col-lg-6\\\">\\n                  <div class=\\\"form-group row\\\">\\n                    <div class=\\\"col-sm-4 col-md-4 col-lg-4\\\">\\n                      <label >Disease State</label>\\n                    </div>\\n                    <div class=\\\"col-sm-8 col-md-8 col-lg-8\\\">\\n\\n                      <ng-multiselect-dropdown\\n                                          [placeholder]=\\\"'Disease State'\\\"\\n                                          [data]=\\\"diseaseListTA\\\"\\n                                          [(ngModel)]=\\\"diseaseItemsList\\\"\\n                                          [settings]=\\\"dropdownSettingsTaList\\\"\\n                                          (onSelect)=\\\"disTASelect($event)\\\"\\n                                          (onSelectAll)=\\\"disTASelectAll($event)\\\"\\n                                          formControlName=\\\"diseasestateList\\\" style=\\\"\\n                                          color: #d9d9d9;\\\"                                        \\n                                        ngDefaultControl>\\n                                        </ng-multiselect-dropdown>\\n                        </div>\\n                  </div> \\n              </div>\\n          \\n          </div>\\n      </form>\\n  </div>\\n</div>\\n\\n\\n <div class=\\\"right_panel_inner\\\">\\n   <h4>User Therapeutic Areas</h4>\\n    <div class=\\\"right_panel_box2\\\">\\n        <form class=\\\" user_fileds\\\" [formGroup]=\\\"taForm\\\">\\n            <div class=\\\"row\\\">\\n                <div class=\\\"col-sm-6 col-md-6 col-lg-6\\\">\\n                    <div class=\\\"form-group row\\\">\\n                      <div class=\\\"col-sm-4 col-md-4 col-lg-4\\\">\\n                        <label>Therapeutic Area</label>\\n                      </div>\\n                      <div class=\\\"col-sm-8 col-md-8 col-lg-8\\\">\\n                        <ng-multiselect-dropdown\\n                                            [placeholder]=\\\"'Therapeutic Area'\\\"\\n                                            [data]=\\\"dropdownList\\\"\\n                                            [(ngModel)]=\\\"selectedItems\\\"\\n                                            [settings]=\\\"dropdownSettingsTa\\\"\\n                                            (onSelect)=\\\"onItemSelect($event)\\\"\\n                                            (onSelectAll)=\\\"onSelectAll($event)\\\"\\n                                            formControlName=\\\"therapeutic\\\" style=\\\"\\n                                            color: #d9d9d9;\\\"                                        \\n                                          ngDefaultControl>\\n                                          </ng-multiselect-dropdown>\\n                          </div>\\n                    </div>\\n                    <div class=\\\"form-group row\\\">\\n                      <div class=\\\"col-sm-4 col-md-4 col-lg-4\\\">\\n                        <label>Products</label>\\n                      </div>\\n                      <div class=\\\"col-sm-8 col-md-8 col-lg-8\\\">\\n\\n                        <ng-multiselect-dropdown\\n                        [placeholder]=\\\"'Products'\\\"\\n                        [data]=\\\"productList\\\"\\n                        [(ngModel)]=\\\"productItems\\\"\\n                        [settings]=\\\"dropdownSettings\\\"\\n                        (onSelect)=\\\"productSelect($event)\\\"\\n                        (onSelectAll)=\\\"onProductsSelectAll($event)\\\"\\n                        formControlName=\\\"product\\\" style=\\\"\\n                        color: #d9d9d9;\\\"                                        \\n                      ngDefaultControl>\\n                      </ng-multiselect-dropdown>\\n                          </div>\\n                    </div>\\n                </div>\\n                <div class=\\\"col-sm-6 col-md-6 col-lg-6\\\">\\n                    <div class=\\\"form-group row\\\">\\n                      <div class=\\\"col-sm-4 col-md-4 col-lg-4\\\">\\n                        <label >Disease State</label>\\n                      </div>\\n                      <div class=\\\"col-sm-8 col-md-8 col-lg-8\\\">\\n\\n                        <ng-multiselect-dropdown\\n                                            [placeholder]=\\\"'Disease State'\\\"\\n                                            [data]=\\\"diseaseList\\\"\\n                                            [(ngModel)]=\\\"diseaseItems\\\"\\n                                            [settings]=\\\"dropdownSettings\\\"\\n                                            (onSelect)=\\\"diseaseSelect($event)\\\"\\n                                            (onSelectAll)=\\\"onDiseaseSelectAll($event)\\\"\\n                                            formControlName=\\\"diseasestate\\\" style=\\\"\\n                                            color: #d9d9d9;\\\"                                        \\n                                          ngDefaultControl>\\n                                          </ng-multiselect-dropdown>\\n                          </div>\\n                    </div> \\n                </div>\\n                \\n                <div class=\\\"col-sm-12 col-md-12 col-lg-12 groups_maps\\\">\\n                  <div class=\\\"row\\\">\\n                    <div class=\\\"col-sm-6 col-md-6 col-lg-6\\\">\\n                      <h5>Groups</h5>\\n                    </div>\\n                     <div class=\\\"col-sm-6 col-md-6 col-lg-6\\\">\\n                      <h5 class=\\\"space_1\\\">Mappings</h5>\\n                    </div>\\n                      <div class=\\\" swipe_section\\\">\\n                   \\n                      <div class=\\\"swipe_boxes getvelue\\\">\\n                        <ul id=\\\"leftdata\\\" class=\\\"leftsid\\\"  *ngFor=\\\"let group of editUser.groups\\\">\\n                          <li class=\\\"lefttext\\\" (click)=\\\"pushGroupData(group)\\\" [value]=\\\"group.id\\\">{{group.name}}</li>\\n                        </ul>\\n                      </div>\\n                      <div class=\\\"swipe_arrow\\\">\\n                        <div class=\\\"swipe_btn\\\">\\n                        <span class=\\\"arrow_1 clickarrow\\\"><img src=\\\"assets/images/arrow_1.png\\\"></span>\\n                        <span class=\\\"arrow_2 clickarrow\\\"><img src=\\\"assets/images/arrow_2.png\\\"></span>\\n                      </div>\\n                      </div>\\n                   \\n                    \\n                      <div class=\\\"swipe_boxes getvelue\\\">\\n                       <ul id=\\\"rightdata\\\" class=\\\"rightsid\\\" *ngFor=\\\"let userGroup of editUser.userGroups\\\">\\n                        <li class=\\\"righttext\\\" (click)=\\\"pushUserGroup(userGroup)\\\" [value]=\\\"userGroup.id\\\">{{userGroup.name}}</li>\\n                        <!-- <li class=\\\"righttext\\\">{{}}</li> -->\\n                      </ul>\\n                    \\n                    \\n                    </div>\\n                    </div>\\n                \\n                  </div>\\n\\n              </div>\\n            </div>\\n            <div class=\\\"buttons\\\">\\n              <button type=\\\"button\\\" class=\\\" btn-small\\\" routerLink=\\\"/admin\\\">Cancel</button>\\n              <button type=\\\"button\\\" class=\\\" btn-small bnt_blue\\\" (click)=\\\"editUserProfiles()\\\" >Apply</button>\\n            </div>\\n\\n        </form>\\n    </div>\\n</div>\\n</div> \\n\\n</section> <!-- Right Panel End Here -->\\n</div>\\n</div>\\n</main>\\n\\n\\n\\n\\n   \\n\\n\\n\\n\\n\"","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { UserService } from '../../services/userservices';\nimport { AlertService } from '../../../services';\nimport { EditUser } from '../../model/EditUser'\n\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport * as $ from 'jquery'\nimport { User } from 'src/app/models';\n\nimport { EditUserName } from '../../model/editUserName';\nimport { ManagerDto } from '../../model/managerDTO';\nimport { TaDto } from '../../model/taDto';\nimport { Country } from '../../model';\n@Component({\n  selector: 'app-edit-user',\n  templateUrl: './edit-user.component.html',\n  styleUrls: ['./edit-user.component.css']\n})\nexport class EditUserComponent implements OnInit {\n  currentUser: User;\n  editForm: FormGroup;\n  taForm: FormGroup;\n  edituserprofile:Boolean=false;\n  userstatus:boolean=false;\n  countryName: any;\n  editmanagerForm: FormGroup;\n  editUser: EditUser = new EditUser();\n  countrys: string = \"\";\n  managerEmail: string = \"\";\n  countryForm: FormGroup;\n  selectLanguage: String;\n  dropdownList: any = [];\n  regionList: any = [];\n  therputicAreaList: any = [];\n  productList: any = [];\n  productListTa:any=[];\n  countryOfOpa:any=[];\n  listPustProduct:Array<any>=[]\n  productItems = [];\n  diseaseList: any = [];\n  diseaseListTA:any=[];\n  country:any={id:0,name:\"\",product:[],disState:[]};\n  diseaseItems = [];\n  diseaseItemsList=[];\n  managername: any = { id: '', name: '', email: '' };\n  selectedItems = [];\n  therputicAreaItems=[];\n  productItemsTa=[];\n  countryOf=[];\n  services = {};\n  dropdownSettings = {};\n  dropdownSettingsTa = {};\n  dropdownSettingsTaList = {};\n  dropdownListProduct = [];\n  selectedItemsProduct = [];\n  dropdownSettingsProduct = {};\n  roles: Object[] = [{ id: 0, name: \"\" }];\n  region: [\n    { id: 0, name: \"\" }\n  ];\n  status=[];\n\n  constructor(private fb: FormBuilder, private route: ActivatedRoute, private formBuilder: FormBuilder, private userservice: UserService, private alertService: AlertService) {\n    this.currentUser = JSON.parse(localStorage.getItem('currentUser'));\n    this.dropdownSettings = {\n      singleSelection: false,\n      idField: 'item_id',\n      textField: 'item_text',\n      selectAllText: 'Select All',\n      unSelectAllText: 'UnSelect All',\n      itemsShowLimit: 3,\n      allowSearchFilter: true\n    };\n    this.dropdownSettingsTaList = {\n      singleSelection: false,\n      idField: 'item_id',\n      textField: 'item_text',\n      selectAllText: 'Select All',\n      unSelectAllText: 'UnSelect All',\n      itemsShowLimit: 20,\n      allowSearchFilter: true\n    };\n\n    this.dropdownSettingsTa = {\n      singleSelection: false,\n      idField: 'item_id',\n      textField: 'item_text',\n      selectAllText: 'Select All',\n      unSelectAllText: 'UnSelect All',\n      itemsShowLimit: 20,\n      allowSearchFilter: true\n    };\n\n    this.dropdownSettingsProduct = {\n      singleSelection: false,\n      idField: 'item_id',\n      textField: 'item_text',\n      selectAllText: 'Select All',\n      unSelectAllText: 'UnSelect All',\n      itemsShowLimit: 3,\n      allowSearchFilter: true\n    };\n    this.route.params.subscribe(params =>\n      this.userservice.editUser(Number(params['id'])).pipe().subscribe(users => {\n       console.log(users.data);\n        this.editUser = users.data;\n        this.userstatus=this.editUser.status;\n        this.dropdownList = this.editUser.item; \n        this.selectedItems = this.dropdownList;\n        this.productList = this.editUser.product;\n        this.productItems = this.productList;\n        this.managername = this.editUser.manager[0];\n        this.countryName = this.editUser.country[0];\n        this.diseaseList = this.editUser.diseasestate;\n        this.diseaseItems = this.diseaseList;\n        this.countryOfOpa=this.editUser.country\n        this.countryOf= this.countryOfOpa;\n      //  console.log(JSON.stringify(this.editUser.country));\n        for (var i = this.editUser.roles.length - 1; i >= 0; i--) {\n          for (var j = 0; j < this.editUser.userRoles.length; j++) {\n            if (this.editUser.roles[i] && (this.editUser.roles[i]['name'] === this.editUser.userRoles[j]['name'])) {\n              this.editUser.roles.splice(i, 1);\n            }\n          }\n        }\n        this.therputicAreaList=this.editUser.therapeuticArea;\n        this.regionList=this.editUser.region;\n   // alert(JSON.stringify(this.regionList));\n        for (var i = this.editUser.groups.length - 1; i >= 0; i--) {\n          for (var j = 0; j < this.editUser.userGroups.length; j++) {\n            if (this.editUser.groups[i] && (this.editUser.groups[i]['name'] === this.editUser.userGroups[j]['name'])) {\n              this.editUser.groups.splice(i, 1);\n            }\n          }\n        }\n      },\n        error => {\n          this.alertService.error(error);\n        }\n      )\n    )\n  }\n\n\n  ngOnInit() {\n    this.createForm();\n  }\n\n  pushUserRole(role: Country) {\n    this.editUser.roles.push(role);\n    this.editUser.userRoles = this.editUser.userRoles.filter((ele) => { return ele['name'] != role.name; });\n  }\n\n  pushData(role: Country) {\n    this.editUser.userRoles.push(role);\n    this.editUser.roles = this.editUser.roles.filter((ele) => { return ele['name'] != role.name; });\n  }\n\n  pushGroupData(group: Country) {\n    this.editUser.userGroups.push(group);\n    this.editUser.groups = this.editUser.groups.filter((ele) => { return ele['name'] != group.name; });\n\n  }\n\n  pushUserGroup(userGroup: Country) {\n    this.editUser.groups.push(userGroup);\n    this.editUser.userGroups = this.editUser.userGroups.filter((ele) => { return ele['name'] != userGroup.name; });\n  }\n\n  onItemSelect(item: any) {\n    console.log(item);\n  }\n\n\n  onTAItemSelect(item: Number) {\n  this.taForm.value.therapeutic.push(this.editUser.therapeuticArea.find(x => x.item_id == item));\n    this.productListTa=this.editUser.therapeuticArea.find(x => x.item_id == item).product;\n    this.diseaseListTA=this.editUser.therapeuticArea.find(x => x.item_id == item).disState;\n  }\n\n\n  regionSelect(item: Number) {\n\n    this.countryOfOpa=this.editUser.region.find(x=> x.item_id ==item).country\n  //  / alert(JSON.stringify(this.countryOfOpa));\n   \n    }\n\n // ;\n  productTASelect(item: any) {\n    this.taForm.value.product.push(item);\n    \n  }\n\n  disTASelect(item: any) {\n    this.taForm.value.diseasestate.push(item);\n    \n  }\n\n  disTASelectAll(items: Object[]) {\n    items.forEach(ele=>{\n      this.taForm.value.diseasestate.push(ele);\n    })\n  }\n\n  onProductsTASelectAll(items: Object[]) {\n    items.forEach(ele=>{\n      this.taForm.value.product.push(ele);\n    })\n  }\n\n  countrySelectAll(items: Object[]) {\n   \n  }\n\n// this.taForm.value.diseasestate.push(element);\n  productSelect(item: any) {\n  \n  }\n  countrySelect(item: any) {\n  \n  }\n  diseaseSelect(item: any) {\n  }\n  onSelectAll(items: any) {\n  }\n\n  onProductsSelectAll(items: any) {\n  }\n\n  onDiseaseSelectAll(items: any) {\n  }\n\n  get f() { return this.countryForm.controls; }\n  createForm() {\n\n    this.countryForm = this.formBuilder.group({\n      firstname: ['',  [Validators.required,Validators.minLength(3)]],\n      homeCountry:[''],\n      lastnames: [''],\n      status:[],\n      mail: ['',  [Validators.required,Validators.email]],\n      title: [''],\n      etype: ['']\n     // countryControl: ['', Validators.required],\n\n\n    });\n\n    this.taForm = this.formBuilder.group({\n      therapeutic: [],\n      therapeuticList: [],\n      diseasestateList:[],\n      productList:[],\n      diseasestate: [],\n      product: [],\n    });\n    this.editmanagerForm = this.formBuilder.group({\n      managerEmail: ['', Validators.required],\n      userRegion:[''],\n      countryList:[],\n      managerNameForm: ['', Validators.required],\n    });\n\n  }\n  customComparator: () => {}\n\n  onSelect(countryid: any) {\n\n  }\n\n  editUserProfiles() {\n    this.edituserprofile=true;\n    if (this.countryForm.invalid) {\n      return;\n    }\n\n    if (this.editmanagerForm.invalid) {\n      return;\n    }\n    \n  \n  \n\n    var taDto = new TaDto(this.taForm.value.diseasestate, this.taForm.value.product, this.taForm.value.therapeutic);\n    var editUserName = new EditUserName(\n      this.countryForm.value.countryControl,\n      this.countryForm.value.etype,\n      this.countryForm.value.firstname,\n      this.countryForm.value.lastnames,\n      this.countryForm.value.mail,\n      this.countryForm.value.title,\n      this.userstatus,\n        this.countryForm.value. homeCountry,\n      this.editmanagerForm.value.countryList\n    );\n\n    var manager = new ManagerDto(\n      this.editmanagerForm.value.managerNameForm.id,\n      this.editmanagerForm.value.managerNameForm.name,\n      this.editmanagerForm.value.managerNameForm.email\n    );\n//alertService\n    this.userservice.editUserService(this.editUser.id, editUserName, manager, taDto, this.editUser.userRoles,this.editUser.userGroups).pipe().subscribe(\n\n      data => {\n       \n       // location.reload();\n        this.alertService.success(data.data);\n        window.scroll(0,0);\n        \n    },\n    error => {\n      this.alertService.error(error);\n      window.scroll(0,0);\n    }\n\n    );\n\n    \n\n  }\n\n  userStatus($event,Id:number){\n       \n    if($event.target.checked==false){\n      this.userstatus=true;\n    }\n    if($event.target.checked==true){\n      this.userstatus=false;\n    }\n\n  }\n\n\n}\n","﻿export * from './edit-user.component';","module.exports = \"* {\\r\\n\\tfont-size: 1.3rem;\\r\\n}\\r\\n.wmd-view-topscroll, .wmd-view {\\r\\n    overflow-x: auto;\\r\\n    overflow-y: hidden;\\r\\n}\\r\\n.wmd-view-topscroll::-webkit-scrollbar-track, .wmd-view::-webkit-scrollbar-track\\r\\n{\\r\\n\\t-webkit-box-shadow: inset 0 0 6px rgba(0,0,0,0.3);\\r\\n\\tborder-radius: 10px;\\r\\n\\tbackground-color: #F5F5F5;\\r\\n}\\r\\n.wmd-view-topscroll::-webkit-scrollbar, .wmd-view::-webkit-scrollbar\\r\\n{\\r\\n    width: 6px;\\r\\n    height: 6px;\\r\\n\\tbackground-color: #F5F5F5;\\r\\n}\\r\\n.wmd-view-topscroll::-webkit-scrollbar-thumb, .wmd-view::-webkit-scrollbar-thumb\\r\\n{\\r\\n\\tborder-radius: 10px;\\r\\n\\t-webkit-box-shadow: inset 0 0 6px rgba(0,0,0,.3);\\r\\n\\tbackground-color: #555;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYWRtaW4vaG9tZS9ncm91cC1tYXBwaW5nL2dyb3VwLm1hcHBpbmcuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtDQUNDLGlCQUFpQjtBQUNsQjtBQUNBO0lBQ0ksZ0JBQWdCO0lBQ2hCLGtCQUFrQjtBQUN0QjtBQUNBOztDQUVDLGlEQUFpRDtDQUNqRCxtQkFBbUI7Q0FDbkIseUJBQXlCO0FBQzFCO0FBRUE7O0lBRUksVUFBVTtJQUNWLFdBQVc7Q0FDZCx5QkFBeUI7QUFDMUI7QUFFQTs7Q0FFQyxtQkFBbUI7Q0FDbkIsZ0RBQWdEO0NBQ2hELHNCQUFzQjtBQUN2QiIsImZpbGUiOiJzcmMvYXBwL2FkbWluL2hvbWUvZ3JvdXAtbWFwcGluZy9ncm91cC5tYXBwaW5nLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIqIHtcclxuXHRmb250LXNpemU6IDEuM3JlbTtcclxufVxyXG4ud21kLXZpZXctdG9wc2Nyb2xsLCAud21kLXZpZXcge1xyXG4gICAgb3ZlcmZsb3cteDogYXV0bztcclxuICAgIG92ZXJmbG93LXk6IGhpZGRlbjtcclxufVxyXG4ud21kLXZpZXctdG9wc2Nyb2xsOjotd2Via2l0LXNjcm9sbGJhci10cmFjaywgLndtZC12aWV3Ojotd2Via2l0LXNjcm9sbGJhci10cmFja1xyXG57XHJcblx0LXdlYmtpdC1ib3gtc2hhZG93OiBpbnNldCAwIDAgNnB4IHJnYmEoMCwwLDAsMC4zKTtcclxuXHRib3JkZXItcmFkaXVzOiAxMHB4O1xyXG5cdGJhY2tncm91bmQtY29sb3I6ICNGNUY1RjU7XHJcbn1cclxuXHJcbi53bWQtdmlldy10b3BzY3JvbGw6Oi13ZWJraXQtc2Nyb2xsYmFyLCAud21kLXZpZXc6Oi13ZWJraXQtc2Nyb2xsYmFyXHJcbntcclxuICAgIHdpZHRoOiA2cHg7XHJcbiAgICBoZWlnaHQ6IDZweDtcclxuXHRiYWNrZ3JvdW5kLWNvbG9yOiAjRjVGNUY1O1xyXG59XHJcblxyXG4ud21kLXZpZXctdG9wc2Nyb2xsOjotd2Via2l0LXNjcm9sbGJhci10aHVtYiwgLndtZC12aWV3Ojotd2Via2l0LXNjcm9sbGJhci10aHVtYlxyXG57XHJcblx0Ym9yZGVyLXJhZGl1czogMTBweDtcclxuXHQtd2Via2l0LWJveC1zaGFkb3c6IGluc2V0IDAgMCA2cHggcmdiYSgwLDAsMCwuMyk7XHJcblx0YmFja2dyb3VuZC1jb2xvcjogIzU1NTtcclxufSJdfQ== */\"","module.exports = \"\\r\\n \\r\\n<app-admin-top-nav></app-admin-top-nav>\\r\\n<router-outlet></router-outlet>\\r\\n    <!-- Page section start -->\\r\\n    <main class=\\\"main_container\\\">\\r\\n        <div class=\\\"container\\\">\\r\\n            <div class=\\\"main_con_inner\\\">\\r\\n          \\r\\n\\r\\n                <app-admin-side-nav></app-admin-side-nav>\\r\\n\\r\\n                <!-- right section  start -->\\r\\n                <section class=\\\"right_panel\\\">\\r\\n                       <!--------- Add Groups Start Here ---------->\\r\\n<div class=\\\"addgroup hide_tab active\\\" id=\\\"pop_2\\\">\\r\\n    \\r\\n    \\r\\n    <div class=\\\"right_panel_inner\\\">\\r\\n          <div class=\\\"rph_header\\\">\\r\\n              <div class=\\\"row\\\">\\r\\n                  <div class=\\\"col-sm-6 col-md-6 col-lg-6 rph_left user_buts\\\">\\r\\n                    <form class=\\\"assets_tabs\\\">\\r\\n                      <div class=\\\"custom-control custom-radio custom-control-inline\\\">\\r\\n                        <input type=\\\"radio\\\" class=\\\"custom-control-input asset_nav\\\" id=\\\"customRadio\\\" name=\\\"buttn\\\" value=\\\"1\\\" data-attr=\\\"inputtab_1\\\" checked (click)=\\\"assetNavClick($event)\\\">\\r\\n                        <label class=\\\"custom-control-label asset_nav\\\" for=\\\"customRadio\\\">Users</label>\\r\\n                      </div>\\r\\n\\r\\n                      <div class=\\\"custom-control custom-radio custom-control-inline\\\">\\r\\n                        <input type=\\\"radio\\\" class=\\\"custom-control-input asset_nav\\\" id=\\\"customRadio2\\\" name=\\\"buttn\\\" value=\\\"2\\\" data-attr=\\\"inputtab_2\\\" (click)=\\\"assetNavClick($event)\\\">\\r\\n                        <label class=\\\"custom-control-label\\\" for=\\\"customRadio2\\\">Assets</label>\\r\\n                      </div>\\r\\n                    </form> \\r\\n                  </div>\\r\\n                  <div class=\\\"col-sm-6 col-md-6 col-lg-6\\\" >\\r\\n                      <div class=\\\"rph_right\\\">\\r\\n                          <form class=\\\"serach_form d-flex\\\">\\r\\n                            <div class=\\\"serach_box\\\"><input type=\\\"text\\\" placeholder=\\\"Search..\\\"></div>\\r\\n                              <button type=\\\"button\\\" class=\\\"search_btn\\\"><i class=\\\"fas fa-search\\\"></i></button>\\r\\n                              \\r\\n                          </form>\\r\\n                      </div>\\r\\n                  </div>\\r\\n              </div>\\r\\n          </div>\\r\\n          <div class=\\\"right_panel_box group_table\\\">\\r\\n                <!-----Groups Users Panesl Start Here --->\\r\\n            <div class=\\\"groups_users asset_tab \\\" [ngClass]=\\\"{'active': userNav_show}\\\"  id=\\\"inputtab_1\\\" >\\r\\n              <form class=\\\"user_fileds \\\">\\r\\n                 <div class=\\\"filter_section\\\">\\r\\n                      \\r\\n                        <select class=\\\"custom-select slects_option mt-4 mb-3\\\" (change)=\\\"shareGrpDetails($event.target.value)\\\" >\\r\\n                          <option *ngFor=\\\"let group of groups ; index as i\\\" [selected]=\\\"grpName === group.name\\\" [value]=\\\"group.id\\\">{{group.name}}</option>                          \\r\\n                        </select>                                          \\r\\n                 </div>\\r\\n                 <div class=\\\"wmd-view-topscroll\\\">\\r\\n                  <div class=\\\"scroll-div1\\\">\\r\\n                  </div>\\r\\n                </div>\\r\\n                 <div class=\\\"table-responsive wmd-view\\\">\\r\\n                    <table class=\\\"table\\\">\\r\\n                        <thead>\\r\\n                            <tr>\\r\\n                                <th>First Name</th>\\r\\n                                <th>Email ID</th>\\r\\n                                <th >Roles</th>\\r\\n                                <th class=\\\"text-center\\\">Therapeutic Area</th>\\r\\n                                <th class=\\\"text-center\\\">Action</th>\\r\\n                            </tr>\\r\\n                        </thead>\\r\\n                        <tbody>\\r\\n                            <!-- <ng-container  > -->\\r\\n                            <tr *ngFor=\\\"let user of userResultList ; index as i\\\">\\r\\n                                  <td>{{user.firstName}}</td>\\r\\n                                  <td>{{user.emailID}}</td>\\r\\n                                  <td>{{user.roleName != null ? user.roleName: \\\"\\\"}}</td>\\r\\n                                  <td><div *ngFor=\\\"let ta of user.therapeuticArea;\\\">{{ta.name+\\\",\\\"}}</div></td>\\r\\n                                  <td class=\\\"text-center checkbox_square\\\">\\r\\n                                      <div class=\\\"custom-control custom-checkbox \\\">\\r\\n                                        <input type=\\\"checkbox\\\" class=\\\"custom-control-input\\\" id=\\\"{{'customCheck'+i}}\\\" value=\\\"{{user.id}}\\\" \\r\\n                                        [name]=\\\"user.firstName\\\" (change)=\\\"addToUserList(user.id,$event)\\\" [checked]=\\\"userIDList.indexOf(user.id) > -1 ? true: false\\\">\\r\\n                                        <label class=\\\"custom-control-label\\\" for=\\\"{{'customCheck'+i}}\\\"></label>\\r\\n                                      </div>\\r\\n                                  </td>\\r\\n                            </tr>                            \\r\\n                          <!-- </ng-container>   -->                            \\r\\n                        </tbody>\\r\\n                    </table>\\r\\n                 </div>\\r\\n                 <div class=\\\"buttons row\\\">\\r\\n                    <button type=\\\"button\\\" class=\\\" btn-small\\\" (click)=\\\"cancelGroupMapping()\\\">Cancel</button>\\r\\n                    <button type=\\\"button\\\" class=\\\" btn-small bnt_blue\\\" (click)=\\\"userGroupMap(grpId)\\\">Map</button>\\r\\n                 </div>\\r\\n              </form>\\r\\n            </div> <!----- Groups Users Panesl End Here ----->\\r\\n\\r\\n\\r\\n              <!----- Groups Assets Panesl Start Here ----->\\r\\n            <div class=\\\"groups_assets asset_tab\\\"  [ngClass]=\\\"{'active': assetNav_show}\\\" id=\\\"inputtab_2\\\" *ngIf=\\\"assetNav_show\\\">\\r\\n              \\r\\n                 <div class=\\\"filter_section\\\">\\r\\n                        <select class=\\\"custom-select slects_option\\\" (change)=\\\"shareGrpDetails($event.target.value)\\\">\\r\\n                          <option *ngFor=\\\"let group of groups ; index as i\\\" [selected]=\\\"grpName === group.name\\\" [value]=\\\"group.id\\\">{{group.name}}</option>\\r\\n                        </select>                                          \\r\\n                 </div>\\r\\n               \\r\\n                <div class=\\\"applyFilers mt-4 \\\" name=\\\"domain\\\">\\r\\n                  <!-- <form name=\\\"form\\\"> -->\\r\\n                    <select class=\\\"custom-select slects_option\\\"  #assetType (change)=\\\"getThearpeuticAreas($event.target.value)\\\" >\\r\\n                          <option selected=\\\"\\\" value = \\\"0\\\">Select AT’s</option>\\r\\n                          <option *ngFor=\\\"let assetType of assetTypes ; index as i\\\" [value]=\\\"assetType.id\\\">{{assetType.userName}}</option>\\r\\n                    </select>\\r\\n                    <select class=\\\"custom-select slects_option\\\" #ta  (change)=\\\"getdiseaseAndProducts($event.target.value)\\\">\\r\\n                        <option selected=\\\"\\\" value = \\\"0\\\">Select TA’s</option>\\r\\n                        <option *ngFor=\\\"let ta of therapeuticAreaMap | keyvalue\\\" [value]=\\\"ta.key\\\">{{ta.value}}</option>\\r\\n                        <!-- <option *ngFor=\\\"let ta of therapeuticAreaList ; index as i\\\" [value]=\\\"ta\\\">{{ta}}</option> -->\\r\\n                    </select>    \\r\\n                    <select class=\\\"custom-select slects_option\\\" #disease >\\r\\n                        <option selected=\\\"\\\" value = \\\"0\\\">Select DS’s</option>\\r\\n                        <!-- <option *ngFor=\\\"let dis of diseaseList ; index as i\\\" [value]=\\\"dis\\\">{{dis}}</option>                         -->\\r\\n                        <option *ngFor=\\\"let dis of diseaseMap | keyvalue\\\" [value]=\\\"dis.key\\\">{{dis.value}}</option>\\r\\n                    </select>    \\r\\n                    <select class=\\\"custom-select slects_option\\\" #product>\\r\\n                        <option selected=\\\"\\\" value = \\\"0\\\">Select Product</option>\\r\\n                        <option *ngFor=\\\"let prod of productMap | keyvalue\\\" [value]=\\\"prod.key\\\">{{prod.value}}</option>\\r\\n                        <!-- <option *ngFor=\\\"let prod of productList ; index as i\\\" [value]=\\\"prod\\\">{{prod}}</option> -->\\r\\n                    </select> \\r\\n                    <button type=\\\"submit\\\" class=\\\" btn-small bnt_green\\\" (click)=\\\"applyFIlter(assetType.value, ta.value, disease.value, product.value)\\\">Apply</button>  \\r\\n                  <!-- </form>    -->\\r\\n                </div>\\r\\n                <form class=\\\"user_fileds\\\" (ngSubmit)=\\\"userAssetMap(grpId)\\\">\\r\\n                <div class=\\\"table-responsive\\\">                    \\r\\n                  <table class=\\\"table \\\">\\r\\n                      <thead>\\r\\n                          <tr>\\r\\n                              <th>Asset Name</th>\\r\\n                              <th>Asset Type </th>\\r\\n                              <th>Therapeutic Area</th>\\r\\n                              <th class=\\\"text-center\\\">Disease State</th>\\r\\n                              <th class=\\\"text-center\\\">Products</th>\\r\\n                              <th class=\\\"text-center\\\">Action</th>\\r\\n                          </tr>\\r\\n                      </thead>\\r\\n                      <tbody *ngIf=\\\"fullData\\\">\\r\\n                          <tr *ngFor=\\\"let asset of assets ; index as i\\\"> <!--class=\\\"active\\\"-->\\r\\n                              <td >{{asset.title}}</td>                             \\r\\n                              <td >{{asset.assetType != null ? asset.assetType.userName: \\\"\\\"}}</td>\\r\\n                              <td >{{asset.therapeuticArea != null ?asset.therapeuticArea.name:\\\"\\\"}}</td>\\r\\n                              <td >{{asset.diseaseState != null ? asset.diseaseState.name:\\\"\\\"}}</td>\\r\\n                              <td >{{asset.product != null ?asset.product.name:\\\"\\\"}}</td>\\r\\n                              \\r\\n                              <!-- <td class=\\\"text-center\\\"><span class=\\\"td_filed\\\"></span></td>\\r\\n                              <td class=\\\"text-center\\\"><span class=\\\"td_filed\\\"></span></td> -->\\r\\n                              <td class=\\\"text-center checkbox_square\\\">\\r\\n                                  <div class=\\\"custom-control custom-checkbox \\\">\\r\\n                                    <input type=\\\"checkbox\\\" class=\\\"custom-control-input\\\" id=\\\"{{'customCheck0'+i}}\\\"  value=\\\"{{asset.id}}\\\" \\r\\n                                    (change)=\\\"addToAssetList(asset.id,$event)\\\" [checked]=\\\"assetIDList.indexOf(asset.id) > -1 ? true: false\\\">\\r\\n                                    <label class=\\\"custom-control-label\\\" for=\\\"{{'customCheck0'+i}}\\\"></label>\\r\\n                                  </div>\\r\\n                              </td>\\r\\n                          </tr>   \\r\\n                      </tbody>\\r\\n\\r\\n                      <tbody *ngIf=\\\"filterData\\\">\\r\\n                        <tr *ngIf=\\\"filterData&&resultList.length==0\\\"><td colspan=\\\"6\\\" style=\\\"text-align:center;color: red\\\">{{message}}</td></tr>\\r\\n                        <tr *ngFor=\\\"let asset of resultList ; index as i\\\"> <!--class=\\\"active\\\"-->\\r\\n                            <td >{{asset.title}}</td>                             \\r\\n                            <td >{{asset.assetType != null ? asset.assetType.userName: \\\"\\\"}}</td>\\r\\n                            <td >{{asset.therapeuticArea != null ?asset.therapeuticArea.name:\\\"\\\"}}</td>\\r\\n                            <td >{{asset.diseaseState != null ? asset.diseaseState.name:\\\"\\\"}}</td>\\r\\n                            <td >{{asset.product != null ?asset.product.name:\\\"\\\"}}</td>\\r\\n                            \\r\\n                            <!-- <td class=\\\"text-center\\\"><span class=\\\"td_filed\\\"></span></td>\\r\\n                            <td class=\\\"text-center\\\"><span class=\\\"td_filed\\\"></span></td> -->\\r\\n                            <td class=\\\"text-center checkbox_square\\\">\\r\\n                                <div class=\\\"custom-control custom-checkbox \\\">\\r\\n                                  <input type=\\\"checkbox\\\" class=\\\"custom-control-input\\\" id=\\\"{{'customCheck0'+i}}\\\"  value=\\\"{{asset.id}}\\\" \\r\\n                                  (change)=\\\"addToAssetList(asset.id,$event)\\\" [checked]=\\\"assetIDList.indexOf(asset.id) > -1 ? true: false\\\" >\\r\\n                                  <label class=\\\"custom-control-label\\\" for=\\\"{{'customCheck0'+i}}\\\"></label>\\r\\n                                </div>\\r\\n                            </td>\\r\\n                        </tr>   \\r\\n                    </tbody>\\r\\n                  </table>\\r\\n                </div>\\r\\n                 <div class=\\\"buttons row\\\">\\r\\n                    <button type=\\\"button\\\" class=\\\" btn-small\\\" (click)=\\\"cancelGroupMapping()\\\">Cancel</button>\\r\\n                    <button class=\\\" btn-small bnt_blue\\\">Map</button>\\r\\n                 </div>\\r\\n              </form>\\r\\n            </div><!----- Groups Assets Panesl End Here ---->\\r\\n\\r\\n          </div>\\r\\n    </div>\\r\\n </div>  \\r\\n  <!---- Add Groups  End Here ---->\\r\\n\\r\\n\\r\\n                     \\r\\n                      \\r\\n\\r\\n\\r\\n                </section> <!-- Right Panel End Here -->\\r\\n            </div>\\r\\n        </div>\\r\\n    </main>\\r\\n    <footer class=\\\"fot_main\\\">\\r\\n      <div class=\\\"container\\\">\\r\\n        <div class=\\\"fot_inner\\\">\\r\\n          <div class=\\\"row\\\"><div class=\\\"col-sm-12 col-md-12\\\"><p>© ALLERGAN 2019</p></div></div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </footer>\\r\\n  \"","import { Component, OnInit } from '@angular/core';\r\nimport { first } from 'rxjs/operators';\r\nimport { GroupService } from '../../services/groupservice';\r\nimport { UserService } from '../../services/userservices';\r\nimport { sharedservice } from '../../services/sharedservice';\r\nimport { MetaDataService } from '../../services/metadataService';\r\nimport { FormBuilder } from '@angular/forms';\r\nimport { AlertService } from 'src/app/services';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-admin-group-mapping',\r\n  templateUrl: './group.mapping.component.html',\r\n  styleUrls: ['./group.mapping.component.css']\r\n})\r\nexport class GroupMappingComponent implements OnInit {\r\n  userNav_show : boolean = true;\r\n  assetNav_show : boolean = false;\r\n  fullData: boolean = true;\r\n  filterData :  boolean = false;\r\n  \r\n  groups:  [{id:0,name:\"\",description:\"\",status:false}];\r\n  users:  [{id:0,firstName:\"\",emailID:\"\",status:false, roleName:\"\"}];\r\n  assetTypes : [{id:0, userName:\"\"}];\r\n  assets: [{id:0, userName:\"\", assetType:{id:0, userName:\"\"}, therapeuticArea:{id:0, name:\"\"}, diseaseState:{id:0, name:\"\"}, product:{id:0, name:\"\"} }];\r\n\r\n  grpName: string;\r\n  grpId: number;\r\n  userIDList: Array<number> = [];\r\n  assetIDList: Array<number> = [];\r\n \r\n  // therapeuticAreaList: Array<string> = [];\r\n  // diseaseList: Array<string> = [];\r\n  // productList: Array<string> = [];\r\n\r\n  therapeuticAreaMap = new Map();\r\n  diseaseMap= new Map();\r\n  productMap= new Map();\r\n\r\n  resultList: Array<Object> = [];\r\n  mappedUserList: Array<any> = []; \r\n\r\n  // mappedUserIDs : Array<number> = [];\r\n\r\n  userResultList: Array<Object> = [];\r\n  message:string=\"\";\r\n\r\n  constructor(\r\n    private groupService:GroupService,\r\n    private userService:UserService,\r\n    private service:sharedservice,\r\n    private metaService: MetaDataService,\r\n    private formBuilder: FormBuilder,\r\n    private alertService: AlertService,\r\n    private router: Router\r\n    ) { \r\n      this.grpName=service.getGrpName();\r\n      this.grpId = service.getGrpID();\r\n    }\r\n\r\n  model: any = {};\r\n\r\n  ngOnInit() {\r\n    this.groupService.getGroups().pipe(first()).subscribe(groups => {      \r\n        this.groups = groups.data;                \r\n    });\r\n    this.userService.getUsers().pipe(first()).subscribe(users => {\r\n      users.data.forEach(u => {\r\n        if(u.groups.length == 0 ){////getting unmapped group users\r\n          this.userResultList.push(u); \r\n        }\r\n      });         \r\n    });\r\n    this.metaService.getAllAssetTypes().pipe(first()).subscribe(assetTypes => {  \r\n        this.assetTypes = assetTypes.data;\r\n    });\r\n    this.metaService.getNonAutoAssignedAssets().pipe(first()).subscribe(assets => { \r\n      this.assets = assets.data;\r\n    });\r\n    this.metaService.getMappedUsers(this.grpId).pipe(first()).subscribe(users => {  \r\n      users.data.forEach(u => {\r\n        this.userIDList.push(u.id);\r\n        this.userResultList.push(u); ////getting mapped users in selected grp\r\n      });\r\n    });\r\n    this.metaService.getTherapeuticAreaMap().pipe(first()).subscribe(TA => { \r\n        TA.data.forEach(ta => {\r\n            this.therapeuticAreaMap.set(ta.id, ta.name);\r\n            ta.products.forEach(prod => {\r\n              this.productMap.set(prod.id,prod.name);\r\n            });\r\n            ta.diseaseStates.forEach(disease => {\r\n              this.diseaseMap.set(disease.id, disease.name);\r\n            });\r\n        });\r\n    }); \r\n  }\r\n\r\n  assetNavClick($event){\r\n    this.userNav_show = $event.target.value === '1' ? true : false;\r\n    this.assetNav_show = $event.target.value === '2' ? true : false;\r\n\r\n    if($event.target.value === '2'){\r\n      this.metaService.getMappedAssets(this.grpId).pipe(first()).subscribe(assets => {  \r\n        assets.data.forEach(a => {\r\n           this.assetIDList.push(a.id);\r\n         });\r\n       });\r\n    }\r\n  }\r\n\r\n  addToUserList (userId,$event){\r\n    if(this.userIDList.indexOf(userId) > -1){\r\n      this.userIDList.splice(this.userIDList.indexOf(userId), 1);\r\n    }else{\r\n      this.userIDList.push(userId);\r\n    }\r\n  }\r\n\r\n  addToAssetList(assetId,$event){\r\n    if(this.assetIDList.indexOf(assetId) > -1){\r\n      this.assetIDList.splice(this.assetIDList.indexOf(assetId), 1);\r\n    }else{\r\n      this.assetIDList.push(assetId);\r\n    }\r\n  }\r\n\r\n  userGroupMap(id: number){    \r\n    console.log(this.userIDList.length);\r\n    // if(this.userIDList.length > 0){\r\n      this.metaService.userGroupMapping(id,this.userIDList).pipe(first()).subscribe(data => {  \r\n        this.alertService.success(data.data);\r\n        window.scroll(0,0);\r\n      },\r\n      error => {\r\n        this.alertService.error(error);\r\n        window.scroll(0,0);\r\n      });\r\n    // }else{\r\n    //     this.alertService.error('Please select user/s to map.');\r\n    //     window.scroll(0,0);\r\n    // }\r\n   \r\n  }\r\n\r\n  userAssetMap(id: number){\r\n    this.metaService.assetGroupMapping(id,this.assetIDList).pipe(first()).subscribe(data => { \r\n      this.alertService.success(data.data);\r\n       window.scroll(0,0);\r\n    },\r\n    error => {\r\n      this.alertService.error(error);\r\n      window.scroll(0,0);\r\n    });\r\n  }\r\n\r\n  shareGrpDetails(grpID){\r\n    this.grpId = grpID;\r\n\r\n    this.assetIDList = [];\r\n    this.userIDList = [];\r\n    this.userResultList = [];\r\n\r\n    this.metaService.getMappedAssets(this.grpId).pipe(first()).subscribe(assets => {  \r\n      assets.data.forEach(a => {\r\n          this.assetIDList.push(a.id);\r\n        });\r\n      });\r\n\r\n    this.metaService.getMappedUsers(this.grpId).pipe(first()).subscribe(users => {  \r\n      users.data.forEach(u => {\r\n          this.userIDList.push(u.id);\r\n          this.userResultList.push(u);\r\n        });\r\n      });\r\n\r\n    this.userService.getUsers().pipe(first()).subscribe(users => {\r\n      users.data.forEach(u => {\r\n        if(u.groups.length == 0 ){\r\n          this.userResultList.push(u);\r\n        }\r\n      });         \r\n    });\r\n  }\r\n\r\n  getThearpeuticAreas(assetTypeId){\r\n    this.therapeuticAreaMap.clear()\r\n    this.metaService.getTherapeuticAreas(assetTypeId).pipe(first()).subscribe(therapeutic => { \r\n        therapeutic.data.forEach(ta => {\r\n          this.therapeuticAreaMap.set(ta.id, ta.name);\r\n        });\r\n    });\r\n  }\r\n\r\n  getdiseaseAndProducts(taName){\r\n    this.metaService.getTherapeuticAreaMap().pipe(first()).subscribe(TA => { \r\n      TA.data.forEach(ta => {\r\n        if(taName === ta.name){\r\n          this.productMap.clear();\r\n          this.diseaseMap.clear();\r\n          ta.products.forEach(prod => {\r\n            this.productMap.set(prod.id,prod.name);\r\n          });\r\n          ta.diseaseStates.forEach(disease => {\r\n            this.diseaseMap.set(disease.id, disease.name);\r\n          });\r\n        }                \r\n      });\r\n    });    \r\n  }\r\n\r\n              \r\n\r\n  applyFIlter(asseType, ta, dis, prod){\r\n    this.resultList = [];\r\n    this.fullData = false;\r\n    this.filterData = true    \r\n    console.log(asseType+'--'+ta+'--'+dis+'--'+prod)   \r\n      this.assets.forEach(asset => {        \r\n        if(prod > 1 && asset.product != null && asset.diseaseState != null && asset.therapeuticArea != null){\r\n          if(asset.product.id == prod && asset.diseaseState.id == dis && asset.therapeuticArea.id == ta && asset.assetType.id == asseType){\r\n            this.resultList.push(asset);\r\n          }\r\n        }  \r\n        else if(dis > 1 && asset.diseaseState != null && asset.therapeuticArea != null){\r\n          console.log(asset.diseaseState.id);\r\n          if(asset.diseaseState.id == dis && asset.therapeuticArea.id == ta && asset.assetType.id == asseType){\r\n              this.resultList.push(asset);\r\n          }\r\n        } \r\n        else if(ta > 1 && asset.therapeuticArea != null){\r\n          if(asset.therapeuticArea.id == ta && asset.assetType.id == asseType){\r\n              this.resultList.push(asset);\r\n          }\r\n        }  \r\n        else if(asseType > 1){\r\n          if(asset.assetType.id == asseType){            \r\n              this.resultList.push(asset);\r\n          }\r\n        }\r\n      });\r\n      if(asseType==0&&ta==0&&dis==0&&prod==0) {this.message=\"Apply atleast one filter\"}\r\n      else {this.message=\"Couldn't find assets\";}\r\n  }\r\n\r\n  cancelGroupMapping(){\r\n    this.router.navigate(['/admin/group']);\r\n  }\r\n  \r\n}\r\n","module.exports = \".pointer{\\r\\n    cursor: pointer;\\r\\ncolor: #007bff !important;\\r\\n}\\r\\n\\r\\n.table {\\r\\n\\ttable-layout: fixed;\\r\\n}\\r\\n\\r\\n.tableHead > th:nth-child(1) {\\r\\n\\twidth: 200px;\\r\\n}\\r\\n\\r\\n.tableHead > th:nth-child(2) {\\r\\n\\twidth: 200px;\\r\\n}\\r\\n\\r\\n.tableHead > th:nth-child(3) {\\r\\n\\twidth: 75px;\\r\\n}\\r\\n\\r\\n.tableHead > th:nth-child(4) {\\r\\n\\twidth: 75px;\\r\\n}\\r\\n\\r\\n.tableHead > th:nth-child(5) {\\r\\n\\twidth: 50px;\\r\\n}\\r\\n\\r\\n.tableHead > th:nth-child(6) {\\r\\n\\twidth: 25px;\\r\\n}\\r\\n\\r\\n.tableHead > th:nth-child(7) {\\r\\n\\twidth: 25px;\\r\\n}\\r\\n\\r\\n/* .tableHead > th:nth-child(8) {\\r\\n\\twidth: 25px;\\r\\n} */\\r\\n\\r\\n.query, .delete {\\r\\n\\tmargin:  0px auto;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYWRtaW4vaG9tZS9ncm91cHMvZ3JvdXAuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLGVBQWU7QUFDbkIseUJBQXlCO0FBQ3pCOztBQUVBO0NBQ0MsbUJBQW1CO0FBQ3BCOztBQUNBO0NBQ0MsWUFBWTtBQUNiOztBQUNBO0NBQ0MsWUFBWTtBQUNiOztBQUNBO0NBQ0MsV0FBVztBQUNaOztBQUNBO0NBQ0MsV0FBVztBQUNaOztBQUNBO0NBQ0MsV0FBVztBQUNaOztBQUNBO0NBQ0MsV0FBVztBQUNaOztBQUNBO0NBQ0MsV0FBVztBQUNaOztBQUNBOztHQUVHOztBQUNIO0NBQ0MsaUJBQWlCO0FBQ2xCIiwiZmlsZSI6InNyYy9hcHAvYWRtaW4vaG9tZS9ncm91cHMvZ3JvdXAuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5wb2ludGVye1xyXG4gICAgY3Vyc29yOiBwb2ludGVyO1xyXG5jb2xvcjogIzAwN2JmZiAhaW1wb3J0YW50O1xyXG59XHJcblxyXG4udGFibGUge1xyXG5cdHRhYmxlLWxheW91dDogZml4ZWQ7XHJcbn1cclxuLnRhYmxlSGVhZCA+IHRoOm50aC1jaGlsZCgxKSB7XHJcblx0d2lkdGg6IDIwMHB4O1xyXG59XHJcbi50YWJsZUhlYWQgPiB0aDpudGgtY2hpbGQoMikge1xyXG5cdHdpZHRoOiAyMDBweDtcclxufVxyXG4udGFibGVIZWFkID4gdGg6bnRoLWNoaWxkKDMpIHtcclxuXHR3aWR0aDogNzVweDtcclxufVxyXG4udGFibGVIZWFkID4gdGg6bnRoLWNoaWxkKDQpIHtcclxuXHR3aWR0aDogNzVweDtcclxufVxyXG4udGFibGVIZWFkID4gdGg6bnRoLWNoaWxkKDUpIHtcclxuXHR3aWR0aDogNTBweDtcclxufVxyXG4udGFibGVIZWFkID4gdGg6bnRoLWNoaWxkKDYpIHtcclxuXHR3aWR0aDogMjVweDtcclxufVxyXG4udGFibGVIZWFkID4gdGg6bnRoLWNoaWxkKDcpIHtcclxuXHR3aWR0aDogMjVweDtcclxufVxyXG4vKiAudGFibGVIZWFkID4gdGg6bnRoLWNoaWxkKDgpIHtcclxuXHR3aWR0aDogMjVweDtcclxufSAqL1xyXG4ucXVlcnksIC5kZWxldGUge1xyXG5cdG1hcmdpbjogIDBweCBhdXRvO1xyXG59Il19 */\"","module.exports = \"\\r\\n \\r\\n<app-admin-top-nav></app-admin-top-nav>\\r\\n<router-outlet></router-outlet>\\r\\n    <!-- Page section start -->\\r\\n    <main class=\\\"main_container\\\">\\r\\n        <div class=\\\"container\\\">\\r\\n            <div class=\\\"main_con_inner\\\">\\r\\n          \\r\\n\\r\\n                <app-admin-side-nav></app-admin-side-nav>\\r\\n\\r\\n                <!-- right section  start -->\\r\\n                <section class=\\\"right_panel\\\">\\r\\n                       <!--------- Add Groups Start Here ---------->\\r\\n  <div class=\\\"addgroup hide_tab active\\\" id=\\\"pop_2\\\">\\r\\n    <div class=\\\"add_group_pop\\\" *ngIf=\\\"addGroup_show\\\">\\r\\n       <div class=\\\"group_pop_content\\\">\\r\\n            <div class=\\\"rph_header\\\">\\r\\n                <div class=\\\"row\\\">\\r\\n                    <div class=\\\"col-sm-12 col-md-12 col-lg-12 rph_left\\\">\\r\\n                        <h5>Add Group</h5>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        \\r\\n            <!-- <form  name=\\\"form\\\" (ngSubmit)=\\\"onSubmit()\\\" #f=\\\"ngForm\\\" novalidate> -->\\r\\n                <form class=\\\"user_fileds\\\" name=\\\"form\\\" (ngSubmit)=\\\"f.form.valid && onSubmit()\\\" #f=\\\"ngForm\\\" novalidate>\\r\\n              \\r\\n                        <div class=\\\"form-group row\\\">\\r\\n                          <div class=\\\"col-sm-2 col-md-2 col-lg-2\\\">\\r\\n                            <label for=\\\"groupname\\\">Group Name</label>\\r\\n                          </div>\\r\\n                           \\r\\n                          <div class=\\\"col-sm-6 col-md-10 col-lg-10\\\">\\r\\n                            <input type=\\\"text\\\" class=\\\"form-control \\\" name=\\\"name\\\" placeholder=\\\"\\\" [(ngModel)]=\\\"model.name\\\" #name=\\\"ngModel\\\" [ngClass]=\\\"{ 'is-invalid': f.submitted && name.invalid }\\\" required minlength=\\\"3\\\" maxlength=\\\"30\\\">\\r\\n                            <div *ngIf=\\\"f.submitted && name.invalid\\\" class=\\\"invalid-feedback\\\">\\r\\n                                <div *ngIf=\\\"name.errors.required\\\">Group Name is required</div>\\r\\n                            </div>\\r\\n                                <div *ngIf=\\\"name.errors?.minlength\\\" class=\\\"invalid-feedback\\\">\\r\\n                                    Group Name must be at least 3 characters long.\\r\\n                                </div> \\r\\n                                <div *ngIf=\\\"name.errors?.maxlength\\\" class=\\\"invalid-feedback\\\"> \\r\\n                                    Group Name can be max 30 characters long.\\r\\n                                </div>\\r\\n                          </div>\\r\\n                        </div>\\r\\n\\r\\n                        <div class=\\\"form-group row\\\">\\r\\n                          <div class=\\\"col-sm-2 col-md-2 col-lg-2\\\">\\r\\n                            <label for=\\\"mail\\\">Description</label>\\r\\n                          </div>\\r\\n                          <div class=\\\"col-sm-6 col-md-10 col-lg-10\\\">\\r\\n                            <input type=\\\"text\\\" class=\\\"form-control \\\" name=\\\"description\\\" placeholder=\\\"\\\" [(ngModel)]=\\\"model.description\\\" #description=\\\"ngModel\\\" [ngClass]=\\\"{ 'is-invalid': f.submitted && description.invalid }\\\" required minlength=\\\"3\\\" maxlength=\\\"100\\\">\\r\\n                            <div *ngIf=\\\"f.submitted && description.invalid\\\" class=\\\"invalid-feedback\\\">\\r\\n                                <div *ngIf=\\\"description.errors.required\\\">Description is required</div>\\r\\n                            </div>\\r\\n                            <div *ngIf=\\\"description.errors?.minlength\\\" class=\\\"invalid-feedback\\\">\\r\\n                                    Description must be at least 3 characters long.\\r\\n                            </div> \\r\\n                            <div *ngIf=\\\"description.errors?.maxlength\\\" class=\\\"invalid-feedback\\\"> \\r\\n                                    Description can be max 100 characters long.\\r\\n                            </div>\\r\\n                          </div>\\r\\n                        </div>\\r\\n                        <input type=\\\"hidden\\\" class=\\\"form-control \\\" name=\\\"id\\\" placeholder=\\\"\\\" [(ngModel)]=\\\"model.id\\\" #id=\\\"ngModel\\\" >\\r\\n                        <div class=\\\"buttons form-group\\\">\\r\\n                                <button class=\\\" btn-small canadd\\\" (click)=\\\"cancelGroup()\\\">Cancel</button>\\r\\n                                <button class=\\\" btn-small bnt_blue\\\"  *ngIf=\\\"submitBtn\\\">Submit</button>\\r\\n                                <button class=\\\" btn-small bnt_blue\\\"  *ngIf=\\\"updateBTn\\\">Update</button>\\r\\n                              </div>\\r\\n            </form>\\r\\n       </div>\\r\\n    </div>\\r\\n    <div class=\\\"right_panel_inner\\\">\\r\\n          <div class=\\\"rph_header\\\">\\r\\n              <div class=\\\"row\\\">\\r\\n                  <div class=\\\"col-sm-6 col-md-6 col-lg-6 rph_left\\\">\\r\\n                      <h5>Groups</h5>\\r\\n                  </div>\\r\\n\\r\\n                  <div class=\\\"col-sm-6 col-md-6 col-lg-6\\\">\\r\\n                      <div class=\\\"rph_right\\\">\\r\\n                          <form class=\\\"serach_form d-flex\\\">\\r\\n                           \\r\\n                              <button type=\\\"button\\\" class=\\\"search_btn\\\"><i class=\\\"fas fa-search\\\"></i>\\r\\n                                 <div class=\\\"serach_box\\\"><input type=\\\"text\\\" placeholder=\\\"Search..\\\"></div>\\r\\n                              </button>\\r\\n         \\r\\n                          </form>\\r\\n                           <button type=\\\"button\\\" id=\\\"addgroups\\\" class=\\\"btn-small bnt_blue\\\" (click)=\\\"onAddGroupClick()\\\">Add Group</button>\\r\\n                      </div>\\r\\n                  </div>\\r\\n              </div>\\r\\n          </div>\\r\\n          <div class=\\\"right_panel_box group_table\\\">\\r\\n            <div class=\\\"table-responsive\\\">\\r\\n              <table class=\\\"table\\\">\\r\\n                  <thead>\\r\\n                      <tr class=\\\"tableHead\\\">\\r\\n                          <th>Group Name</th>\\r\\n                          <th>Description</th>\\r\\n                          <th class=\\\"text-center\\\">Asset Mapped</th>\\r\\n                          <th class=\\\"text-center\\\">User Mapped</th>\\r\\n                          <th></th>\\r\\n                          <th></th>\\r\\n                          <th></th>\\r\\n                      </tr>\\r\\n                  </thead>\\r\\n                  <tbody>\\r\\n                      <tr *ngFor=\\\"let group of groups ; index as i\\\">\\r\\n                         <!--[routerLink]=\\\"['/admin/group/map']\\\"--> \\r\\n                          <td><a  class=\\\"pointer\\\" (click)=\\\"shareGrpDetails(group.id, group.name)\\\">{{group.name}}</a></td>\\r\\n                          <td>{{group.description}}</td>\\r\\n                          <td class=\\\"cen_blue\\\">Asset ({{group.assetCount}})</td>\\r\\n                          <td class=\\\"cen_blue\\\">Users ({{group.userCount}})</td>\\r\\n                          <td>\\r\\n                              <div class=\\\"custom-switch custom-switch-label-onoff pl-0\\\">\\r\\n                                  <input class=\\\"custom-switch-input\\\" id=\\\"{{'btn_0'+i}}\\\" type=\\\"checkbox\\\" (click)=\\\"changeStatus($event,group.id)\\\" [checked]=\\\"(group.status== 'true') ? false: true\\\" >\\r\\n                                  <label class=\\\"custom-switch-btn\\\" for=\\\"{{'btn_0'+i}}\\\"></label>\\r\\n                              </div>\\r\\n                          </td>\\r\\n                          <td>\\r\\n                              <div class=\\\"info_btn\\\"><button type=\\\"button\\\" class=\\\"query\\\" (click)=\\\"onEditGroupClick($event,group.id)\\\"><img src=\\\"assets/images/query_icon.png\\\"></button></div>\\r\\n                          </td>\\r\\n                          <td>\\r\\n                              <button type=\\\"button\\\" class=\\\"delete\\\" (click)=\\\"onDeleteGroupClick($event,group.id)\\\"><i class=\\\"far fa-trash-alt\\\"></i></button>\\r\\n                          </td>\\r\\n\\r\\n                      </tr>\\r\\n                    </tbody>\\r\\n              </table>\\r\\n              </div>\\r\\n          </div>\\r\\n    </div>\\r\\n    \\r\\n </div>  \\r\\n  <!---- Add Groups  End Here ---->\\r\\n\\r\\n\\r\\n                     \\r\\n                      \\r\\n\\r\\n\\r\\n                </section> <!-- Right Panel End Here -->\\r\\n            </div>\\r\\n        </div>\\r\\n    </main>\\r\\n    <footer class=\\\"fot_main\\\">\\r\\n      <div class=\\\"container\\\">\\r\\n        <div class=\\\"fot_inner\\\">\\r\\n          <div class=\\\"row\\\"><div class=\\\"col-sm-12 col-md-12\\\"><p>© ALLERGAN 2019</p></div></div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </footer>\\r\\n  \"","import { Component, OnInit } from '@angular/core';\r\nimport { first } from 'rxjs/operators';\r\n\r\nimport { GroupService } from '../../services/groupservice';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { sharedservice } from '../../services/sharedservice';\r\nimport { MetaDataService } from '../../services/metadataService';\r\nimport { AlertService } from 'src/app/services';\r\n\r\n@Component({\r\n  selector: 'app-admin-group',\r\n  templateUrl: './group.component.html',\r\n  styleUrls: ['./group.component.css']\r\n})\r\nexport class GroupComponent implements OnInit {\r\n  addGroup_show : boolean = false;\r\n  submitBtn : boolean = true;\r\n  updateBTn : boolean = false;\r\n  submitted = false;\r\n\r\n  groups:  [{id:0,name:\"\",description:\"\",status:false}];\r\n  mappedAssetIDs: Array<number> = [];\r\n  mappedUserIDs:Array<number> = [];\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private groupService:GroupService,\r\n    private service:sharedservice,\r\n    private metaService: MetaDataService,\r\n    private alertService: AlertService,\r\n    private router: Router) {  }\r\n\r\n  ngOnInit() {\r\n    this.groupService.getGroups().pipe(first()).subscribe(groups => {      \r\n        this.groups = groups.data;\r\n\r\n        groups.data.forEach(g => {\r\n\r\n          this.metaService.getMappedAssets(g.id).pipe().subscribe(data => {  \r\n            this.mappedAssetIDs = [];\r\n            data.data.forEach(a => {\r\n                this.mappedAssetIDs.push(a.id);\r\n              });\r\n              g.assetCount = this.mappedAssetIDs.length;\r\n          });   \r\n          \r\n          this.metaService.getMappedUsers(g.id).pipe(first()).subscribe(users => {  \r\n            this.mappedUserIDs = [];\r\n            users.data.forEach(u => {\r\n               this.mappedUserIDs.push(u.id);\r\n             });\r\n             g.userCount = this.mappedUserIDs.length;\r\n           });\r\n\r\n        });\r\n\r\n    });\r\n  }\r\n\r\n  model: any = {};\r\n \r\n  onSubmit() {\r\n    if(this.model.id > 0){\r\n      this.groupService.editGroup(this.model).pipe(first()).subscribe(groups => {\r\n        this.cancelGroup();\r\n        this.groupService.getGroups().pipe(first()).subscribe(groups => {      \r\n            this.groups = groups.data;\r\n\r\n            this.alertService.success('Successfully Updated.');\r\n            window.scroll(0,0);\r\n          },\r\n          error => {\r\n            this.alertService.error(error);\r\n            window.scroll(0,0);\r\n        });\r\n      });      \r\n    }else{\r\n      this.groupService.insertGroup(this.model).pipe(first()).subscribe(groups => { \r\n        this.cancelGroup();\r\n        this.groupService.getGroups().pipe(first()).subscribe(groups => {      \r\n            this.groups = groups.data;\r\n\r\n            this.alertService.success('Successfully Added.');\r\n            window.scroll(0,0);\r\n          },\r\n          error => {\r\n            this.alertService.error(error);\r\n            window.scroll(0,0);\r\n        });\r\n      });\r\n    }\r\n    \r\n  }\r\n\r\n  onAddGroupClick() {\r\n    this.addGroup_show=true;\r\n    this.submitBtn  = true;\r\n    this.updateBTn  = false;\r\n\r\n    this.model.id = '';\r\n    this.model.name = '';\r\n    this.model.description = '';       \r\n  }\r\n\r\n  onEditGroupClick($event,Id:number){\r\n    this.addGroup_show=true;\r\n\r\n    this.submitBtn  = false;\r\n    this.updateBTn  = true;\r\n\r\n    this.groupService.findGroupById(Id).pipe(first()).subscribe(groups => {\r\n      this.model.id = groups.data.id;\r\n      this.model.name = groups.data.name;\r\n      this.model.description = groups.data.description;       \r\n    });\r\n  }\r\n\r\n  onDeleteGroupClick($event,Id:number){\r\n    this.groupService.deleteGroup(Id).pipe(first()).subscribe(groups => {\r\n        this.groups = groups.data;    \r\n        this.alertService.success('Successfully Deleted.');\r\n        window.scroll(0,0);\r\n      },\r\n      error => {\r\n        this.alertService.error(error);\r\n        window.scroll(0,0);\r\n    \r\n    });\r\n  }\r\n\r\n  cancelGroup(){\r\n    this.addGroup_show=false;\r\n  }  \r\n\r\n  changeStatus($event,Id:number){    \r\n    let status='false';\r\n    if($event.target.checked== false){\r\n      status='true';\r\n    }\r\n\r\n    this.groupService.changeStatus(status,Id).pipe(first()).subscribe(groups => {\r\n        this.groups = groups.data;      \r\n    });    \r\n  }\r\n\r\n  shareGrpDetails(grpId: number, grp: string){    \r\n    this.service.saveData(grpId, grp); \r\n    this.router.navigate(['/admin/group/map']);\r\n  }\r\n}\r\n","module.exports = \".table {\\r\\n    table-layout: fixed;\\r\\n}\\r\\n.tableHead > th:nth-child(1) {\\r\\n\\twidth: 100px;\\r\\n}\\r\\n.tableHead > th:nth-child(2) {\\r\\n\\twidth: 350px;\\r\\n}\\r\\n.tableHead > th:nth-child(3) {\\r\\n\\twidth: 100px;\\r\\n}\\r\\n.tableHead > th:nth-child(4) {\\r\\n\\twidth: 25px;\\r\\n}\\r\\n.tableHead > th:nth-child(5) {\\r\\n\\twidth: 25px;\\r\\n}\\r\\n.query, .delete {\\r\\n\\tmargin:  0px auto;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYWRtaW4vaG9tZS9xdWVzdGlvbi1iYW5rL3F1ZXN0aW9uLWJhbmsuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLG1CQUFtQjtBQUN2QjtBQUNBO0NBQ0MsWUFBWTtBQUNiO0FBQ0E7Q0FDQyxZQUFZO0FBQ2I7QUFDQTtDQUNDLFlBQVk7QUFDYjtBQUNBO0NBQ0MsV0FBVztBQUNaO0FBQ0E7Q0FDQyxXQUFXO0FBQ1o7QUFFQTtDQUNDLGlCQUFpQjtBQUNsQiIsImZpbGUiOiJzcmMvYXBwL2FkbWluL2hvbWUvcXVlc3Rpb24tYmFuay9xdWVzdGlvbi1iYW5rLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIudGFibGUge1xyXG4gICAgdGFibGUtbGF5b3V0OiBmaXhlZDtcclxufVxyXG4udGFibGVIZWFkID4gdGg6bnRoLWNoaWxkKDEpIHtcclxuXHR3aWR0aDogMTAwcHg7XHJcbn1cclxuLnRhYmxlSGVhZCA+IHRoOm50aC1jaGlsZCgyKSB7XHJcblx0d2lkdGg6IDM1MHB4O1xyXG59XHJcbi50YWJsZUhlYWQgPiB0aDpudGgtY2hpbGQoMykge1xyXG5cdHdpZHRoOiAxMDBweDtcclxufVxyXG4udGFibGVIZWFkID4gdGg6bnRoLWNoaWxkKDQpIHtcclxuXHR3aWR0aDogMjVweDtcclxufVxyXG4udGFibGVIZWFkID4gdGg6bnRoLWNoaWxkKDUpIHtcclxuXHR3aWR0aDogMjVweDtcclxufVxyXG5cclxuLnF1ZXJ5LCAuZGVsZXRlIHtcclxuXHRtYXJnaW46ICAwcHggYXV0bztcclxufSJdfQ== */\"","module.exports = \"<app-admin-top-nav></app-admin-top-nav>\\r\\n<router-outlet></router-outlet>\\r\\n    <!-- Page section start -->\\r\\n    <main class=\\\"main_container\\\">\\r\\n        <div class=\\\"container\\\">\\r\\n            <div class=\\\"main_con_inner\\\">\\r\\n          \\r\\n\\r\\n                <app-admin-side-nav></app-admin-side-nav>\\r\\n   <!-- right section  start -->\\r\\n   <section class=\\\"right_panel\\\">\\r\\n <!-- Question Bank Starts -->\\r\\n                      \\r\\n <div class=\\\"question_bank\\\"  id=\\\"pop_4\\\">\\r\\n        <div class=\\\"right_panel_inner question_bank_list\\\">\\r\\n            <div class=\\\"rph_header\\\">\\r\\n                <div class=\\\"row\\\">\\r\\n                    <div class=\\\"col-sm-6 col-md-8 col-lg-6 rph_left\\\">\\r\\n                        <h5>Question Bank</h5>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"col-sm-6 col-md-6 col-lg-6\\\">\\r\\n                        <div class=\\\"rph_right\\\">\\r\\n                            <form class=\\\"serach_form d-flex\\\">\\r\\n                            \\r\\n                                <button type=\\\"button\\\" class=\\\"search_btn\\\"><i class=\\\"fas fa-search\\\"></i>\\r\\n                                  <div class=\\\"serach_box\\\"><input type=\\\"text\\\" placeholder=\\\"Search..\\\"></div>\\r\\n                                </button>\\r\\n          \\r\\n                            </form>\\r\\n                            <button type=\\\"button\\\" id=\\\"addquestions\\\" class=\\\"btn-small bnt_blue\\\"  [routerLink]=\\\"['/admin/question/add']\\\">Add Question</button>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"right_panel_box group_table\\\">\\r\\n              <div class=\\\"table-responsive\\\">\\r\\n                <table class=\\\"table\\\">\\r\\n                    <thead>\\r\\n                        <tr class=\\\"tableHead\\\">\\r\\n                            <th>Title</th>                           \\r\\n                            <th>Questions</th>\\r\\n                            <th>Type</th>                            \\r\\n                            <th></th>\\r\\n                            <th></th>\\r\\n                        </tr>\\r\\n                    </thead>\\r\\n                    <tbody>\\r\\n                        <tr  *ngFor=\\\"let question of questions ; index as i\\\">\\r\\n                            <td>{{question.title != null ? question.title : \\\"\\\"}}</td>\\r\\n                            <td>{{(question.qsData != null && question.qsData.question != null) ? question.qsData.question: \\\"\\\"}}</td>\\r\\n                            <td>{{(question.qsData != null && question.qsData.questionType != null)? question.qsData.questionType : \\\"\\\"}}</td>\\r\\n                            <td>\\r\\n                                <div class=\\\"info_btn\\\">\\r\\n                                  <button type=\\\"button\\\" class=\\\"query\\\" routerLink=\\\"{{'/admin/question/edit/'+question.id}}\\\"><img src=\\\"assets/images/query_icon.png\\\"></button>\\r\\n                                  \\r\\n                              </div>\\r\\n                            </td>\\r\\n                            <td><button type=\\\"button\\\" class=\\\"delete\\\" (click)=\\\"deleteQuestion($event,question.id)\\\"><i class=\\\"far fa-trash-alt\\\"></i></button></td>\\r\\n                        </tr>\\r\\n                    </tbody>\\r\\n                </table>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n\\r\\n        <!-- Add Questions Starts-->\\r\\n       <!-- <div class=\\\"question_bank_Inner\\\">\\r\\n            <div class=\\\"rph_header\\\">\\r\\n                <div class=\\\"row\\\">\\r\\n                    <div class=\\\"col-sm-6 col-md-6 col-lg-6 rph_left\\\">\\r\\n                        <h5>Add Question</h5>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"right_panel_box2\\\">\\r\\n              <form class=\\\"user_fileds\\\">\\r\\n                <div class=\\\"row\\\">\\r\\n                    <div class=\\\"col-sm-6 col-md-6 col-lg-6\\\">\\r\\n                      <div class=\\\"form-group row\\\">\\r\\n                        <div class=\\\"col-sm-4 col-md-4 col-lg-4\\\">\\r\\n                          <label for=\\\"lastname\\\">Title</label>\\r\\n                        </div>\\r\\n                        <div class=\\\"col-sm-8 col-md-8 col-lg-8\\\">\\r\\n                          <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"\\\" placeholder=\\\"\\\" name=\\\"lastname\\\">\\r\\n                        </div>\\r\\n                      </div>\\r\\n\\r\\n                      <div class=\\\"form-group row\\\">\\r\\n                        <div class=\\\"col-sm-4 col-md-4 col-lg-4\\\">\\r\\n                          <label >Select TA</label>\\r\\n                        </div>\\r\\n                        <div class=\\\"col-sm-8 col-md-8 col-lg-8\\\">\\r\\n                            <select class=\\\"custom-select slects_option\\\">\\r\\n                              <option ></option>\\r\\n                              <option value=\\\"1\\\">Select TA</option>\\r\\n                              <option value=\\\"2\\\">Select TA</option>\\r\\n                              <option value=\\\"3\\\">Select TA</option>\\r\\n                          </select>\\r\\n                        </div>\\r\\n                      </div>\\r\\n\\r\\n                      <div class=\\\"form-group row\\\">\\r\\n                        <div class=\\\"col-sm-4 col-md-4 col-lg-4\\\">\\r\\n                          <label >Asset Type</label>\\r\\n                        </div>\\r\\n                        <div class=\\\"col-sm-8 col-md-8 col-lg-8\\\">\\r\\n                            <select class=\\\"custom-select slects_option\\\">\\r\\n                              <option ></option>\\r\\n                              <option value=\\\"1\\\">Asset Type</option>\\r\\n                              <option value=\\\"2\\\">Asset Type</option>\\r\\n                              <option value=\\\"3\\\">Asset Type</option>\\r\\n                          </select>\\r\\n                        </div>\\r\\n                      </div>\\r\\n\\r\\n                      <div class=\\\"form-group row\\\">\\r\\n                        <div class=\\\"col-sm-4 col-md-4 col-lg-4\\\">\\r\\n                          <label >Disease state</label>\\r\\n                        </div>\\r\\n                        <div class=\\\"col-sm-8 col-md-8 col-lg-8\\\">\\r\\n                            <select class=\\\"custom-select slects_option\\\">\\r\\n                              <option ></option>\\r\\n                              <option value=\\\"1\\\">Disease state</option>\\r\\n                              <option value=\\\"2\\\">Disease state</option>\\r\\n                              <option value=\\\"3\\\">Disease state</option>\\r\\n                          </select>\\r\\n                        </div>\\r\\n                      </div>\\r\\n\\r\\n                      <div class=\\\"form-group row\\\">\\r\\n                        <div class=\\\"col-sm-4 col-md-4 col-lg-4\\\">\\r\\n                          <label >Product</label>\\r\\n                        </div>\\r\\n                        <div class=\\\"col-sm-8 col-md-8 col-lg-8\\\">\\r\\n                            <select class=\\\"custom-select slects_option\\\">\\r\\n                              <option ></option>\\r\\n                              <option value=\\\"1\\\">Product</option>\\r\\n                              <option value=\\\"2\\\">Product</option>\\r\\n                              <option value=\\\"3\\\">Product</option>\\r\\n                          </select>\\r\\n                        </div>\\r\\n                      </div>\\r\\n\\r\\n                      <div class=\\\"form-group row\\\">\\r\\n                        <div class=\\\"col-sm-4 col-md-4 col-lg-4\\\">\\r\\n                          <label >Question Type</label>\\r\\n                        </div>\\r\\n                        <div class=\\\"col-sm-8 col-md-8 col-lg-8\\\">\\r\\n                            <select class=\\\"custom-select slects_option\\\">\\r\\n                              <option ></option>\\r\\n                              <option value=\\\"1\\\">Question Type</option>\\r\\n                              <option value=\\\"2\\\">Question Type</option>\\r\\n                              <option value=\\\"3\\\">Question Type</option>\\r\\n                          </select>\\r\\n                        </div>\\r\\n                      </div>\\r\\n\\r\\n                      <div class=\\\"form-group row\\\">\\r\\n                        <div class=\\\"col-sm-4 col-md-4 col-lg-4\\\">\\r\\n                          <label >Region</label>\\r\\n                        </div>\\r\\n                        <div class=\\\"col-sm-8 col-md-8 col-lg-8\\\">\\r\\n                            <select class=\\\"custom-select slects_option\\\">\\r\\n                              <option ></option>\\r\\n                              <option value=\\\"1\\\">Region</option>\\r\\n                              <option value=\\\"2\\\">Region</option>\\r\\n                              <option value=\\\"3\\\">Region</option>\\r\\n                            </select>\\r\\n                        </div>\\r\\n                      </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"row\\\">\\r\\n                  <div class=\\\"col-sm-12 col-md-12 col-lg-12 rph_left\\\">\\r\\n                    <h5>Answers</h5>\\r\\n                    <div class=\\\"form-group row\\\">\\r\\n                      <div class=\\\"col-sm-12 col-md-12 col-lg-12 feedBackWrap\\\">\\r\\n                        <label for=\\\"lastname\\\">A</label>\\r\\n                        <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"\\\" placeholder=\\\"\\\" name=\\\"\\\">\\r\\n                        <button type=\\\"button\\\" class=\\\"delete\\\"><i class=\\\"far fa-trash-alt\\\"></i></button>\\r\\n                        <div class=\\\"feedBack\\\">\\r\\n                          <h4>Feedback</h4>\\r\\n                          <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"\\\" placeholder=\\\"\\\" name=\\\"\\\">\\r\\n                        </div>\\r\\n                      </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"form-group row\\\">\\r\\n                        <div class=\\\"col-sm-12 col-md-12 col-lg-12 feedBackWrap\\\">\\r\\n                          <label for=\\\"lastname\\\">B</label>\\r\\n                          <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"\\\" placeholder=\\\"\\\" name=\\\"\\\">\\r\\n                          <button type=\\\"button\\\" class=\\\"delete\\\"><i class=\\\"far fa-trash-alt\\\"></i></button>\\r\\n                          <div class=\\\"feedBack\\\">\\r\\n                            <h4>Feedback</h4>\\r\\n                            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"\\\" placeholder=\\\"\\\" name=\\\"\\\">\\r\\n                          </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"feedBack_btns row\\\">\\r\\n                      <div class=\\\"col-xs-12 col-sm-12 col-md-12 col-lg-12 feedBack_btn1\\\">\\r\\n                        <button class=\\\"btn btn_feedback\\\">Add Answer</button>\\r\\n                      </div>\\r\\n                      <div class=\\\"col-xs-12 col-sm-12 col-md-12 col-lg-12 feedBack_btn2\\\">\\r\\n                          <button class=\\\"btn btn_feedback btn_feedback_cancel\\\">Cancel</button>\\r\\n                          <button class=\\\"btn btn_feedback\\\">Save & Add Another</button>\\r\\n                          <button class=\\\"btn btn_feedback btn_feedback_save\\\">Save</button>\\r\\n                      </div>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </form>\\r\\n            </div>\\r\\n         </div>-->\\r\\n      </div>\\r\\n\\r\\n\\r\\n\\r\\n    <!-- Question Bank Ends -->\\r\\n\\r\\n</section> <!-- Right Panel End Here -->\\r\\n</div>\\r\\n</div>\\r\\n</main>\\r\\n<footer class=\\\"fot_main\\\">\\r\\n<div class=\\\"container\\\">\\r\\n<div class=\\\"fot_inner\\\">\\r\\n<div class=\\\"row\\\"><div class=\\\"col-sm-12 col-md-12\\\"><p>© ALLERGAN 2019</p></div></div>\\r\\n</div>\\r\\n</div>\\r\\n</footer>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { first } from 'rxjs/operators';\r\nimport { FormBuilder } from '@angular/forms';\r\nimport { QuestionBankService } from '../../services/questionbankservice';\r\nimport { Router } from '@angular/router';\r\nimport { AlertService } from 'src/app/services/alert.service';\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'app-admin-question-bank',\r\n  templateUrl: './question-bank.component.html',\r\n  styleUrls: ['./question-bank.component.css']\r\n\r\n})\r\n\r\n\r\nexport class QuestionBankComponent implements OnInit {\r\n\r\n    constructor(\r\n        private formBuilder: FormBuilder,\r\n        private questionBankService:QuestionBankService,\r\n        private alertService: AlertService,\r\n        private router: Router) {  }\r\n        questions:  [{}];\r\n        qsData:[{}]\r\n    ngOnInit() {       \r\n        this.questionBankService.getAllQuestions().pipe(first()).subscribe(questions => {   \r\n            console.log(questions) ;  \r\n            this.questions=questions;           \r\n        });\r\n    }\r\n\r\n    deleteQuestion($event, questionID: Number){\r\n        this.questionBankService.deleteQuestion(questionID).pipe(first()).subscribe(questions => {\r\n            this.questionBankService.getAllQuestions().pipe(first()).subscribe(questions => {   \r\n                console.log(questions) ;  \r\n                this.questions=questions;    \r\n                this.alertService.success('Successfully Deleted.');\r\n                window.scroll(0,0);\r\n                },\r\n                error => {\r\n                this.alertService.error(error);\r\n                window.scroll(0,0);       \r\n            });\r\n        });\r\n\r\n        \r\n\r\n    }\r\n    \r\n\r\n    \r\n}","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FkbWluL2hvbWUvcXVpei9xdWl6LmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<app-admin-top-nav></app-admin-top-nav>\\r\\n<main class=\\\"main_container\\\">\\r\\n  <div class=\\\"container\\\">\\r\\n      <div class=\\\"main_con_inner\\\">\\r\\n    \\r\\n\\r\\n          <app-admin-side-nav></app-admin-side-nav>\\r\\n\\r\\n          <!-- right section  start -->\\r\\n          <section class=\\\"right_panel\\\">\\r\\n<!-- Quiz Starts -->\\r\\n                      \\r\\n<div class=\\\"quiz_wrap hide_tab active\\\"  id=\\\"pop_6\\\">\\r\\n    <div class=\\\"right_panel_inner quiz_list\\\">\\r\\n        <div class=\\\"rph_header\\\">\\r\\n            <div class=\\\"row\\\">\\r\\n                <div class=\\\"col-sm-6 col-md-8 col-lg-6 rph_left\\\">\\r\\n                    <h5>Quiz Bank</h5>\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"col-sm-6 col-md-6 col-lg-6\\\">\\r\\n                    <div class=\\\"rph_right\\\">\\r\\n                        <form class=\\\"serach_form d-flex\\\">\\r\\n                        \\r\\n                            <button type=\\\"button\\\" class=\\\"search_btn\\\"><i class=\\\"fas fa-search\\\"></i>\\r\\n                              <div class=\\\"serach_box\\\"><input type=\\\"text\\\" placeholder=\\\"Search..\\\"></div>\\r\\n                            </button>\\r\\n      \\r\\n                        </form>\\r\\n                        <button type=\\\"button\\\" id=\\\"addquiz\\\" class=\\\"btn-small bnt_blue\\\" [routerLink]=\\\"['/admin/quiz/add']\\\">Add Quiz</button>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div class=\\\"right_panel_box group_table\\\">\\r\\n          <div class=\\\"table-responsive\\\">\\r\\n            <table class=\\\"table\\\">\\r\\n                <thead>\\r\\n                    <tr>\\r\\n                        <th>Title</th>                       \\r\\n                        <th class=\\\"text-center\\\">Number of Questions</th>                       \\r\\n                        <!-- <th class=\\\"text-center\\\">Added</th> -->\\r\\n                        <th></th>\\r\\n                        <th></th>\\r\\n                        <th></th>\\r\\n                    </tr>\\r\\n                </thead>\\r\\n                <tbody>\\r\\n\\r\\n                    <tr *ngFor=\\\"let q of quiz ; index as i\\\">\\r\\n                        <td>{{q.title}}</td>\\r\\n                        <!-- <td>{{q[4]}}</td> -->\\r\\n                        <td class=\\\"text-center\\\">{{getQuestionSize(q.jsonData)}}</td>\\r\\n                        <!-- <td>{{q[6]}}</td> -->\\r\\n                        <!-- <td class=\\\"text-center\\\">{{q.dateCreated | date : \\\"dd.MM.y\\\"}}</td> -->\\r\\n                        <td>\\r\\n                            <div class=\\\"action_btn \\\">\\r\\n                              <button type=\\\"button\\\" class=\\\"query\\\" routerLink=\\\"{{'/admin/quiz/edit/'+q.id}}\\\"><img src=\\\"assets/images/query_icon.png\\\"></button>\\r\\n                           \\r\\n\\t\\t\\t\\t\\t\\t\\t \\r\\n                          </div>\\r\\n                        </td>\\r\\n                        <td>   <button type=\\\"button\\\" class=\\\"delete\\\" (click)=\\\"deleteQuizClick($event,q.id)\\\"><i class=\\\"far fa-trash-alt\\\"></i></button></td>\\r\\n                        <td> <span  class=\\\"clone\\\"  (click)=\\\"openClone($event,q.id)\\\" [ngClass]=\\\"{active_clone: isActive(q.id)}\\\">\\r\\n                                <img src=\\\"assets/images/clone.png\\\">\\r\\n                                <div class=\\\"clone_pop\\\" routerLink=\\\"{{'/admin/quiz/clone/'+q.id}}\\\">\\r\\n                                <span>Clone</span>\\r\\n                                </div>\\r\\n                            </span></td>\\r\\n                    </tr>\\r\\n                    \\r\\n                </tbody>\\r\\n            </table>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n    \\r\\n</div>\\r\\n\\r\\n<!-- Quiz Ends -->\\r\\n</section> <!-- Right Panel End Here -->\\r\\n</div>\\r\\n</div>\\r\\n</main>\\r\\n<footer class=\\\"fot_main\\\">\\r\\n<div class=\\\"container\\\">\\r\\n<div class=\\\"fot_inner\\\">\\r\\n<div class=\\\"row\\\"><div class=\\\"col-sm-12 col-md-12\\\"><p>© ALLERGAN 2019</p></div></div>\\r\\n</div>\\r\\n</div>\\r\\n</footer>\"","import { Component, OnInit } from \"@angular/core\";\r\nimport { first, map } from 'rxjs/operators';\r\nimport { QuizService } from '../../services/quizservice';\r\nimport { Router } from \"@angular/router\";\r\nimport { FormBuilder } from \"@angular/forms\";\r\nimport { AlertService } from \"src/app/services/alert.service\";\r\n\r\n@Component({\r\n    selector: 'app-admin-quiz',\r\n    templateUrl: './quiz.component.html',\r\n    styleUrls: ['./quiz.component.css']\r\n  })\r\n  export class QuizComponent implements OnInit {\r\n    selected :any;\r\n    quiz:  [{id:0,title:\"\"}];\r\n    zero : number = 0;\r\n    constructor(\r\n      private formBuilder: FormBuilder,\r\n      private quizService:QuizService,\r\n      private alertService: AlertService,\r\n      private router: Router) {  }\r\n      \r\n    ngOnInit() {\r\n      this.quizService.getQuiz().pipe(first()).subscribe(quizz => {      \r\n          this.quiz = quizz.data;\r\n      });\r\n    }\r\n\r\n    getQuestionSize(data: string) {\r\n      let selectedList = [];\r\n      selectedList =data.toString().replace('[','').replace(']','').split(',').map(Number);\r\n      if(selectedList.indexOf(this.zero) > -1 ){\r\n        selectedList.splice(selectedList.indexOf(this.zero), 1);\r\n      }\r\n      return selectedList.length;\r\n    }\r\n\r\n    deleteQuizClick($event,Id:number){\r\n      this.quizService.deleteQuiz(Id).pipe(first()).subscribe(quizz => {\r\n          this.quiz = quizz.data; \r\n          \r\n          this.alertService.success('Successfully Deleted.');\r\n            window.scroll(0,0);\r\n          },\r\n          error => {\r\n            this.alertService.error(error);\r\n            window.scroll(0,0);\r\n\r\n      });\r\n    }\r\n\r\n    openClone($event,Id:number){    \r\n      this.selected = Id;\r\n      $event.stopPropagation();\r\n    }\r\n    isActive(item) {\r\n      return this.selected === item;\r\n    };\r\n  }","export class Answer{\r\n    id: number;\r\n    text:string;\r\n    correct: boolean;\r\n}","import { Answer } from './Answer';\r\nexport class QSData{\r\n    answers : Array<Answer>;\r\n    questionType : string;\r\n    question: string;\r\n}","import {Country} from './country'\r\nexport class EditUser {\r\n    id:Number;\r\n    etype:string;\r\n    firstName:string;\r\n    lastName:string;\r\n    email:string;\r\n    homeCountry:string;\r\n    title:string;\r\n    status:boolean=true;\r\n    groups:Object[]=[{id:'',name:''}];\r\n    userGroups:Object[]=[{id:'',name:''}];\r\n    country:Object[]=[{id:'',name:''}];\r\n    manager:Object[]=[{id:'',name:'',email:''}];\r\n    item:any=[{item_id:0,item_text:\"\"}];\r\n    product:any=[{item_id:0,item_text:\"\"}];\r\n    diseasestate:any=[{item_id:0,item_text:\"\"}];\r\n    userRoles:Object[]=[{id:0,name:\"\"}];\r\n    roles:Object[]=[{id:0,name:\"\"}];\r\n    region:any=[{item_id:0,item_text:\"\",country:[]}];\r\n    therapeuticArea:any=[{id:0,name:\"\",product:[{id:0,name:\"\"}],disState:[{id:0,name:\"\"}]}];\r\n\r\n}","import { QSData } from './AnswerData';\r\nexport class Question {\r\n    id: number;\r\n    title:string;\r\n    assetTypeId: number;\r\n    therapeuticAreaId: number;\r\n    diseaseStateId: number;\r\n    productId: number;\r\n    status: string;\r\n    qsData : QSData;\r\n}","export class Quize {\r\n    createdBy: 0\r\n    dateCreated: \"\"\r\n    dateUpdated: \"\"\r\n    id: 0\r\n    isActive: \"\"\r\n    jsonData: \"\"\r\n    status: \"\"\r\n    timer: \"\"\r\n    title: \"\"\r\n    updatedBy: 0\r\n}","export class EditUserName {\r\n    constructor(public countryControl:any,\r\n    public etype:string,\r\n    public firstname:string,\r\n    public lastnames:string,\r\n    public mail: string,\r\n    public title: string,\r\n    public status:boolean,\r\n    public homeCountry:string,\r\n    public countryList:any\r\n    ) { }\r\n\r\n}","export class ManagerDto {\r\n    constructor(public id:number,public name:string,public email:string){}\r\n}","export class TaDto {\r\n    constructor(public diseasestate:any,public product:any,public therapeutic:any){}\r\n}","import { NgModule, CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { AdminComponent } from '../admin.component';\nimport { AuthGuard } from 'src/app/guards';\nimport { AdminSideNavComponent } from '../admin-side-nav/admin-side-nav.component';\nimport { AdminTopNavComponent } from '../admin-top-nav/admin-top-nav.component';\nimport { CommonModule } from '@angular/common';\n\nimport { EditUserComponent} from '../home/edit-user'\nimport { GroupComponent } from '../home/groups/group.component';\nimport { GroupMappingComponent } from '../home/group-mapping/group.mapping.component';\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\nimport { NgMultiSelectDropDownModule } from 'ng-multiselect-dropdown';\nimport { QuestionBankComponent } from '../home/question-bank/question-bank.component';\nimport { SharedModule } from 'src/app/allergan/shared/shared.module';\nimport { AssetsComponent } from '../home/assets';\nimport { QuizComponent } from '../home/quiz/quiz.component';\nimport { AddAssetComponent } from '../home/assets/add-asset';\nimport { AddQuizComponent } from '../home/add-quiz/add-quiz.component';\nimport { EditQuizComponent } from '../home/edit-quiz/edit-quiz.component';\nimport { CloneQuizComponent } from '../home/clone-quiz/clone-quiz.component';\nimport { BatchImportComponent } from '../home/batch-import/batch-import.component';\nimport { AddQuestionComponent } from '../home/add-question/add-question.component';\nimport { EditQuestionComponent } from '../home/edit-question/edit-question.component';\nimport{EditAssetComponent} from '../home/assets/edit-asset/edit-asset.component';\n\n@NgModule({\n  imports: [\n    // CommonModule,\n    // ReactiveFormsModule,\n    // FormsModule,\n    SharedModule,\n    NgMultiSelectDropDownModule.forRoot(),\n    RouterModule.forChild([\n\n      { path: '', component: AdminComponent},\n      { path:'user/edit/:id', component:EditUserComponent},\n      { path: 'user/edit', component:EditUserComponent},\n      { path: 'group', component:  GroupComponent}, \n      { path: 'group/map', component:  GroupMappingComponent},   \n      { path: 'questionBank', component:  QuestionBankComponent},  \n      { path: 'asset', component:  AssetsComponent},   \n      { path: 'questionBank', component:  QuestionBankComponent},  \n      { path: 'question/add', component:  AddQuestionComponent},  \n      { path: 'question/edit/:id', component:  EditQuestionComponent},  \n      { path: 'quiz', component:  QuizComponent},  \n      { path: 'asset/add',component:AddAssetComponent},\n      { path: 'quiz/add', component:  AddQuizComponent}, \n      { path: 'edit/asset/:assetId',component:EditAssetComponent},\n      { path: 'quiz/clone/:id', component:  CloneQuizComponent}, \n      { path: 'quiz/edit/:id', component:  EditQuizComponent},  \n      { path: 'batchimport', component:  BatchImportComponent},  \n\n\n    ])],\n    declarations: [\n      AdminComponent,\n        AdminSideNavComponent ,\n          AdminTopNavComponent,\n            EditUserComponent, \n              GroupComponent,\n                GroupMappingComponent,\n                  QuestionBankComponent,\n                  AssetsComponent,\n                  QuizComponent,\n                  AddAssetComponent,\n                  QuizComponent,\n                  AddQuizComponent,\n                  EditQuizComponent,\n                  CloneQuizComponent,\n                  AddQuestionComponent,\n                  BatchImportComponent,\n                  EditQuestionComponent,\n                  EditAssetComponent,\n    ],\n    schemas: [CUSTOM_ELEMENTS_SCHEMA],\n  exports: [RouterModule]\n})\nexport class RouteRoutingModule { }\n","import { Injectable } from '@angular/core';\r\nimport { environment } from '../../../environments/environment';\r\nimport { HttpParams, HttpClient,HttpHeaders   } from '@angular/common/http';\r\nimport { ResponseContentType } from '@angular/http';\r\nimport { from } from 'rxjs';\r\nimport { EditUserName } from '../model/editUserName';\r\nimport { ManagerDto } from '../model/managerDTO';\r\nimport { TaDto } from '../model/taDto';\r\nimport { EditUser } from '../model';\r\n\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class UserService {\r\n  \r\n  constructor(private http: HttpClient) { }\r\n  getUsers() {\r\n     return this.http.get<any>(`${environment.apiUrl}/api/allergan/stp/v4/admin/users`);\r\n  }\r\n\r\n  remove(Id:Number){\r\n    return this.http.get<any>(`${environment.apiUrl}/api/allergan/stp/v4/admin/user/remove/`+Id);\r\n  }\r\n\r\n  statusChange(status:boolean,Id:Number){\r\n    return this.http.get<any>(`${environment.apiUrl}/api/allergan/stp/v4/admin/user/status/`+Id+\"/\"+status);\r\n  }\r\n\r\n  editUser(Id:Number){\r\n    return this.http.get<any>(`${environment.apiUrl}/api/allergan/stp/v4/admin/user/edit/`+Id);\r\n  }\r\n\r\n  editUserService(Id:Number,user:EditUserName,manager:ManagerDto,taDto:TaDto,userRoles:any,userGroups:any){  \r\n    return this.http.post<any>(`${environment.apiUrl}/api/allergan/stp/v4/admin/user/edit/service/`+Id, {\"user\":user,\"manager\":manager,\"area\":taDto,\"userRoles\":userRoles,\"userGroups\":userGroups});\r\n  }\r\n  \r\n}\r\n"],"sourceRoot":""}